________________________________________________________________________

This file is part of Logtalk <https://logtalk.org/>  
Copyright 1998-2021 Paulo Moura <pmoura@logtalk.org>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
________________________________________________________________________


% start by loading the design pattern sample implementations:

| ?- logtalk_load(design_patterns('structural/proxy/loader')).
...


% first, lets create a old enough driver, no other than
% Mr. Magoo itself (pedestrians be aware!):

| ?- driver::new(magoo, 'Mr. Magoo', 87).

yes


% in some of the cartoons, Mr. Magoo appears to be driving
% a 1929 Packard Model 645 touring car; we can define the
% car as a static object in the source file or create it
% dynamically:

| ?- create_object(packard_645, [extends(car)], [], []).

yes


% then we check, using the proxy object, that the driver
% can actually drive the car:

| ?- car_proxy(packard_645, magoo)::drive.

Car has been driven!
yes


% now, lets create a driver that is just too young, one of
% the children that Mr. Magoo sometimes babysits:

| ?- driver::new(wheeler, 'Wheeler', 7).

yes


% then we check, using the proxy object, that the child
% is effectively not allowed to drive the car:

| ?- car_proxy(packard_645, wheeler)::drive.

Sorry, Wheeler is too young to drive!
yes
