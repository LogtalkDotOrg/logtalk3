.. index:: single: uuid(Representation)
.. _uuid/1:

.. rst-class:: right

**object**

``uuid(Representation)``
========================

* ``Representation`` - Text representation for the UUID. Possible values are ``atom``, ``chars``, and ``codes``.


Universally unique identifier (UUID) generator.

| **Availability:** 
|    ``logtalk_load(uuid(loader))``

| **Author:** Paulo Moura
| **Version:** 0:5:0
| **Date:** 2022-11-23

| **Compilation flags:**
|    ``static, context_switching_calls``


| **Implements:**
|    ``public`` :ref:`uuid_protocol <uuid_protocol/0>`
| **Uses:**
|    :ref:`fast_random <fast_random/0>`
|    :ref:`iso8601 <iso8601/0>`
|    :ref:`list <list/0>`
|    :ref:`os <os/0>`

| **Remarks:**
|    (none)

| **Inherited public predicates:**
|     :ref:`uuid_protocol/0::random_node/1`  :ref:`uuid_protocol/0::uuid_null/1`  :ref:`uuid_protocol/0::uuid_v1/2`  :ref:`uuid_protocol/0::uuid_v4/1`  

.. contents::
   :local:
   :backlinks: top

Public predicates
-----------------

(no local declarations; see entity ancestors if any)

Protected predicates
--------------------

(no local declarations; see entity ancestors if any)

Private predicates
------------------

(no local declarations; see entity ancestors if any)

Operators
---------

(none)

.. seealso::

   :ref:`uuid <uuid/0>`, :ref:`ulid <ulid/0>`, :ref:`ulid(Representation) <ulid/1>`, :ref:`ids <ids/0>`, :ref:`ids(Representation,Bytes) <ids/2>`

