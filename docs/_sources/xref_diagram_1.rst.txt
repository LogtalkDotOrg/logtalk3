.. index:: xref_diagram(Format)
.. _xref_diagram/1:

**object**

``xref_diagram(Format)``
========================

Predicates for generating predicate call cross-referencing diagrams.

| **Author:** Paulo Moura
| **Version:** 2.31
| **Date:** 2019/4/14

| **Compilation flags:**
|    ``static, context_switching_calls``


| **Extends:**
|    ``public`` :ref:`entity_diagram(Format) <entity_diagram/1>`

Public interface
----------------

.. raw:: html

   <div id="entity/2"> </div>

.. index:: entity/2
.. _xref_diagram/1::entity/2:

``entity/2``
^^^^^^^^^^^^

Creates a diagram for a single entity using the specified options.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``entity(Entity,Options)``
| **Mode and number of proofs:**
|    ``entity(+entity_identifier,+list(compound))`` - ``one``


.. raw:: html

   <div id="entity/1"> </div>

.. index:: entity/1
.. _xref_diagram/1::entity/1:

``entity/1``
^^^^^^^^^^^^

Creates a diagram for a single entity using default options.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``entity(Entity)``
| **Mode and number of proofs:**
|    ``entity(+entity_identifier)`` - ``one``


Protected interface
-------------------

(see related entities)

Private predicates
------------------

.. raw:: html

   <div id="included_predicate_/1"> </div>

.. index:: included_predicate_/1
.. _xref_diagram/1::included_predicate_/1:

``included_predicate_/1``
^^^^^^^^^^^^^^^^^^^^^^^^^

| **Compilation flags:**
|    ``dynamic``


.. raw:: html

   <div id="referenced_predicate_/1"> </div>

.. index:: referenced_predicate_/1
.. _xref_diagram/1::referenced_predicate_/1:

``referenced_predicate_/1``
^^^^^^^^^^^^^^^^^^^^^^^^^^^

| **Compilation flags:**
|    ``dynamic``


.. raw:: html

   <div id="external_predicate_/1"> </div>

.. index:: external_predicate_/1
.. _xref_diagram/1::external_predicate_/1:

``external_predicate_/1``
^^^^^^^^^^^^^^^^^^^^^^^^^

| **Compilation flags:**
|    ``dynamic``


Operators
---------

(none)

Remarks
-------

(none)

.. seealso::

   :ref:`entity_diagram(Format) <entity_diagram/1>`, :ref:`inheritance_diagram(Format) <inheritance_diagram/1>`, :ref:`uses_diagram(Format) <uses_diagram/1>`

