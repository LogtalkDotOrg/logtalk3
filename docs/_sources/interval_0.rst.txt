.. index:: interval
.. _interval/0:

.. rst-class:: right

**object**

``interval``
============

Basic temporal interval relations. An interval is represented by a compound term, ``i/2``, with two ground arguments, the start and end points.

| **Availability:** 
|    ``logtalk_load(intervals(loader))``

| **Author:** Paulo Moura
| **Version:** 1:2:1
| **Date:** 2022-01-15

| **Compilation flags:**
|    ``static, context_switching_calls``


| **Implements:**
|    ``public`` :ref:`intervalp <intervalp/0>`
| **Aliases:**
|    ``intervalp`` ``before/2`` as ``b/2``
|    ``intervalp`` ``after/2`` as ``bi/2``
|    ``intervalp`` ``meets/2`` as ``m/2``
|    ``intervalp`` ``met_by/2`` as ``mi/2``
|    ``intervalp`` ``overlaps/2`` as ``o/2``
|    ``intervalp`` ``overlapped_by/2`` as ``oi/2``
|    ``intervalp`` ``starts/2`` as ``s/2``
|    ``intervalp`` ``started_by/2`` as ``si/2``
|    ``intervalp`` ``during/2`` as ``d/2``
|    ``intervalp`` ``contains/2`` as ``di/2``
|    ``intervalp`` ``finishes/2`` as ``f/2``
|    ``intervalp`` ``finished_by/2`` as ``fi/2``
|    ``intervalp`` ``equal/2`` as ``eq/2``

| **Remarks:**
|    (none)

| **Inherited public predicates:**
|     :ref:`intervalp/0::after/2`  :ref:`intervalp/0::before/2`  :ref:`intervalp/0::contains/2`  :ref:`intervalp/0::during/2`  :ref:`intervalp/0::equal/2`  :ref:`intervalp/0::finished_by/2`  :ref:`intervalp/0::finishes/2`  :ref:`intervalp/0::meets/2`  :ref:`intervalp/0::met_by/2`  :ref:`intervalp/0::new/3`  :ref:`intervalp/0::overlapped_by/2`  :ref:`intervalp/0::overlaps/2`  :ref:`intervalp/0::started_by/2`  :ref:`intervalp/0::starts/2`  :ref:`intervalp/0::valid/1`  

.. contents::
   :local:
   :backlinks: top

Public predicates
-----------------

(no local declarations; see entity ancestors if any)

Protected predicates
--------------------

(no local declarations; see entity ancestors if any)

Private predicates
------------------

(no local declarations; see entity ancestors if any)

Operators
---------

(none)

