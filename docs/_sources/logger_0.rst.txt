.. index:: logger
.. _logger/0:

**object**

``logger``
==========

Global logger object for logging events to files.

| **Author:** Paulo Moura
| **Version:** 1.0
| **Date:** 2011/1/6

| **Compilation flags:**
|    ``static, context_switching_calls``


| **Implements:**
|    ``public`` :ref:`loggingp <loggingp/0>`


.. contents::
   :local:
   :backlinks: top

Public interface
----------------

(see related entities)

Protected interface
-------------------

(see related entities)

Private predicates
------------------

.. raw:: html

   <div id="log_file_/2"> </div>

.. index:: log_file_/2
.. _logger/0::log_file_/2:

``log_file_/2``
^^^^^^^^^^^^^^^

Table of log files.

| **Compilation flags:**
|    ``dynamic``

| **Template:**
|    ``log_file_(Alias,File)``
| **Mode and number of proofs:**
|    ``log_file_(?atom,?nonvar)`` - ``zero_or_more``


.. raw:: html

   <div id="logging_to_file_/2"> </div>

.. index:: logging_to_file_/2
.. _logger/0::logging_to_file_/2:

``logging_to_file_/2``
^^^^^^^^^^^^^^^^^^^^^^

Table of logging file status for log files.

| **Compilation flags:**
|    ``dynamic``

| **Template:**
|    ``logging_to_file_(Alias,Status)``
| **Mode and number of proofs:**
|    ``logging_to_file_(?atom,?atom)`` - ``zero_or_more``


Operators
---------

(none)

Remarks
-------

(none)

