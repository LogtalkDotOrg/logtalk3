.. index:: help
.. _help/0:

.. rst-class:: right

**object**

``help``
========

Command-line help for Logtalk libraries, entities, plus built-in control constructs, predicates, non-terminals, and methods.

| **Availability:** 
|    ``logtalk_load(help(loader))``

| **Author:** Paulo Moura
| **Version:** 0:33:0
| **Date:** 2023-06-01

| **Compilation flags:**
|    ``static, context_switching_calls, complements(allow)``


| **Implements:**
|    ``public`` :ref:`forwarding <forwarding/0>`
| **Uses:**
|    :ref:`atom <atom/0>`
|    :ref:`os <os/0>`
|    :ref:`user <user/0>`

| **Remarks:**
|    (none)

| **Inherited public predicates:**
|     :ref:`help_info_support/0::apis/0`  :ref:`help_info_support/0::apis/1`  :ref:`forwarding/0::forward/1`  :ref:`help_info_support/0::handbook/0`  :ref:`help_info_support/0::handbook/1`  

.. contents::
   :local:
   :backlinks: top

Public predicates
-----------------

.. index:: help/0
.. _help/0::help/0:

``help/0``
^^^^^^^^^^

Prints instructions on how to use the help tool.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``help`` - ``one``


------------

.. index:: (/)/2
.. _help/0::(/)/2:

``(/)/2``
^^^^^^^^^

Provides help on the ``Functor/Arity`` built-in control construct, directive, predicate, or method.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``Functor/Arity``
| **Mode and number of proofs:**
|    ``+atom/ +integer`` - ``zero_or_one``


------------

.. index:: (//)/2
.. _help/0::(//)/2:

``(//)/2``
^^^^^^^^^^

Provides help on the ``Functor//Arity`` built-in non-terminal.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``Functor//Arity``
| **Mode and number of proofs:**
|    ``+atom// +integer`` - ``zero_or_one``


------------

.. index:: completion/2
.. _help/0::completion/2:

``completion/2``
^^^^^^^^^^^^^^^^

Provides a completion pair, ``Completion-Page``, for a given prefix.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``completion(Prefix,Completion)``
| **Mode and number of proofs:**
|    ``completion(+atom,-pair)`` - ``zero_or_more``


------------

.. index:: completions/2
.. _help/0::completions/2:

``completions/2``
^^^^^^^^^^^^^^^^^

Provides a list of completions pairs, ``Completion-Page``, for a given prefix.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``completions(Prefix,Completions)``
| **Mode and number of proofs:**
|    ``completions(+atom,-lists(pair))`` - ``zero_or_more``


------------

.. index:: built_in_directive/4
.. _help/0::built_in_directive/4:

``built_in_directive/4``
^^^^^^^^^^^^^^^^^^^^^^^^

Provides access to the HTML documenting files describing built-in directives.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``built_in_directive(Functor,Arity,Directory,Basename)``
| **Mode and number of proofs:**
|    ``built_in_directive(?atom,?integer,-atom,-atom)`` - ``zero_or_more``


------------

.. index:: built_in_predicate/4
.. _help/0::built_in_predicate/4:

``built_in_predicate/4``
^^^^^^^^^^^^^^^^^^^^^^^^

Provides access to the HTML documenting files describing built-in predicates.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``built_in_predicate(Functor,Arity,Directory,Basename)``
| **Mode and number of proofs:**
|    ``built_in_predicate(?atom,?integer,-atom,-atom)`` - ``zero_or_more``


------------

.. index:: built_in_method/4
.. _help/0::built_in_method/4:

``built_in_method/4``
^^^^^^^^^^^^^^^^^^^^^

Provides access to the HTML documenting files describing built-in methods.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``built_in_method(Functor,Arity,Directory,Basename)``
| **Mode and number of proofs:**
|    ``built_in_method(?atom,?integer,-atom,-atom)`` - ``zero_or_more``


------------

.. index:: control_construct/4
.. _help/0::control_construct/4:

``control_construct/4``
^^^^^^^^^^^^^^^^^^^^^^^

Provides access to the HTML documenting files describing built-in control constructs.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``control_construct(Functor,Arity,Directory,Basename)``
| **Mode and number of proofs:**
|    ``control_construct(?atom,?integer,-atom,-atom)`` - ``zero_or_more``


------------

.. index:: built_in_non_terminal/4
.. _help/0::built_in_non_terminal/4:

``built_in_non_terminal/4``
^^^^^^^^^^^^^^^^^^^^^^^^^^^

Provides access to the HTML documenting files describing built-in DCG non-terminals.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``built_in_non_terminal(Functor,Arity,Directory,Basename)``
| **Mode and number of proofs:**
|    ``built_in_non_terminal(?atom,?integer,-atom,-atom)`` - ``zero_or_more``


------------

.. index:: library/0
.. _help/0::library/0:

``library/0``
^^^^^^^^^^^^^

Provides help on the standard Logtalk library.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``library`` - ``one``


------------

.. index:: library/1
.. _help/0::library/1:

``library/1``
^^^^^^^^^^^^^

Provides help on the standard Logtalk libraries, library predicates, and library non-terminals.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``library(Topic)``
| **Mode and number of proofs:**
|    ``library(+atom)`` - ``zero_or_one``
|    ``library(+predicate_indicator)`` - ``zero_or_one``
|    ``library(+non_terminal_indicator)`` - ``zero_or_one``


------------

.. index:: entity/1
.. _help/0::entity/1:

``entity/1``
^^^^^^^^^^^^

Provides help on Logtalk entities (objects, protocols, or categories).

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``entity(Entity)``
| **Mode and number of proofs:**
|    ``entity(+entity_identifier)`` - ``zero_or_one``


------------

.. index:: manuals/0
.. _help/0::manuals/0:

``manuals/0``
^^^^^^^^^^^^^

Provides access to the Logtalk User and Reference manuals.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``manuals`` - ``one``


------------

Protected predicates
--------------------

(no local declarations; see entity ancestors if any)

Private predicates
------------------

(no local declarations; see entity ancestors if any)

Operators
---------

(none)

