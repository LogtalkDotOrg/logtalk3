
.. _entity_index:

Entities
============

To load an entity, always load the library that includes it using the goal ``logtalk_load(library_name(loader))`` instead of loading just the entity. The library loader file ensures that all the required dependencies are also loaded.



Categories
----------

.. toctree::
   :maxdepth: 1



   arbitrary <arbitrary_0>
   assertions_messages <assertions_messages_0>
   best_first <best_first_0>
   class_hierarchy <class_hierarchy_0>
   code_metric <code_metric_0>
   code_metrics_messages <code_metrics_messages_0>
   code_metrics_utilities <code_metrics_utilities_0>
   core_messages <core_messages_0>
   counters <counters_0>
   dead_code_scanner_messages <dead_code_scanner_messages_0>
   debugger_messages <debugger_messages_0>
   diagram(Format) <diagram_1>
   directory_diagram(Format) <directory_diagram_1>
   file_diagram(Format) <file_diagram_1>
   flags <flags_0>
   flatting <flatting_0>
   lgtunit_messages <lgtunit_messages_0>
   library_diagram(Format) <library_diagram_1>
   logging <logging_0>
   monitor <monitor_0>
   observer <observer_0>
   os_types <os_types_0>
   proto_hierarchy <proto_hierarchy_0>
   read_file <read_file_0>
   statistics <statistics_0>
   subject <subject_0>

Objects
-------

.. toctree::
   :maxdepth: 1



   a_star_interpreter(W) <a_star_interpreter_1>
   after_event_registry <after_event_registry_0>
   assertions <assertions_0>
   assertions(Mode) <assertions_1>
   assignvars <assignvars_0>
   atom <atom_0>
   atomic <atomic_0>
   automation_report <automation_report_0>
   avltree <avltree_0>
   backend_adapter_hook <backend_adapter_hook_0>
   backend_random <backend_random_0>
   before_event_registry <before_event_registry_0>
   benchmark_generators <benchmark_generators_0>
   bfs_interpreter <bfs_interpreter_0>
   bintree <bintree_0>
   bup_interpreter <bup_interpreter_0>
   callable <callable_0>
   cc_metric <cc_metric_0>
   character <character_0>
   code_metrics <code_metrics_0>
   compound <compound_0>
   coroutining <coroutining_0>
   counter <counter_0>
   coupling_metric <coupling_metric_0>
   coverage_report <coverage_report_0>
   date <date_0>
   dead_code_scanner <dead_code_scanner_0>
   debug_expansion(Mode) <debug_expansion_1>
   debug_messages <debug_messages_0>
   debugger <debugger_0>
   default_workflow_hook <default_workflow_hook_0>
   demodb <demodb_0>
   dfs_interpreter <dfs_interpreter_0>
   diagrams <diagrams_0>
   diagrams(Format) <diagrams_1>
   difflist <difflist_0>
   directory_dependency_diagram <directory_dependency_diagram_0>
   directory_dependency_diagram(Format) <directory_dependency_diagram_1>
   directory_load_diagram <directory_load_diagram_0>
   directory_load_diagram(Format) <directory_load_diagram_1>
   dit_metric <dit_metric_0>
   doc_metric <doc_metric_0>
   doclet <doclet_0>
   dot_graph_language <dot_graph_language_0>
   edcg <edcg_0>
   either <either_0>
   entity_diagram <entity_diagram_0>
   entity_diagram(Format) <entity_diagram_1>
   event_registry <event_registry_0>
   expand_library_alias_paths <expand_library_alias_paths_0>
   expected <expected_0>
   expected(Expected) <expected_1>
   fast_random <fast_random_0>
   file_dependency_diagram <file_dependency_diagram_0>
   file_dependency_diagram(Format) <file_dependency_diagram_1>
   file_load_diagram <file_load_diagram_0>
   file_load_diagram(Format) <file_load_diagram_1>
   float <float_0>
   gensym <gensym_0>
   grammar_rules_hook <grammar_rules_hook_0>
   graph_language_registry <graph_language_registry_0>
   halstead_metric <halstead_metric_0>
   halstead_metric(Stroud) <halstead_metric_1>
   heap(Order) <heap_1>
   help <help_0>
   heuristic_expansion(A) <heuristic_expansion_1>
   hook_pipeline(Pipeline) <hook_pipeline_1>
   hook_set(Set) <hook_set_1>
   iddfs_interpreter(Increment) <iddfs_interpreter_1>
   identity_hook <identity_hook_0>
   inheritance_diagram <inheritance_diagram_0>
   inheritance_diagram(Format) <inheritance_diagram_1>
   integer <integer_0>
   interval <interval_0>
   iso8601 <iso8601_0>
   java <java_0>
   java(Reference) <java_1>
   java(Reference,ReturnValue) <java_2>
   java_hook <java_hook_0>
   lgtdoc <lgtdoc_0>
   lgtunit <lgtunit_0>
   library_dependency_diagram <library_dependency_diagram_0>
   library_dependency_diagram(Format) <library_dependency_diagram_1>
   library_load_diagram <library_load_diagram_0>
   library_load_diagram(Format) <library_load_diagram_1>
   list <list_0>
   list(Type) <list_1>
   logger <logger_0>
   logtalk <logtalk_0>
   loop <loop_0>
   magic <magic_0>
   magic_expansion(A) <magic_expansion_1>
   maxheap <maxheap_0>
   maybe <maybe_0>
   meta <meta_0>
   meta_compiler <meta_compiler_0>
   metagol <metagol_0>
   minheap <minheap_0>
   minimal_output <minimal_output_0>
   modules_diagram_support <modules_diagram_support_0>
   natural <natural_0>
   noc_metric <noc_metric_0>
   nor_metric <nor_metric_0>
   number <number_0>
   numberlist <numberlist_0>
   object_wrapper_hook <object_wrapper_hook_0>
   optional <optional_0>
   optional(Optional) <optional_1>
   os <os_0>
   pairs <pairs_0>
   pddl <pddl_0>
   population <population_0>
   ports_profiler <ports_profiler_0>
   print_goal_hook <print_goal_hook_0>
   prolog_module_hook(Module) <prolog_module_hook_1>
   queue <queue_0>
   random <random_0>
   rbtree <rbtree_0>
   reader <reader_0>
   redis <redis_0>
   rule_expansion(A) <rule_expansion_1>
   sample <sample_0>
   set <set_0>
   set(Type) <set_1>
   shell <shell_0>
   shell(Interpreters) <shell_1>
   shell_expansion(A) <shell_expansion_1>
   size_metric <size_metric_0>
   streamvars <streamvars_0>
   suppress_goal_hook <suppress_goal_hook_0>
   tap_output <tap_output_0>
   tap_report <tap_report_0>
   term <term_0>
   time <time_0>
   timeout <timeout_0>
   toychrdb <toychrdb_0>
   tutor <tutor_0>
   type <type_0>
   upn_metric <upn_metric_0>
   user <user_0>
   uses_diagram <uses_diagram_0>
   uses_diagram(Format) <uses_diagram_1>
   varlist <varlist_0>
   wrapper <wrapper_0>
   write_to_stream_hook(Stream) <write_to_stream_hook_1>
   write_to_stream_hook(Stream,Options) <write_to_stream_hook_2>
   xml <xml_0>
   xref_diagram <xref_diagram_0>
   xref_diagram(Format) <xref_diagram_1>
   xunit_output <xunit_output_0>
   xunit_report <xunit_report_0>
   zlist <zlist_0>

Protocols
---------

.. toctree::
   :maxdepth: 1



   assignvarsp <assignvarsp_0>
   characterp <characterp_0>
   class_hierarchyp <class_hierarchyp_0>
   cloning <cloning_0>
   comparingp <comparingp_0>
   databasep <databasep_0>
   datep <datep_0>
   debuggerp <debuggerp_0>
   dictionaryp <dictionaryp_0>
   event_registryp <event_registryp_0>
   expanding <expanding_0>
   flags_validator <flags_validator_0>
   forwarding <forwarding_0>
   graph_language_protocol <graph_language_protocol_0>
   heapp <heapp_0>
   hierarchyp <hierarchyp_0>
   interpreterp <interpreterp_0>
   intervalp <intervalp_0>
   java_access_protocol <java_access_protocol_0>
   java_utils_protocol <java_utils_protocol_0>
   lgtdocp <lgtdocp_0>
   listp <listp_0>
   loggingp <loggingp_0>
   loopp <loopp_0>
   metagol_example_protocol <metagol_example_protocol_0>
   metap <metap_0>
   monitoring <monitoring_0>
   monitorp <monitorp_0>
   numberlistp <numberlistp_0>
   osp <osp_0>
   proto_hierarchyp <proto_hierarchyp_0>
   queuep <queuep_0>
   randomp <randomp_0>
   setp <setp_0>
   statisticsp <statisticsp_0>
   termp <termp_0>
   timep <timep_0>
   varlistp <varlistp_0>
   zipperp <zipperp_0>

