.. index:: sequence_grammars
.. _sequence_grammars/0:

.. rst-class:: right

**object**

``sequence_grammars``
=====================

Sequence grammars.

| **Availability:** 
|    ``logtalk_load(grammars(loader))``

| **Author:** Paulo Moura
| **Version:** 0:2:0
| **Date:** 2023-11-27

| **Compilation flags:**
|    ``static, context_switching_calls``


| **Dependencies:**
|   (none)


| **Remarks:**
|    (none)

| **Inherited public predicates:**
|    (none)

.. contents::
   :local:
   :backlinks: top

Public predicates
-----------------

.. index:: zero_or_more//1
.. _sequence_grammars/0::zero_or_more//1:

``zero_or_more//1``
^^^^^^^^^^^^^^^^^^^

Describes a sequence of zero or more terminals.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``zero_or_more(Terminals)``
| **Mode and number of proofs:**
|    ``zero_or_more(-list(atomic))`` - ``zero_or_one``


------------

.. index:: one_or_more//1
.. _sequence_grammars/0::one_or_more//1:

``one_or_more//1``
^^^^^^^^^^^^^^^^^^

Describes a sequence of one or more terminals.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``one_or_more(Terminals)``
| **Mode and number of proofs:**
|    ``one_or_more(-list(atomic))`` - ``zero_or_one``


------------

.. index:: zero_or_more//0
.. _sequence_grammars/0::zero_or_more//0:

``zero_or_more//0``
^^^^^^^^^^^^^^^^^^^

Describes a sequence of zero or more terminals.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``zero_or_more`` - ``one``


------------

.. index:: one_or_more//0
.. _sequence_grammars/0::one_or_more//0:

``one_or_more//0``
^^^^^^^^^^^^^^^^^^

Describes a sequence of one or more terminals.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``one_or_more`` - ``one``


------------

.. index:: lazy_without//2
.. _sequence_grammars/0::lazy_without//2:

``lazy_without//2``
^^^^^^^^^^^^^^^^^^^

Lazily collect input terminals until one of the stop terminals is found. The stop terminals are excluded from the collected terminals.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``lazy_without(StopTerminals,Terminals)``
| **Mode and number of proofs:**
|    ``lazy_without(+list(atomic),-list(atomic))`` - ``zero_or_more``


------------

.. index:: greedy_without//2
.. _sequence_grammars/0::greedy_without//2:

``greedy_without//2``
^^^^^^^^^^^^^^^^^^^^^

Greedly collect input terminals until one of the stop terminals is found. The stop terminals are excluded from the collected terminals.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``greedy_without(StopTerminals,Terminals)``
| **Mode and number of proofs:**
|    ``greedy_without(+list(atomic),-list(atomic))`` - ``one``


------------

.. index:: rest//1
.. _sequence_grammars/0::rest//1:

``rest//1``
^^^^^^^^^^^

Rest of the input terminals.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``rest(Terminals)``
| **Mode and number of proofs:**
|    ``rest(-list(atomic))`` - ``zero_or_one``


------------

Protected predicates
--------------------

(none)

Private predicates
------------------

(none)

Operators
---------

(none)

