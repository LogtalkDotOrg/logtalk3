.. index:: blank_grammars(Format)
.. _blank_grammars/1:

.. rst-class:: right

**object**

``blank_grammars(Format)``
==========================

Blank grammars.

| **Author:** Paulo Moura
| **Version:** 0:3:0
| **Date:** 2022-02-16

| **Compilation flags:**
|    ``static, context_switching_calls``


| **Dependencies:**
|   (none)


| **Remarks:**
|    (none)

| **Inherited public predicates:**
|    (none)

.. contents::
   :local:
   :backlinks: top

Public predicates
-----------------

.. index:: white_space//0
.. _blank_grammars/1::white_space//0:

``white_space//0``
^^^^^^^^^^^^^^^^^^

Consumes a single space or tab.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``white_space`` - ``zero_or_one``


------------

.. index:: white_spaces//0
.. _blank_grammars/1::white_spaces//0:

``white_spaces//0``
^^^^^^^^^^^^^^^^^^^

Consumes zero or more spaces and tabs.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``white_spaces`` - ``one``


------------

.. index:: space//0
.. _blank_grammars/1::space//0:

``space//0``
^^^^^^^^^^^^

Consumes a single space.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``space`` - ``zero_or_one``


------------

.. index:: spaces//0
.. _blank_grammars/1::spaces//0:

``spaces//0``
^^^^^^^^^^^^^

Consumes zero or more spaces.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``spaces`` - ``one``


------------

.. index:: tab//0
.. _blank_grammars/1::tab//0:

``tab//0``
^^^^^^^^^^

Consumes a single tab.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``tab`` - ``zero_or_one``


------------

.. index:: tabs//0
.. _blank_grammars/1::tabs//0:

``tabs//0``
^^^^^^^^^^^

Consumes zero or more tabs.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``tabs`` - ``one``


------------

.. index:: new_line//0
.. _blank_grammars/1::new_line//0:

``new_line//0``
^^^^^^^^^^^^^^^

Consumes a single new line.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``new_line`` - ``zero_or_one``


------------

.. index:: new_lines//0
.. _blank_grammars/1::new_lines//0:

``new_lines//0``
^^^^^^^^^^^^^^^^

Consumes zero or more new lines.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``new_lines`` - ``one``


------------

.. index:: blank//0
.. _blank_grammars/1::blank//0:

``blank//0``
^^^^^^^^^^^^

Consumes a single space, tab, vertical tab, line feed, or new line.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``blank`` - ``zero_or_one``


------------

.. index:: blanks//0
.. _blank_grammars/1::blanks//0:

``blanks//0``
^^^^^^^^^^^^^

Consumes zero or more spaces, tabs, vertical tabs, line feeds, or new lines.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``blanks`` - ``one``


------------

.. index:: non_blank//1
.. _blank_grammars/1::non_blank//1:

``non_blank//1``
^^^^^^^^^^^^^^^^

Returns a single non-blank character or character code.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``non_blank(-atomic)`` - ``zero_or_one``


------------

.. index:: non_blanks//1
.. _blank_grammars/1::non_blanks//1:

``non_blanks//1``
^^^^^^^^^^^^^^^^^

Returns a (possibly empty) list of non-blank characters or character codes.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``non_blanks(-list(atomic))`` - ``one``


------------

.. index:: control//0
.. _blank_grammars/1::control//0:

``control//0``
^^^^^^^^^^^^^^

Consumes a single control character or character code. Support for the null control character depends on the Prolog backend.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``control`` - ``zero_or_one``


------------

.. index:: controls//0
.. _blank_grammars/1::controls//0:

``controls//0``
^^^^^^^^^^^^^^^

Consumes zero or more control characters or character codes. Support for the null control character depends on the Prolog backend.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``controls`` - ``one``


------------

Protected predicates
--------------------

(none)

Private predicates
------------------

(none)

Operators
---------

(none)

