.. index:: random
.. _random/0:

.. rst-class:: right

**object**

``random``
==========

Portable random number generator predicates. Core predicates originally written by Richard O'Keefe. Based on algorithm AS 183 from Applied Statistics.

| **Author:** Paulo Moura
| **Version:** 2:7:0
| **Date:** 2020-02-01

| **Compilation flags:**
|    ``static, context_switching_calls``


| **Implements:**
|    ``public`` :ref:`randomp <randomp/0>`
| **Uses:**
|    :ref:`list <list/0>`

| **Remarks:**


   - *Multiple random number generators:* To define multiple random number generators, simply extend this object. The derived objects must send to *self* the ``reset_seed/0`` message.

| **Inherited public predicates:**
|     :ref:`randomp/0::between/3`  :ref:`randomp/0::enumerate/2`  :ref:`randomp/0::get_seed/1`  :ref:`randomp/0::maybe/0`  :ref:`randomp/0::maybe/1`  :ref:`randomp/0::maybe/2`  :ref:`randomp/0::maybe_call/1`  :ref:`randomp/0::maybe_call/2`  :ref:`randomp/0::member/2`  :ref:`randomp/0::permutation/2`  :ref:`randomp/0::random/1`  :ref:`randomp/0::random/3`  :ref:`randomp/0::randseq/4`  :ref:`randomp/0::randset/4`  :ref:`randomp/0::select/3`  :ref:`randomp/0::sequence/4`  :ref:`randomp/0::set/4`  :ref:`randomp/0::set_seed/1`  

.. contents::
   :local:
   :backlinks: top

Public predicates
-----------------

.. raw:: html

   <div id="reset_seed/0"> </div>

.. index:: reset_seed/0
.. _random/0::reset_seed/0:

``reset_seed/0``
^^^^^^^^^^^^^^^^

Resets the random generator seed to its default value. Use ``get_seed/1`` and ``set_seed/1`` instead if you need reproducibility.

| **Compilation flags:**
|    ``static, synchronized``

| **Mode and number of proofs:**
|    ``reset_seed`` - ``one``


------------

.. raw:: html

   <div id="randomize/1"> </div>

.. index:: randomize/1
.. _random/0::randomize/1:

``randomize/1``
^^^^^^^^^^^^^^^

Randomizes the random generator using a positive integer to compute a new seed.

| **Compilation flags:**
|    ``static, synchronized``

| **Template:**
|    ``randomize(Seed)``
| **Mode and number of proofs:**
|    ``randomize(+positive_integer)`` - ``one``


------------

Protected predicates
--------------------

(no local declarations; see entity ancestors if any)

Private predicates
------------------

.. raw:: html

   <div id="seed_/3"> </div>

.. index:: seed_/3
.. _random/0::seed_/3:

``seed_/3``
^^^^^^^^^^^

Stores the current random generator seed values.

| **Compilation flags:**
|    ``dynamic``

| **Template:**
|    ``seed_(S0,S1,S2)``
| **Mode and number of proofs:**
|    ``seed_(-integer,-integer,-integer)`` - ``one``


------------

Operators
---------

(none)

.. seealso::

   :ref:`fast_random <fast_random/0>`, :ref:`backend_random <backend_random/0>`

