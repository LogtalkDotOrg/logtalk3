.. index:: set(Type)
.. _set/1:

.. rst-class:: right

**object**

``set(Type)``
=============

Set predicates with elements constrained to a single type and custom comparing rules.

| **Author:** Paulo Moura and Adrian Arroyo
| **Version:** 1:24:0
| **Date:** 2022-02-03

| **Compilation flags:**
|    ``static, context_switching_calls``


| **Extends:**
|    ``public`` :ref:`set <set/0>`
| **Uses:**
|    :ref:`list <list/0>`

| **Remarks:**
|    (none)

| **Inherited public predicates:**
|     :ref:`comparingp/0::(<)/2`  :ref:`comparingp/0::(=:=)/2`  :ref:`comparingp/0::(=<)/2`  :ref:`comparingp/0::(=\=)/2`  :ref:`comparingp/0::(>)/2`  :ref:`comparingp/0::(>=)/2`  :ref:`setp/0::as_list/2`  :ref:`setp/0::as_set/2`  :ref:`termp/0::check/1`  :ref:`setp/0::delete/3`  :ref:`termp/0::depth/2`  :ref:`setp/0::disjoint/2`  :ref:`setp/0::empty/1`  :ref:`setp/0::equal/2`  :ref:`termp/0::ground/1`  :ref:`setp/0::insert/3`  :ref:`setp/0::insert_all/3`  :ref:`setp/0::intersect/2`  :ref:`setp/0::intersection/3`  :ref:`setp/0::intersection/4`  :ref:`setp/0::member/2`  :ref:`setp/0::memberchk/2`  :ref:`termp/0::new/1`  :ref:`termp/0::numbervars/1`  :ref:`termp/0::numbervars/3`  :ref:`termp/0::occurs/2`  :ref:`setp/0::powerset/2`  :ref:`setp/0::product/3`  :ref:`setp/0::select/3`  :ref:`setp/0::selectchk/3`  :ref:`termp/0::singletons/2`  :ref:`setp/0::size/2`  :ref:`setp/0::subset/2`  :ref:`termp/0::subsumes/2`  :ref:`termp/0::subterm/2`  :ref:`setp/0::subtract/3`  :ref:`setp/0::symdiff/3`  :ref:`setp/0::union/3`  :ref:`setp/0::union/4`  :ref:`termp/0::valid/1`  :ref:`termp/0::variables/2`  :ref:`termp/0::variant/2`  :ref:`termp/0::varnumbers/2`  :ref:`termp/0::varnumbers/3`  

.. contents::
   :local:
   :backlinks: top

Public predicates
-----------------

(no local declarations; see entity ancestors if any)

Protected predicates
--------------------

(no local declarations; see entity ancestors if any)

Private predicates
------------------

.. raw:: html

   <div id="sort/2"> </div>

.. index:: sort/2
.. _set/1::sort/2:

``sort/2``
^^^^^^^^^^

Sorts a list in ascending order.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``sort(List,Sorted)``
| **Mode and number of proofs:**
|    ``sort(+list,-list)`` - ``one``


------------

.. raw:: html

   <div id="partition/4"> </div>

.. index:: partition/4
.. _set/1::partition/4:

``partition/4``
^^^^^^^^^^^^^^^

List partition in two sub-lists using a pivot.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``partition(List,Pivot,Lowers,Biggers)``
| **Mode and number of proofs:**
|    ``partition(+list,+nonvar,-list,-list)`` - ``one``


------------

Operators
---------

(none)

