.. index:: single: base64url
.. _base64url/0:

.. rst-class:: right

**object**

``base64url``
=============

Base64URL parser and generator.

| **Availability:** 
|    ``logtalk_load(base64(loader))``

| **Author:** Paulo Moura
| **Version:** 0:9:0
| **Date:** 2021-03-10

| **Compilation flags:**
|    ``static, context_switching_calls``


| **Dependencies:**
|   (none)


| **Remarks:**
|    (none)

| **Inherited public predicates:**
|    (none)

.. contents::
   :local:
   :backlinks: top

Public predicates
-----------------

.. index:: parse/2
.. _base64url/0::parse/2:

``parse/2``
^^^^^^^^^^^

Parses the Base64URL data from the given source (``atom(Atom)``, ``chars(List)``, or ``codes(List)`` into a URL (using the same format as the source).

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``parse(Source,URL)``
| **Mode and number of proofs:**
|    ``parse(++compound,--types([atom,chars,codes]))`` - ``one_or_error``


------------

.. index:: generate/2
.. _base64url/0::generate/2:

``generate/2``
^^^^^^^^^^^^^^

Generates Base64URL data in the representation specified in the first argument (``atom(Atom)``, ``chars(List)``, or ``codes(List)`` for the given URL (given in the same format as the sink).

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``generate(Sink,URL)``
| **Mode and number of proofs:**
|    ``generate(+compound,+types([atom,chars,codes]))`` - ``one_or_error``


------------

Protected predicates
--------------------

(none)

Private predicates
------------------

(none)

Operators
---------

(none)

