.. index:: library_dependency_diagram(Format)
.. _library_dependency_diagram/1:

.. rst-class:: right

**object**

``library_dependency_diagram(Format)``
======================================

* ``Format`` - Graph language file format.


Predicates for generating library dependency diagrams. A dependency exists when an entity in one library makes a reference to an entity in another library.

| **Author:** Paulo Moura
| **Version:** 2:30:0
| **Date:** 2022-05-23

| **Compilation flags:**
|    ``static, context_switching_calls``


| **Imports:**
|    ``public`` :ref:`library_diagram(Format) <library_diagram/1>`
| **Uses:**
|    :ref:`entity_diagram(Format) <entity_diagram/1>`
|    :ref:`list <list/0>`
|    :ref:`logtalk <logtalk/0>`
|    :ref:`modules_diagram_support <modules_diagram_support/0>`

| **Remarks:**
|    (none)

| **Inherited public predicates:**
|     :ref:`diagram/1::all_files/0`  :ref:`diagram/1::all_files/1`  :ref:`diagram/1::all_libraries/0`  :ref:`diagram/1::all_libraries/1`  :ref:`options_protocol/0::check_option/1`  :ref:`options_protocol/0::check_options/1`  :ref:`options_protocol/0::default_option/1`  :ref:`options_protocol/0::default_options/1`  :ref:`diagram/1::diagram_description/1`  :ref:`diagram/1::diagram_name_suffix/1`  :ref:`diagram/1::directories/2`  :ref:`diagram/1::directories/3`  :ref:`diagram/1::directory/1`  :ref:`diagram/1::directory/2`  :ref:`diagram/1::directory/3`  :ref:`diagram/1::files/1`  :ref:`diagram/1::files/2`  :ref:`diagram/1::files/3`  :ref:`diagram/1::format_object/1`  :ref:`diagram/1::libraries/1`  :ref:`diagram/1::libraries/2`  :ref:`diagram/1::libraries/3`  :ref:`diagram/1::library/1`  :ref:`diagram/1::library/2`  :ref:`options_protocol/0::option/2`  :ref:`options_protocol/0::option/3`  :ref:`diagram/1::rdirectory/1`  :ref:`diagram/1::rdirectory/2`  :ref:`diagram/1::rdirectory/3`  :ref:`diagram/1::rlibrary/1`  :ref:`diagram/1::rlibrary/2`  :ref:`options_protocol/0::valid_option/1`  :ref:`options_protocol/0::valid_options/1`  

.. contents::
   :local:
   :backlinks: top

Public predicates
-----------------

(no local declarations; see entity ancestors if any)

Protected predicates
--------------------

(no local declarations; see entity ancestors if any)

Private predicates
------------------

.. index:: sub_diagram_/1
.. _library_dependency_diagram/1::sub_diagram_/1:

``sub_diagram_/1``
^^^^^^^^^^^^^^^^^^

Table of library sub-diagrams to support their generation.

| **Compilation flags:**
|    ``dynamic``

| **Template:**
|    ``sub_diagram_(Library)``
| **Mode and number of proofs:**
|    ``sub_diagram_(?atom)`` - ``zero_or_more``


------------

Operators
---------

(none)

.. seealso::

   :ref:`library_load_diagram(Format) <library_load_diagram/1>`, :ref:`directory_load_diagram(Format) <directory_load_diagram/1>`, :ref:`file_load_diagram(Format) <file_load_diagram/1>`, :ref:`entity_diagram(Format) <entity_diagram/1>`

