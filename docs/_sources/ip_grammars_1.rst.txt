.. index:: ip_grammars(Format)
.. _ip_grammars/1:

.. rst-class:: right

**object**

``ip_grammars(Format)``
=======================

IP address grammars.

| **Author:** Paulo Moura
| **Version:** 0:1:0
| **Date:** 2022-02-15

| **Compilation flags:**
|    ``static, context_switching_calls``


| **Uses:**
|    :ref:`number_grammars(Format) <number_grammars/1>`

| **Remarks:**
|    (none)

| **Inherited public predicates:**
|     :ref:`listp/0::member/2`  :ref:`listp/0::memberchk/2`  :ref:`listp/0::sort/4`  :ref:`logtalk/0::print_message/3`  :ref:`type/0::valid/2`  :ref:`listp/0::member_var/2`  

.. contents::
   :local:
   :backlinks: top

Public predicates
-----------------

.. raw:: html

   <div id="ipv4//1"> </div>

.. index:: ipv4//1
.. _ip_grammars/1::ipv4//1:

``ipv4//1``
^^^^^^^^^^^

Parses an IPv4 network address in the format XXX.XXX.XXX.XXX where each XXX is an octet (i.e. an integer between 0 and 255).

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``ipv4(?list(integer))`` - ``zero_or_one``


------------

.. raw:: html

   <div id="ipv6//1"> </div>

.. index:: ipv6//1
.. _ip_grammars/1::ipv6//1:

``ipv6//1``
^^^^^^^^^^^

Parses an IPv6 network address in the format XXXX.XXXX.XXXX.XXXX.XXXX.XXXX.XXXX.XXXX where each X is a hexadecimal digit.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``ipv6(?list(integer))`` - ``one``


------------

Protected predicates
--------------------

(no local declarations; see entity ancestors if any)

Private predicates
------------------

(no local declarations; see entity ancestors if any)

Operators
---------

(none)

