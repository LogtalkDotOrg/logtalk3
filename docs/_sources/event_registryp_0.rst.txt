.. index:: event_registryp
.. _event_registryp/0:

.. rst-class:: right

**protocol**

``event_registryp``
===================

Event registry protocol.

| **Author:** Paulo Moura
| **Version:** 1.1
| **Date:** 2009/10/8

| **Compilation flags:**
|    ``static``


| **Dependencies:**
|   (none)


| **Remarks:**
|    (none)

| **Inherited public predicates:**
|    (none)

.. contents::
   :local:
   :backlinks: top

.. raw:: html

   </div>

Public predicates
-----------------

.. raw:: html

   <div id="del_monitors/4"> </div>

.. index:: del_monitors/4
.. _event_registryp/0::del_monitors/4:

``del_monitors/4``
^^^^^^^^^^^^^^^^^^

Deletes all matching monitored events.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``del_monitors(Object,Message,Sender,Monitor)``
| **Mode and number of proofs:**
|    ``del_monitors(?object_identifier,?nonvar,?object_identifier,?object_identifier)`` - ``one``


------------

.. raw:: html

   <div id="del_monitors/0"> </div>

.. index:: del_monitors/0
.. _event_registryp/0::del_monitors/0:

``del_monitors/0``
^^^^^^^^^^^^^^^^^^

Deletes all monitored events.

| **Compilation flags:**
|    ``static``

| **Mode and number of proofs:**
|    ``del_monitors`` - ``one``


------------

.. raw:: html

   <div id="monitor/1"> </div>

.. index:: monitor/1
.. _event_registryp/0::monitor/1:

``monitor/1``
^^^^^^^^^^^^^

Monitor is an object playing the role of a monitor.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``monitor(Monitor)``
| **Mode and number of proofs:**
|    ``monitor(-object_identifier)`` - ``zero_or_more``
|    ``monitor(+object_identifier)`` - ``zero_or_one``


------------

.. raw:: html

   <div id="monitor/4"> </div>

.. index:: monitor/4
.. _event_registryp/0::monitor/4:

``monitor/4``
^^^^^^^^^^^^^

True if the arguments describe a currently defined monitored event.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``monitor(Object,Message,Sender,Monitor)``
| **Mode and number of proofs:**
|    ``monitor(?object_identifier,?nonvar,?object_identifier,?object_identifier)`` - ``zero_or_more``


------------

.. raw:: html

   <div id="monitored/1"> </div>

.. index:: monitored/1
.. _event_registryp/0::monitored/1:

``monitored/1``
^^^^^^^^^^^^^^^

Returns a list of all currently monitored objects.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``monitored(Objects)``
| **Mode and number of proofs:**
|    ``monitored(-list(object_identifier))`` - ``one``


------------

.. raw:: html

   <div id="monitors/1"> </div>

.. index:: monitors/1
.. _event_registryp/0::monitors/1:

``monitors/1``
^^^^^^^^^^^^^^

Returns a list of all current monitors.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``monitors(Monitors)``
| **Mode and number of proofs:**
|    ``monitors(-list(object_identifier))`` - ``one``


------------

.. raw:: html

   <div id="set_monitor/4"> </div>

.. index:: set_monitor/4
.. _event_registryp/0::set_monitor/4:

``set_monitor/4``
^^^^^^^^^^^^^^^^^

Sets a monitor for the set of matching events.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``set_monitor(Object,Message,Sender,Monitor)``
| **Mode and number of proofs:**
|    ``set_monitor(?object_identifier,?nonvar,?object_identifier,+object_identifier)`` - ``zero_or_one``


------------

Protected predicates
--------------------

(none)

Private predicates
------------------

(none)

Operators
---------

(none)

.. seealso::

   :ref:`event_registry <event_registry/0>`, :ref:`monitorp <monitorp/0>`

