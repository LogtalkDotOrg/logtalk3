.. index:: interpreterp
.. _interpreterp/0:

.. rst-class:: right

**protocol**

``interpreterp``
================

Protocol for an interpreter.

| **Availability:** 
|    ``logtalk_load(verdi_neruda(loader))``

| **Author:** Victor Lagerkvist
| **Version:** 1:0:0
| **Date:** 2010-06-13

| **Compilation flags:**
|    ``static``


| **Dependencies:**
|   (none)


| **Remarks:**
|    (none)

| **Inherited public predicates:**
|    (none)

.. contents::
   :local:
   :backlinks: top

Public predicates
-----------------

.. index:: prove/2
.. _interpreterp/0::prove/2:

``prove/2``
^^^^^^^^^^^

True if goal is provable in the specified database.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``prove(Goal,DB)``
| **Mode and number of proofs:**
|    ``prove(+goal,+database)`` - ``zero_or_more``


------------

.. index:: prove/3
.. _interpreterp/0::prove/3:

``prove/3``
^^^^^^^^^^^

True if goal is provable within the given depth-limit in the specified database.

| **Compilation flags:**
|    ``static``

| **Template:**
|    ``prove(Goal,Limit,DB)``
| **Mode and number of proofs:**
|    ``prove(+goal,+limit,+database)`` - ``zero_or_more``


------------

Protected predicates
--------------------

(none)

Private predicates
------------------

(none)

Operators
---------

(none)

