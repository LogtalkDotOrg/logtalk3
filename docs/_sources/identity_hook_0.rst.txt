.. index:: identity_hook
.. _identity_hook/0:

.. rst-class:: right

**object**

``identity_hook``
=================

Use this object as a file specific hook object to prevent any (other) user-defined expansion rules to be applied when compiling the file.

| **Author:** Paulo Moura
| **Version:** 1:0:0
| **Date:** 2020-02-15

| **Compilation flags:**
|    ``static, context_switching_calls``


| **Implements:**
|    ``public`` :ref:`expanding <expanding/0>`

| **Remarks:**
|    (none)

| **Inherited public predicates:**
|     :ref:`expanding/0::goal_expansion/2`  :ref:`expanding/0::term_expansion/2`  

.. contents::
   :local:
   :backlinks: top

Public predicates
-----------------

(no local declarations; see entity ancestors if any)

Protected predicates
--------------------

(no local declarations; see entity ancestors if any)

Private predicates
------------------

(no local declarations; see entity ancestors if any)

Operators
---------

(none)

.. seealso::

   :ref:`backend_adapter_hook <backend_adapter_hook/0>`, :ref:`default_workflow_hook <default_workflow_hook/0>`, :ref:`grammar_rules_hook <grammar_rules_hook/0>`, :ref:`prolog_module_hook(Module) <prolog_module_hook/1>`, :ref:`object_wrapper_hook <object_wrapper_hook/0>`, :ref:`write_to_stream_hook(Stream,Options) <write_to_stream_hook/2>`, :ref:`write_to_stream_hook(Stream) <write_to_stream_hook/1>`, :ref:`print_goal_hook <print_goal_hook/0>`

