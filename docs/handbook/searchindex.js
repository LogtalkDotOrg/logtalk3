Search.setIndex({"alltitles": {"!/0": [[184, null]], "(::)/1": [[119, null]], "(::)/2": [[118, null]], "(<<)/2": [[110, null]], "(@)/1": [[108, null]], "(\\+)/1": [[213, null]], "(^^)/1": [[109, null]], "A reflective class-based system": [[316, null]], "API documentation": [[1, "api-documentation"], [3, "api-documentation"], [4, "api-documentation"], [6, "api-documentation"], [8, "api-documentation"], [9, "api-documentation"], [10, "api-documentation"], [11, "api-documentation"], [12, "api-documentation"], [13, "api-documentation"], [14, "api-documentation"], [15, "api-documentation"], [18, "api-documentation"], [19, "api-documentation"], [21, "api-documentation"], [23, "api-documentation"], [24, "api-documentation"], [26, "api-documentation"], [27, "api-documentation"], [44, "api-documentation"], [45, "api-documentation"], [46, "api-documentation"], [47, "api-documentation"], [48, "api-documentation"], [49, "api-documentation"], [50, "api-documentation"], [51, "api-documentation"], [52, "api-documentation"], [53, "api-documentation"], [54, "api-documentation"], [55, "api-documentation"], [56, "api-documentation"], [57, "api-documentation"], [58, "api-documentation"], [59, "api-documentation"], [60, "api-documentation"], [61, "api-documentation"], [62, "api-documentation"], [63, "api-documentation"], [64, "api-documentation"], [65, "api-documentation"], [66, "api-documentation"], [67, "api-documentation"], [68, "api-documentation"], [69, "api-documentation"], [70, "api-documentation"], [72, "api-documentation"], [73, "api-documentation"], [74, "api-documentation"], [75, "api-documentation"], [76, "api-documentation"], [77, "api-documentation"], [78, "api-documentation"], [79, "api-documentation"], [80, "api-documentation"], [81, "api-documentation"], [82, "api-documentation"], [83, "api-documentation"], [84, "api-documentation"], [85, "api-documentation"], [87, "api-documentation"], [88, "api-documentation"], [89, "api-documentation"], [90, "api-documentation"], [91, "api-documentation"], [92, "api-documentation"], [93, "api-documentation"], [94, "api-documentation"], [95, "api-documentation"], [96, "api-documentation"], [97, "api-documentation"], [98, "api-documentation"], [100, "api-documentation"], [101, "api-documentation"], [102, "api-documentation"], [103, "api-documentation"], [105, "api-documentation"], [106, "api-documentation"]], "Abolishing an existing category": [[317, "abolishing-an-existing-category"]], "Abolishing an existing object": [[331, "abolishing-an-existing-object"]], "Abolishing an existing protocol": [[336, "abolishing-an-existing-protocol"]], "Abolishing defined events": [[322, "abolishing-defined-events"]], "Abolishing objects, categories and protocols": [[249, null]], "Accessing object parameters": [[331, "accessing-object-parameters"]], "Acknowledgements": [[99, "acknowledgements"]], "Activating the debugger": [[318, "activating-the-debugger"]], "Activation order of monitors": [[322, "activation-order-of-monitors"]], "Adapter files": [[327, "adapter-files"]], "Adding assertions to your source code": [[8, "adding-assertions-to-your-source-code"]], "Additional documentation": [[56, "additional-documentation"]], "Alias directive": [[333, "alias-directive"]], "All solutions": [[236, null]], "All solutions methods": [[333, "all-solutions-methods"]], "Alternative debugger tools": [[12, "alternative-debugger-tools"]], "Applying metrics to Prolog modules": [[9, "applying-metrics-to-prolog-modules"]], "Applying metrics to plain Prolog code": [[9, "applying-metrics-to-plain-prolog-code"]], "Are my Logtalk applications portable across Prolog compilers?": [[35, "are-my-logtalk-applications-portable-across-prolog-compilers"]], "Are my Logtalk applications portable across operating systems?": [[35, "are-my-logtalk-applications-portable-across-operating-systems"]], "Are there professional consulting, training and supporting services?": [[37, "are-there-professional-consulting-training-and-supporting-services"]], "Are there shortcuts for the make functionality?": [[39, "are-there-shortcuts-for-the-make-functionality"]], "Asking questions": [[334, "asking-questions"]], "Asserting and retracting Prolog predicates": [[333, "asserting-and-retracting-prolog-predicates"]], "Asynchronous calls and synchronized predicates": [[338, "asynchronous-calls-and-synchronized-predicates"]], "Authors": [[99, "authors"]], "Automatic expansion of built-in meta-predicates": [[332, "automatic-expansion-of-built-in-meta-predicates"]], "Automatically adding file and line context information to assertions": [[8, "automatically-adding-file-and-line-context-information-to-assertions"]], "Automatically creating bug reports at issue trackers": [[19, "automatically-creating-bug-reports-at-issue-trackers"]], "Automating running doclets": [[14, "automating-running-doclets"]], "Automating running tests": [[19, "automating-running-tests"]], "Available metrics": [[9, "available-metrics"]], "Avoiding common errors": [[335, "avoiding-common-errors"]], "Backend Prolog compiler and loader flags": [[335, "backend-prolog-compiler-and-loader-flags"]], "Batch processing": [[335, "batch-processing"]], "Behavioral reflection": [[337, "behavioral-reflection"]], "Best practices": [[23, "best-practices"]], "Bibliography": [[0, null]], "Black-box view": [[337, "black-box-view"]], "Broadcasting": [[328, "broadcasting"]], "Built-in categories": [[317, "built-in-categories"]], "Built-in methods": [[205, null], [333, "built-in-methods"]], "Built-in objects": [[331, "built-in-objects"]], "Built-in predicates": [[276, null]], "Built-in protocols": [[336, "built-in-protocols"]], "Bypassing expansions": [[323, "bypassing-expansions"]], "C++ nomenclature": [[330, "c-nomenclature"]], "Calling Prolog built-in predicates": [[333, "calling-prolog-built-in-predicates"]], "Calling Prolog foreign predicates": [[333, "calling-prolog-foreign-predicates"]], "Calling Prolog module meta-predicates": [[333, "calling-prolog-module-meta-predicates"]], "Calling Prolog module predicates": [[329, "calling-prolog-module-predicates"], [333, "calling-prolog-module-predicates"]], "Calling Prolog non-standard built-in meta-predicates": [[333, "calling-prolog-non-standard-built-in-meta-predicates"]], "Calling Prolog predicates": [[333, "calling-prolog-predicates"]], "Calling Prolog user-defined plain predicates": [[333, "calling-prolog-user-defined-plain-predicates"]], "Calling category predicates": [[317, "calling-category-predicates"]], "Calling external predicates": [[114, null]], "Calling imported and inherited predicates": [[120, null], [328, "calling-imported-and-inherited-predicates"]], "Calling predicates in this": [[107, null]], "Calls to imported or inherited predicates": [[332, "calls-to-imported-or-inherited-predicates"]], "Calls to module predicates": [[332, "calls-to-module-predicates"]], "Can I create standalone applications with Logtalk?": [[29, "can-i-create-standalone-applications-with-logtalk"]], "Can I mix classes and prototypes in the same hierarchy?": [[36, "can-i-mix-classes-and-prototypes-in-the-same-hierarchy"]], "Can I use Logtalk objects and Prolog modules at the same time?": [[28, "can-i-use-logtalk-objects-and-prolog-modules-at-the-same-time"]], "Can I use a protocol or a category with both prototypes and classes?": [[36, "can-i-use-a-protocol-or-a-category-with-both-prototypes-and-classes"]], "Can I use both classes and prototypes in the same application?": [[36, "can-i-use-both-classes-and-prototypes-in-the-same-application"]], "Can I use constraint-based packages with Logtalk?": [[28, "can-i-use-constraint-based-packages-with-logtalk"]], "Can Logtalk be used in commercial applications?": [[33, "can-logtalk-be-used-in-commercial-applications"]], "Categories": [[317, null]], "Category definition": [[163, "category-definition"]], "Category directives": [[163, "category-directives"], [317, "category-directives"]], "Category documentation": [[317, "category-documentation"]], "Category identifiers": [[163, "category-identifiers"]], "Category predicates": [[333, "category-predicates"]], "Category properties": [[317, "category-properties"]], "Category relationships": [[317, "category-relationships"]], "Category terms": [[163, "category-terms"]], "Caveats": [[10, "caveats"]], "Checking test goal results": [[19, "checking-test-goal-results"]], "Circular references": [[332, "circular-references"]], "Classes": [[331, "classes"]], "Clauses and goals": [[163, "clauses-and-goals"]], "Code coverage": [[19, "code-coverage"]], "Coding style guidelines": [[335, "coding-style-guidelines"]], "Coinduction hooks": [[177, null]], "Coinductive directive": [[333, "coinductive-directive"]], "Communicating events to monitors": [[322, "communicating-events-to-monitors"]], "Compatibility": [[28, null]], "Compatibility with most Prolog systems and the ISO standard": [[324, "compatibility-with-most-prolog-systems-and-the-iso-standard"]], "Compiler and runtime": [[327, "compiler-and-runtime"]], "Compiler errors, warnings, and comments": [[335, "compiler-errors-warnings-and-comments"]], "Compiler flags": [[163, "compiler-flags"], [335, "compiler-flags"]], "Compiler linter": [[335, "compiler-linter"]], "Compiler warnings and errors": [[321, "compiler-warnings-and-errors"]], "Compiling Prolog modules as objects": [[329, "compiling-prolog-modules-as-objects"]], "Compiling a source file results in errors or warnings but the Logtalk compiler reports a successful compilation with zero errors and zero warnings!": [[38, "compiling-a-source-file-results-in-errors-or-warnings-but-the-logtalk-compiler-reports-a-successful-compilation-with-zero-errors-and-zero-warnings"]], "Compiling and loading source files": [[251, null]], "Compiling and loading your applications": [[335, "compiling-and-loading-your-applications"]], "Compiling source code for profiling": [[25, "compiling-source-code-for-profiling"]], "Compiling source files for port profiling": [[24, "compiling-source-files-for-port-profiling"]], "Compiling source files in debug mode": [[318, "compiling-source-files-in-debug-mode"]], "Complemented objects": [[163, "complemented-objects"]], "Composition versus multiple inheritance": [[326, "composition-versus-multiple-inheritance"]], "Computer and operating system": [[327, "computer-and-operating-system"]], "Conditional compilation": [[335, "conditional-compilation"]], "Conditional compilation directives": [[125, null], [163, "conditional-compilation-directives"]], "Contents": [[42, null], [43, null]], "Context switching calls": [[111, null]], "Context-switching calls": [[318, "context-switching-calls"]], "Contributions": [[2, null]], "Control constructs": [[115, null]], "Converting Prolog modules into objects": [[329, "converting-prolog-modules-into-objects"]], "Converting assertion failures into errors": [[8, "converting-assertion-failures-into-errors"]], "Coupling metrics": [[9, "coupling-metrics"]], "Creating a new category at runtime": [[317, "creating-a-new-category-at-runtime"]], "Creating a new object at runtime": [[331, "creating-a-new-object-at-runtime"]], "Creating a new protocol at runtime": [[336, "creating-a-new-protocol-at-runtime"]], "Creating diagrams for Prolog module applications": [[13, "creating-diagrams-for-prolog-module-applications"]], "Creating diagrams for plain Prolog files": [[13, "creating-diagrams-for-plain-prolog-files"]], "Creating new objects, categories and protocols": [[258, null]], "Credits": [[54, "credits"], [65, "credits"], [86, "credits"], [91, "credits"], [92, "credits"]], "Curly term representation": [[82, "curly-term-representation"]], "Current limitations": [[27, "current-limitations"]], "Custom term writing": [[318, "custom-term-writing"]], "Customization": [[13, "customization"], [27, "customization"]], "Customizing term writing": [[318, "customizing-term-writing"]], "Cyclomatic complexity metric": [[9, "cyclomatic-complexity-metric"]], "Database": [[185, null]], "Database methods": [[333, "database-methods"]], "Dealing with proprietary Prolog directives and predicates": [[329, "dealing-with-proprietary-prolog-directives-and-predicates"]], "Debug and trace events": [[318, "debug-and-trace-events"]], "Debug mode overhead": [[332, "debug-mode-overhead"]], "Debugging": [[318, null]], "Debugging commands": [[318, "debugging-commands"]], "Debugging expansions": [[323, "debugging-expansions"]], "Debugging failed tests": [[19, "debugging-failed-tests"]], "Debugging messages": [[318, "debugging-messages"]], "Debugging messages in tests": [[19, "debugging-messages-in-tests"]], "Debugging using breakpoints": [[318, "debugging-using-breakpoints"]], "Declaration of Accumulators": [[56, "declaration-of-accumulators"]], "Declaration of Passed Arguments": [[56, "declaration-of-passed-arguments"]], "Declaration of Predicates": [[56, "declaration-of-predicates"]], "Declarative object-oriented programming": [[319, null]], "Declaring object aliases": [[317, "declaring-object-aliases"], [331, "declaring-object-aliases"]], "Declaring predicates": [[333, "declaring-predicates"]], "Decoding": [[46, "decoding"], [48, "decoding"], [74, "decoding"], [75, "decoding"]], "Default compiler expansion workflow": [[323, "default-compiler-expansion-workflow"]], "Default size of generated terms": [[44, "default-size-of-generated-terms"]], "Defining Prolog multifile predicates": [[333, "defining-prolog-multifile-predicates"]], "Defining a category": [[312, "defining-a-category"]], "Defining a list object": [[314, "defining-a-list-object"]], "Defining a list protocol": [[314, "defining-a-list-protocol"]], "Defining a new category": [[317, "defining-a-new-category"]], "Defining a new object": [[331, "defining-a-new-object"]], "Defining a new protocol": [[336, "defining-a-new-protocol"]], "Defining breakpoints": [[318, "defining-breakpoints"]], "Defining conditional breakpoints": [[318, "defining-conditional-breakpoints"]], "Defining context breakpoints": [[318, "defining-context-breakpoints"]], "Defining event handlers": [[322, "defining-event-handlers"]], "Defining expansions": [[323, "defining-expansions"]], "Defining hit count breakpoints": [[318, "defining-hit-count-breakpoints"]], "Defining log points": [[318, "defining-log-points"]], "Defining message prefixes and output files": [[334, "defining-message-prefixes-and-output-files"]], "Defining message prefixes and output streams": [[334, "defining-message-prefixes-and-output-streams"]], "Defining new events": [[322, "defining-new-events"]], "Defining new generators and shrinkers": [[44, "defining-new-generators-and-shrinkers"]], "Defining new metrics": [[9, "defining-new-metrics"]], "Defining new types": [[97, "defining-new-types"]], "Defining predicate and clause breakpoints": [[318, "defining-predicate-and-clause-breakpoints"]], "Defining predicates": [[333, "defining-predicates"]], "Defining the base classes": [[316, "defining-the-base-classes"]], "Defining triggered breakpoints": [[318, "defining-triggered-breakpoints"]], "Definite clause grammar parsing methods and non-terminals": [[333, "definite-clause-grammar-parsing-methods-and-non-terminals"]], "Definite clause grammar rules": [[186, null], [333, "definite-clause-grammar-rules"]], "Definitions": [[322, "definitions"]], "Delegating a message to an object": [[328, "delegating-a-message-to-an-object"]], "Deployment": [[29, null]], "Deprecated elements": [[321, "deprecated-elements"]], "Describing predicates": [[320, "describing-predicates"]], "Description": [[99, "description"], [108, "description"], [109, "description"], [110, "description"], [112, "description"], [113, "description"], [118, "description"], [119, "description"], [121, "description"], [122, "description"], [123, "description"], [124, "description"], [126, "description"], [127, "description"], [128, "description"], [129, "description"], [130, "description"], [131, "description"], [132, "description"], [133, "description"], [134, "description"], [135, "description"], [137, "description"], [138, "description"], [140, "description"], [141, "description"], [142, "description"], [143, "description"], [144, "description"], [145, "description"], [146, "description"], [147, "description"], [148, "description"], [149, "description"], [151, "description"], [152, "description"], [153, "description"], [154, "description"], [155, "description"], [157, "description"], [158, "description"], [159, "description"], [160, "description"], [161, "description"], [162, "description"], [165, "description"], [166, "description"], [167, "description"], [169, "description"], [170, "description"], [171, "description"], [172, "description"], [173, "description"], [174, "description"], [175, "description"], [176, "description"], [178, "description"], [179, "description"], [180, "description"], [182, "description"], [183, "description"], [184, "description"], [187, "description"], [188, "description"], [190, "description"], [192, "description"], [193, "description"], [194, "description"], [196, "description"], [197, "description"], [198, "description"], [199, "description"], [200, "description"], [201, "description"], [203, "description"], [204, "description"], [206, "description"], [208, "description"], [209, "description"], [210, "description"], [211, "description"], [213, "description"], [214, "description"], [215, "description"], [216, "description"], [217, "description"], [218, "description"], [219, "description"], [220, "description"], [221, "description"], [222, "description"], [223, "description"], [225, "description"], [226, "description"], [228, "description"], [229, "description"], [230, "description"], [231, "description"], [232, "description"], [233, "description"], [234, "description"], [235, "description"], [237, "description"], [238, "description"], [239, "description"], [240, "description"], [241, "description"], [242, "description"], [243, "description"], [244, "description"], [245, "description"], [246, "description"], [247, "description"], [248, "description"], [250, "description"], [252, "description"], [253, "description"], [254, "description"], [255, "description"], [256, "description"], [257, "description"], [259, "description"], [260, "description"], [261, "description"], [262, "description"], [263, "description"], [264, "description"], [270, "description"], [271, "description"], [272, "description"], [274, "description"], [275, "description"], [277, "description"], [279, "description"], [280, "description"], [281, "description"], [282, "description"], [283, "description"], [284, "description"], [285, "description"], [286, "description"], [287, "description"], [288, "description"], [290, "description"], [291, "description"], [292, "description"], [293, "description"], [294, "description"], [295, "description"], [296, "description"], [297, "description"], [298, "description"], [299, "description"], [300, "description"], [301, "description"], [302, "description"], [303, "description"], [304, "description"], [305, "description"], [306, "description"], [307, "description"], [308, "description"], [309, "description"], [310, "description"], [311, "description"]], "Developer Tools": [[16, null]], "Diagrams": [[320, "diagrams"]], "Directives": [[139, null], [163, "directives"]], "Discontiguous directive": [[333, "discontiguous-directive"]], "Distribution overview": [[327, "distribution-overview"]], "Documentation linter checks": [[18, "documentation-linter-checks"]], "Documenting": [[320, null]], "Documenting directive": [[333, "documenting-directive"]], "Documenting predicate exceptions": [[320, "documenting-predicate-exceptions"]], "Documenting source code": [[18, "documenting-source-code"]], "Does the Logtalk implementation use term-expansion?": [[30, "does-the-logtalk-implementation-use-term-expansion"]], "Duplicated clauses": [[321, "duplicated-clauses"]], "Duplicated directives": [[321, "duplicated-directives"]], "Dynamic categories": [[317, "dynamic-categories"]], "Dynamic directive": [[333, "dynamic-directive"]], "Dynamic object attributes": [[312, null]], "Dynamic objects": [[331, "dynamic-objects"]], "Dynamic protocols": [[336, "dynamic-protocols"]], "Enabling multi-threading support": [[338, "enabling-multi-threading-support"]], "Enabling objects to make multi-threading calls": [[338, "enabling-objects-to-make-multi-threading-calls"]], "Encapsulating plain Prolog code in objects": [[329, "encapsulating-plain-prolog-code-in-objects"]], "Encoding": [[46, "encoding"], [48, "encoding"], [74, "encoding"], [75, "encoding"]], "Encrypted packs": [[23, "encrypted-packs"]], "Entities": [[163, "entities"]], "Entity and predicate scope": [[163, "entity-and-predicate-scope"]], "Entity directives": [[136, null]], "Entity documenting directives": [[320, "entity-documenting-directives"]], "Entity identifiers": [[163, "entity-identifiers"]], "Entity properties": [[163, "entity-properties"]], "Entity relations": [[163, "entity-relations"]], "Enumerating objects, categories and protocols": [[267, null]], "Enumerating objects, categories and protocols properties": [[268, null]], "Error handling": [[189, null], [321, null]], "Error handling and throwing methods": [[333, "error-handling-and-throwing-methods"]], "Errors": [[108, "errors"], [109, "errors"], [110, "errors"], [112, "errors"], [113, "errors"], [118, "errors"], [119, "errors"], [155, "errors"], [165, "errors"], [166, "errors"], [167, "errors"], [169, "errors"], [170, "errors"], [171, "errors"], [172, "errors"], [173, "errors"], [174, "errors"], [175, "errors"], [176, "errors"], [178, "errors"], [179, "errors"], [180, "errors"], [182, "errors"], [183, "errors"], [184, "errors"], [187, "errors"], [188, "errors"], [190, "errors"], [192, "errors"], [193, "errors"], [194, "errors"], [196, "errors"], [197, "errors"], [198, "errors"], [199, "errors"], [200, "errors"], [201, "errors"], [203, "errors"], [204, "errors"], [206, "errors"], [208, "errors"], [209, "errors"], [210, "errors"], [211, "errors"], [213, "errors"], [214, "errors"], [215, "errors"], [216, "errors"], [217, "errors"], [218, "errors"], [219, "errors"], [220, "errors"], [221, "errors"], [222, "errors"], [223, "errors"], [225, "errors"], [226, "errors"], [228, "errors"], [229, "errors"], [230, "errors"], [231, "errors"], [232, "errors"], [233, "errors"], [234, "errors"], [235, "errors"], [237, "errors"], [238, "errors"], [239, "errors"], [240, "errors"], [241, "errors"], [242, "errors"], [243, "errors"], [244, "errors"], [245, "errors"], [246, "errors"], [247, "errors"], [248, "errors"], [250, "errors"], [252, "errors"], [253, "errors"], [254, "errors"], [255, "errors"], [256, "errors"], [257, "errors"], [259, "errors"], [260, "errors"], [261, "errors"], [262, "errors"], [263, "errors"], [264, "errors"], [270, "errors"], [271, "errors"], [272, "errors"], [274, "errors"], [275, "errors"], [277, "errors"], [279, "errors"], [280, "errors"], [281, "errors"], [282, "errors"], [283, "errors"], [284, "errors"], [285, "errors"], [286, "errors"], [287, "errors"], [288, "errors"], [290, "errors"], [291, "errors"], [292, "errors"], [293, "errors"], [294, "errors"], [295, "errors"], [296, "errors"], [297, "errors"], [298, "errors"], [299, "errors"], [300, "errors"], [301, "errors"], [302, "errors"], [303, "errors"], [304, "errors"], [305, "errors"], [306, "errors"], [307, "errors"], [308, "errors"], [309, "errors"], [310, "errors"], [311, "errors"]], "Event": [[322, "event"]], "Event generation": [[322, "event-generation"]], "Event handling": [[191, null], [269, null], [322, "event-handling"]], "Event-driven programming": [[322, null]], "Examples": [[97, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [112, "examples"], [113, "examples"], [118, "examples"], [119, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [137, "examples"], [138, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [187, "examples"], [188, "examples"], [190, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [203, "examples"], [204, "examples"], [206, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [220, "examples"], [221, "examples"], [222, "examples"], [223, "examples"], [225, "examples"], [226, "examples"], [228, "examples"], [229, "examples"], [230, "examples"], [231, "examples"], [232, "examples"], [233, "examples"], [234, "examples"], [235, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [241, "examples"], [242, "examples"], [243, "examples"], [244, "examples"], [245, "examples"], [246, "examples"], [247, "examples"], [248, "examples"], [250, "examples"], [252, "examples"], [253, "examples"], [254, "examples"], [255, "examples"], [256, "examples"], [257, "examples"], [259, "examples"], [260, "examples"], [261, "examples"], [262, "examples"], [263, "examples"], [264, "examples"], [270, "examples"], [271, "examples"], [272, "examples"], [274, "examples"], [275, "examples"], [277, "examples"], [279, "examples"], [280, "examples"], [281, "examples"], [282, "examples"], [283, "examples"], [284, "examples"], [285, "examples"], [286, "examples"], [287, "examples"], [288, "examples"], [290, "examples"], [291, "examples"], [292, "examples"], [293, "examples"], [294, "examples"], [295, "examples"], [296, "examples"], [297, "examples"], [298, "examples"], [299, "examples"], [300, "examples"], [301, "examples"], [302, "examples"], [303, "examples"], [304, "examples"], [305, "examples"], [306, "examples"], [307, "examples"], [308, "examples"], [309, "examples"], [310, "examples"], [311, "examples"], [327, "examples"]], "Excluding code from analysis": [[9, "excluding-code-from-analysis"], [10, "excluding-code-from-analysis"]], "Execution context": [[181, null]], "Execution context methods": [[333, "execution-context-methods"]], "Expanding grammar rules": [[323, "expanding-grammar-rules"]], "Expanding grammar rules into clauses independently of the compiler": [[68, "expanding-grammar-rules-into-clauses-independently-of-the-compiler"]], "Expected terms": [[321, "expected-terms"]], "Experimental features": [[15, "experimental-features"]], "Exporting code coverage results in XML format": [[19, "exporting-code-coverage-results-in-xml-format"]], "Exporting test results in the TAP output format": [[19, "exporting-test-results-in-the-tap-output-format"]], "Exporting test results in xUnit XML format": [[19, "exporting-test-results-in-xunit-xml-format"]], "Extended categories": [[163, "extended-categories"]], "Extended objects": [[163, "extended-objects"]], "Extended protocols": [[163, "extended-protocols"]], "Extending the linter": [[20, "extending-the-linter"]], "FAQ": [[31, null]], "File search paths": [[329, "file-search-paths"]], "Files and API Summary": [[99, "files-and-api-summary"]], "Finding declared predicates": [[333, "finding-declared-predicates"]], "Finding defined categories": [[317, "finding-defined-categories"]], "Finding defined events": [[322, "finding-defined-events"]], "Finding defined objects": [[331, "finding-defined-objects"]], "Finding defined protocols": [[336, "finding-defined-protocols"]], "Flags": [[273, null]], "Flaky tests": [[19, "flaky-tests"]], "Gecko-based browsers (e.g., Firefox) show non-rendered HTML entities when browsing XML documenting files!": [[38, "gecko-based-browsers-e-g-firefox-show-non-rendered-html-entities-when-browsing-xml-documenting-files"]], "General": [[30, null]], "Generated code simplification and optimizations": [[332, "generated-code-simplification-and-optimizations"]], "Generating Allure reports": [[19, "generating-allure-reports"]], "Generating ULIDs": [[98, "generating-ulids"]], "Generating a HTML document": [[69, "generating-a-html-document"]], "Generating a HTML fragment": [[69, "generating-a-html-fragment"]], "Generating documentation": [[18, "generating-documentation"]], "Generating profiling data": [[24, "generating-profiling-data"]], "Generating the null UUID": [[101, "generating-the-null-uuid"]], "Generating version 1 UUIDs": [[101, "generating-version-1-uuids"]], "Generating version 4 UUIDs": [[101, "generating-version-4-uuids"]], "Glossary": [[41, null]], "Goals that are always true or false": [[321, "goals-that-are-always-true-or-false"]], "Grammar": [[163, null]], "Graph elements": [[13, "graph-elements"]], "Halstead metric": [[9, "halstead-metric"]], "Hardware and software requirements": [[327, "hardware-and-software-requirements"]], "Help on linter warnings": [[20, "help-on-linter-warnings"]], "Help with warnings": [[19, "help-with-warnings"], [21, "help-with-warnings"], [23, "help-with-warnings"]], "High level multi-threading programming support": [[324, "high-level-multi-threading-programming-support"]], "Hook objects": [[323, "hook-objects"]], "Hot patching": [[317, "hot-patching"]], "How about message-sending performance? Does Logtalk use static binding or dynamic binding?": [[34, "how-about-message-sending-performance-does-logtalk-use-static-binding-or-dynamic-binding"]], "How does Logtalk performance compare with plain Prolog and with Prolog modules?": [[34, "how-does-logtalk-performance-compare-with-plain-prolog-and-with-prolog-modules"]], "I get errors when starting up Logtalk after upgrading to the latest version!": [[32, "i-get-errors-when-starting-up-logtalk-after-upgrading-to-the-latest-version"]], "Implementation inheritance": [[326, "implementation-inheritance"]], "Implemented protocols": [[163, "implemented-protocols"]], "Implementing protocols": [[336, "implementing-protocols"]], "Imported categories": [[163, "imported-categories"]], "Importing categories": [[317, "importing-categories"]], "Importing the category": [[312, "importing-the-category"]], "Index": [[40, null]], "Inheritance": [[326, null]], "Inline formatting in comments text": [[320, "inline-formatting-in-comments-text"]], "Inlining": [[332, "inlining"]], "Installation": [[32, null]], "Installers": [[13, "installers"], [22, "installers"]], "Installing Logtalk": [[327, null]], "Installing Prolog packs": [[23, "installing-prolog-packs"]], "Instantiated objects": [[163, "instantiated-objects"]], "Integration of event-driven and object-oriented programming": [[324, "integration-of-event-driven-and-object-oriented-programming"]], "Integration of logic and object-oriented programming": [[324, "integration-of-logic-and-object-oriented-programming"]], "Integration with the make tool": [[10, "integration-with-the-make-tool"], [14, "integration-with-the-make-tool"]], "Intercepting messages": [[334, "intercepting-messages"]], "Intercepting questions": [[334, "intercepting-questions"]], "Interpreting profiling data": [[24, "interpreting-profiling-data"]], "Introduction": [[56, "introduction"]], "Is Logtalk implemented as a meta-interpreter?": [[34, "is-logtalk-implemented-as-a-meta-interpreter"]], "Is the Logtalk implementation based on Prolog modules?": [[30, "is-the-logtalk-implementation-based-on-prolog-modules"]], "Is there a shortcut for compiling and loading source files?": [[39, "is-there-a-shortcut-for-compiling-and-loading-source-files"]], "Is there an equivalent directive to the ensure_loaded/1 Prolog directive?": [[39, "is-there-an-equivalent-directive-to-the-ensure-loaded-1-prolog-directive"]], "Java nomenclature": [[330, "java-nomenclature"]], "Known issues": [[6, "known-issues"], [12, "known-issues"], [15, "known-issues"], [17, "known-issues"], [19, "known-issues"], [23, "known-issues"], [24, "known-issues"], [44, "known-issues"], [73, "known-issues"], [74, "known-issues"], [75, "known-issues"], [80, "known-issues"], [85, "known-issues"], [90, "known-issues"], [91, "known-issues"], [95, "known-issues"], [99, "known-issues"]], "Lambda expressions": [[163, "lambda-expressions"], [333, "lambda-expressions"]], "Lambda variables": [[321, "lambda-variables"]], "Libraries": [[71, null]], "Libraries of source files": [[335, "libraries-of-source-files"]], "Library": [[327, "library"]], "Library documentation": [[86, "library-documentation"]], "License": [[99, "license"]], "Licensing": [[33, null]], "Linking diagrams": [[13, "linking-diagrams"]], "Lint flags": [[335, "lint-flags"]], "Linter": [[278, null]], "Linting Prolog modules": [[20, "linting-prolog-modules"]], "Linting plain Prolog files": [[20, "linting-plain-prolog-files"]], "List predicates": [[314, null]], "Loader files": [[335, "loader-files"]], "Loading": [[1, "loading"], [3, "loading"], [4, "loading"], [6, "loading"], [8, "loading"], [9, "loading"], [10, "loading"], [11, "loading"], [12, "loading"], [13, "loading"], [14, "loading"], [15, "loading"], [17, "loading"], [18, "loading"], [19, "loading"], [23, "loading"], [24, "loading"], [25, "loading"], [26, "loading"], [27, "loading"], [44, "loading"], [45, "loading"], [46, "loading"], [47, "loading"], [48, "loading"], [49, "loading"], [50, "loading"], [51, "loading"], [52, "loading"], [53, "loading"], [54, "loading"], [55, "loading"], [56, "loading"], [57, "loading"], [58, "loading"], [59, "loading"], [60, "loading"], [61, "loading"], [62, "loading"], [63, "loading"], [64, "loading"], [65, "loading"], [66, "loading"], [67, "loading"], [68, "loading"], [69, "loading"], [70, "loading"], [72, "loading"], [73, "loading"], [74, "loading"], [75, "loading"], [76, "loading"], [77, "loading"], [78, "loading"], [79, "loading"], [80, "loading"], [81, "loading"], [82, "loading"], [83, "loading"], [84, "loading"], [85, "loading"], [87, "loading"], [88, "loading"], [89, "loading"], [90, "loading"], [91, "loading"], [92, "loading"], [93, "loading"], [94, "loading"], [95, "loading"], [96, "loading"], [97, "loading"], [98, "loading"], [100, "loading"], [101, "loading"], [102, "loading"], [103, "loading"], [105, "loading"], [106, "loading"]], "Loading converted Prolog applications": [[329, "loading-converted-prolog-applications"]], "Loading files into a category": [[317, "loading-files-into-a-category"]], "Loading files into a protocol": [[336, "loading-files-into-a-protocol"]], "Loading files into an object": [[331, "loading-files-into-an-object"]], "Loading libraries": [[86, "loading-libraries"]], "Loading the developer tools": [[22, "loading-the-developer-tools"]], "Local predicate calls": [[332, "local-predicate-calls"]], "Logic and control": [[207, null]], "Logic and control methods": [[333, "logic-and-control-methods"]], "Logtalk built-in methods": [[321, "logtalk-built-in-methods"]], "Logtalk built-in predicates": [[321, "logtalk-built-in-predicates"]], "Logtalk installers": [[327, "logtalk-installers"]], "Logtalk scope": [[324, "logtalk-scope"]], "Logtalk source files": [[327, "logtalk-source-files"]], "Lookup order for class hierarchies": [[326, "lookup-order-for-class-hierarchies"], [326, "inheritance-implementation-class"]], "Lookup order for prototype hierarchies": [[326, "lookup-order-for-prototype-hierarchies"], [326, "inheritance-implementation-prototype"]], "Main features": [[324, null]], "Main files": [[19, "main-files"]], "Main linter checks": [[20, "main-linter-checks"]], "Message delegation": [[116, null]], "Message forwarding": [[202, null]], "Message printing": [[224, null]], "Message sending": [[117, null], [321, "message-sending"]], "Message sending and event generation": [[328, "message-sending-and-event-generation"]], "Message sending performance": [[328, "message-sending-performance"]], "Message tokenization": [[334, "message-tokenization"]], "Messages": [[328, null], [332, "messages"]], "Messages as events": [[315, "messages-as-events"]], "Meta-call methods": [[333, "meta-call-methods"]], "Meta-calls": [[212, null]], "Meta-messages": [[318, "meta-messages"], [334, "meta-messages"]], "Meta-non-terminal template": [[173, "meta-non-terminal-template"], [217, "meta-non-terminal-template"]], "Meta-predicate directive": [[333, "meta-predicate-directive"]], "Meta-predicate template": [[167, "meta-predicate-template"], [171, "meta-predicate-template"], [174, "meta-predicate-template"], [198, "meta-predicate-template"], [199, "meta-predicate-template"], [200, "meta-predicate-template"], [204, "meta-predicate-template"], [213, "meta-predicate-template"], [214, "meta-predicate-template"], [218, "meta-predicate-template"], [219, "meta-predicate-template"], [225, "meta-predicate-template"], [235, "meta-predicate-template"], [294, "meta-predicate-template"], [295, "meta-predicate-template"], [298, "meta-predicate-template"], [307, "meta-predicate-template"], [309, "meta-predicate-template"]], "Meta-predicates": [[333, "meta-predicates"]], "Minimizing test results output": [[19, "minimizing-test-results-output"]], "Missing directives": [[321, "missing-directives"]], "Misspell calls of local predicates": [[321, "misspell-calls-of-local-predicates"]], "Mocking": [[19, "mocking"]], "Mode directive": [[333, "mode-directive"]], "Modes and number of proofs": [[108, "modes-and-number-of-proofs"], [109, "modes-and-number-of-proofs"], [110, "modes-and-number-of-proofs"], [112, "modes-and-number-of-proofs"], [113, "modes-and-number-of-proofs"], [118, "modes-and-number-of-proofs"], [119, "modes-and-number-of-proofs"], [165, "modes-and-number-of-proofs"], [166, "modes-and-number-of-proofs"], [167, "modes-and-number-of-proofs"], [169, "modes-and-number-of-proofs"], [170, "modes-and-number-of-proofs"], [171, "modes-and-number-of-proofs"], [172, "modes-and-number-of-proofs"], [173, "modes-and-number-of-proofs"], [174, "modes-and-number-of-proofs"], [175, "modes-and-number-of-proofs"], [176, "modes-and-number-of-proofs"], [178, "modes-and-number-of-proofs"], [179, "modes-and-number-of-proofs"], [180, "modes-and-number-of-proofs"], [182, "modes-and-number-of-proofs"], [183, "modes-and-number-of-proofs"], [184, "modes-and-number-of-proofs"], [187, "modes-and-number-of-proofs"], [188, "modes-and-number-of-proofs"], [190, "modes-and-number-of-proofs"], [192, "modes-and-number-of-proofs"], [193, "modes-and-number-of-proofs"], [194, "modes-and-number-of-proofs"], [196, "modes-and-number-of-proofs"], [197, "modes-and-number-of-proofs"], [198, "modes-and-number-of-proofs"], [199, "modes-and-number-of-proofs"], [200, "modes-and-number-of-proofs"], [201, "modes-and-number-of-proofs"], [203, "modes-and-number-of-proofs"], [204, "modes-and-number-of-proofs"], [206, "modes-and-number-of-proofs"], [208, "modes-and-number-of-proofs"], [209, "modes-and-number-of-proofs"], [210, "modes-and-number-of-proofs"], [211, "modes-and-number-of-proofs"], [213, "modes-and-number-of-proofs"], [214, "modes-and-number-of-proofs"], [215, "modes-and-number-of-proofs"], [216, "modes-and-number-of-proofs"], [217, "modes-and-number-of-proofs"], [218, "modes-and-number-of-proofs"], [219, "modes-and-number-of-proofs"], [220, "modes-and-number-of-proofs"], [221, "modes-and-number-of-proofs"], [222, "modes-and-number-of-proofs"], [223, "modes-and-number-of-proofs"], [225, "modes-and-number-of-proofs"], [226, "modes-and-number-of-proofs"], [228, "modes-and-number-of-proofs"], [229, "modes-and-number-of-proofs"], [230, "modes-and-number-of-proofs"], [231, "modes-and-number-of-proofs"], [232, "modes-and-number-of-proofs"], [233, "modes-and-number-of-proofs"], [234, "modes-and-number-of-proofs"], [235, "modes-and-number-of-proofs"], [237, "modes-and-number-of-proofs"], [238, "modes-and-number-of-proofs"], [239, "modes-and-number-of-proofs"], [240, "modes-and-number-of-proofs"], [241, "modes-and-number-of-proofs"], [242, "modes-and-number-of-proofs"], [243, "modes-and-number-of-proofs"], [244, "modes-and-number-of-proofs"], [245, "modes-and-number-of-proofs"], [246, "modes-and-number-of-proofs"], [247, "modes-and-number-of-proofs"], [248, "modes-and-number-of-proofs"], [250, "modes-and-number-of-proofs"], [252, "modes-and-number-of-proofs"], [253, "modes-and-number-of-proofs"], [254, "modes-and-number-of-proofs"], [255, "modes-and-number-of-proofs"], [256, "modes-and-number-of-proofs"], [257, "modes-and-number-of-proofs"], [259, "modes-and-number-of-proofs"], [260, "modes-and-number-of-proofs"], [261, "modes-and-number-of-proofs"], [262, "modes-and-number-of-proofs"], [263, "modes-and-number-of-proofs"], [264, "modes-and-number-of-proofs"], [270, "modes-and-number-of-proofs"], [271, "modes-and-number-of-proofs"], [272, "modes-and-number-of-proofs"], [274, "modes-and-number-of-proofs"], [275, "modes-and-number-of-proofs"], [277, "modes-and-number-of-proofs"], [279, "modes-and-number-of-proofs"], [280, "modes-and-number-of-proofs"], [281, "modes-and-number-of-proofs"], [282, "modes-and-number-of-proofs"], [283, "modes-and-number-of-proofs"], [284, "modes-and-number-of-proofs"], [285, "modes-and-number-of-proofs"], [286, "modes-and-number-of-proofs"], [287, "modes-and-number-of-proofs"], [288, "modes-and-number-of-proofs"], [290, "modes-and-number-of-proofs"], [291, "modes-and-number-of-proofs"], [292, "modes-and-number-of-proofs"], [293, "modes-and-number-of-proofs"], [294, "modes-and-number-of-proofs"], [295, "modes-and-number-of-proofs"], [296, "modes-and-number-of-proofs"], [297, "modes-and-number-of-proofs"], [298, "modes-and-number-of-proofs"], [299, "modes-and-number-of-proofs"], [300, "modes-and-number-of-proofs"], [301, "modes-and-number-of-proofs"], [302, "modes-and-number-of-proofs"], [303, "modes-and-number-of-proofs"], [304, "modes-and-number-of-proofs"], [305, "modes-and-number-of-proofs"], [306, "modes-and-number-of-proofs"], [307, "modes-and-number-of-proofs"], [308, "modes-and-number-of-proofs"], [309, "modes-and-number-of-proofs"], [310, "modes-and-number-of-proofs"], [311, "modes-and-number-of-proofs"]], "Module identifiers": [[163, "module-identifiers"]], "Modules using a term-expansion mechanism": [[329, "modules-using-a-term-expansion-mechanism"]], "Monitor": [[322, "monitor"]], "Monitor semantics": [[322, "monitor-semantics"]], "Multi-pass compiler": [[335, "multi-pass-compiler"]], "Multi-threading": [[289, null]], "Multi-threading applications": [[317, "multi-threading-applications"], [331, "multi-threading-applications"], [334, "multi-threading-applications"], [336, "multi-threading-applications"]], "Multi-threading built-in predicates": [[338, "multi-threading-built-in-predicates"]], "Multi-threading engines": [[265, null]], "Multi-threading performance": [[338, "multi-threading-performance"]], "Multi-threading programming": [[338, null]], "Multifile directive": [[333, "multifile-directive"]], "Multiple inheritance": [[326, "multiple-inheritance"]], "Multiple pack versions": [[23, "multiple-pack-versions"]], "Naming conventions": [[335, "naming-conventions"]], "Nomenclature": [[330, null]], "Object definition": [[163, "object-definition"]], "Object directives": [[163, "object-directives"], [331, "object-directives"]], "Object documentation": [[331, "object-documentation"]], "Object identifiers": [[163, "object-identifiers"]], "Object initialization": [[331, "object-initialization"]], "Object predicates": [[333, "object-predicates"]], "Object properties": [[331, "object-properties"]], "Object relationships": [[331, "object-relationships"]], "Object terms": [[163, "object-terms"]], "Objects": [[331, null]], "Objects, categories, and protocols relations": [[266, null]], "Objects, prototypes, classes, and instances": [[331, "objects-prototypes-classes-and-instances"]], "One-way asynchronous calls": [[338, "one-way-asynchronous-calls"]], "Operator directive": [[333, "operator-directive"]], "Operators used in message-sending": [[328, "operators-used-in-message-sending"]], "Optimizing performance": [[335, "optimizing-performance"]], "Optional features compilation flags": [[335, "optional-features-compilation-flags"]], "Other considerations": [[332, "other-considerations"]], "Other flags": [[335, "other-flags"]], "Other notes": [[13, "other-notes"], [86, "other-notes"]], "Other warnings and errors": [[321, "other-warnings-and-errors"]], "Outputting term-expansion results to a stream or a file": [[68, "outputting-term-expansion-results-to-a-stream-or-a-file"]], "Overview": [[22, null], [86, null]], "Pack URLs and Single Sign-On": [[23, "pack-urls-and-single-sign-on"]], "Pack dependencies": [[23, "pack-dependencies"]], "Pack development": [[23, "pack-development"]], "Pack documentation": [[23, "pack-documentation"]], "Pack handling": [[23, "pack-handling"]], "Pack portability": [[23, "pack-portability"]], "Pack specification": [[23, "pack-specification"]], "Parametric categories": [[317, "parametric-categories"]], "Parametric object proxies": [[331, "parametric-object-proxies"]], "Parametric objects": [[324, "parametric-objects"], [331, "parametric-objects"]], "Parametric test objects": [[19, "parametric-test-objects"]], "Performance": [[34, null], [324, "performance"], [332, null]], "Performance concerns": [[322, "performance-concerns"]], "Pinning registries and packs": [[23, "pinning-registries-and-packs"]], "Portability": [[35, null], [60, "portability"]], "Portability warnings": [[321, "portability-warnings"]], "Portable applications": [[335, "portable-applications"]], "Ports": [[104, null]], "Ports profiling": [[318, "ports-profiling"]], "Pre-defined types": [[44, "pre-defined-types"]], "Predicate directives": [[150, null], [163, "predicate-directives"]], "Predicate documenting directives": [[320, "predicate-documenting-directives"]], "Predicate properties": [[163, "predicate-properties"], [333, "predicate-properties"]], "Predicates": [[333, null]], "Preventing applying any (other) user-defined expansion rules": [[68, "preventing-applying-any-other-user-defined-expansion-rules"]], "Printing entity predicate goals before or after calling them": [[68, "printing-entity-predicate-goals-before-or-after-calling-them"]], "Printing messages": [[334, "printing-messages"]], "Printing messages and asking questions": [[334, null]], "Printing profiling data reports": [[24, "printing-profiling-data-reports"]], "Private, protected and public inheritance": [[324, "private-protected-and-public-inheritance"]], "Private, protected and public object predicates": [[324, "private-protected-and-public-object-predicates"]], "Procedure box model": [[318, "procedure-box-model"]], "Processing and viewing documenting files": [[320, "processing-and-viewing-documenting-files"]], "Profilers as monitors": [[315, "profilers-as-monitors"]], "Profiling Prolog modules": [[24, "profiling-prolog-modules"]], "Profiling plain Prolog code": [[24, "profiling-plain-prolog-code"]], "Profiling programs": [[315, null]], "Programming": [[36, null]], "Prolog compiler": [[327, "prolog-compiler"]], "Prolog integration and migration": [[329, null]], "Prolog multifile predicates": [[329, "prolog-multifile-predicates"]], "Prolog nomenclature": [[330, "prolog-nomenclature"]], "Protocol definition": [[163, "protocol-definition"]], "Protocol directives": [[163, "protocol-directives"], [336, "protocol-directives"]], "Protocol documentation": [[336, "protocol-documentation"]], "Protocol identifiers": [[163, "protocol-identifiers"]], "Protocol inheritance": [[326, "protocol-inheritance"]], "Protocol properties": [[336, "protocol-properties"]], "Protocol relationships": [[336, "protocol-relationships"]], "Protocols": [[336, null]], "Prototypes": [[331, "prototypes"]], "Proving goals asynchronously using threads": [[338, "proving-goals-asynchronously-using-threads"]], "Proving goals concurrently using threads": [[338, "proving-goals-concurrently-using-threads"]], "Public, protected, and private inheritance": [[326, "public-protected-and-private-inheritance"]], "Python dependencies (all operating-systems)": [[22, "python-dependencies-all-operating-systems"]], "Python nomenclature": [[330, "python-nomenclature"]], "Question asking": [[168, null]], "QuickCheck": [[19, "quickcheck"]], "Raising Exceptions": [[321, "raising-exceptions"]], "Read-only flags": [[335, "read-only-flags"]], "RedHat": [[22, "redhat"]], "Redefining built-in predicates": [[333, "redefining-built-in-predicates"]], "Redefining inherited predicate definitions": [[326, "redefining-inherited-predicate-definitions"]], "Redefinition of Logtalk built-in methods": [[321, "redefinition-of-logtalk-built-in-methods"]], "Redefinition of Logtalk built-in predicates": [[321, "redefinition-of-logtalk-built-in-predicates"]], "Redefinition of Prolog built-in predicates": [[321, "redefinition-of-prolog-built-in-predicates"]], "Redefinition of predicates declared in uses/2 or use_module/2 directives": [[321, "redefinition-of-predicates-declared-in-uses-2-or-use-module-2-directives"]], "Redirecting assertion failure messages": [[8, "redirecting-assertion-failure-messages"]], "Reference Manual": [[164, null]], "Reflection": [[227, null], [337, null]], "Reflection methods": [[333, "reflection-methods"]], "Registries and packs storage": [[23, "registries-and-packs-storage"]], "Registry development": [[23, "registry-development"]], "Registry handling": [[23, "registry-handling"]], "Registry specification": [[23, "registry-specification"]], "Reloading source files": [[335, "reloading-source-files"]], "Removing all breakpoints": [[318, "removing-all-breakpoints"]], "Representation": [[48, "representation"], [74, "representation"], [75, "representation"]], "Reproducing sequences of arbitrary terms": [[44, "reproducing-sequences-of-arbitrary-terms"]], "Requirements": [[13, "requirements"], [15, "requirements"], [17, "requirements"], [18, "requirements"], [23, "requirements"], [99, "requirements"]], "Reserved predicate names": [[333, "reserved-predicate-names"]], "Restoring the default compiler expansion workflow": [[68, "restoring-the-default-compiler-expansion-workflow"]], "Running parallel Logtalk processes": [[335, "running-parallel-logtalk-processes"]], "Runtime errors": [[321, "runtime-errors"]], "Scanning Prolog modules": [[10, "scanning-prolog-modules"]], "Scanning plain Prolog files": [[10, "scanning-plain-prolog-files"]], "Scope directives": [[333, "scope-directives"]], "Scoped generators and shrinkers": [[44, "scoped-generators-and-shrinkers"]], "Security considerations": [[23, "security-considerations"]], "See also": [[59, "see-also"], [83, "see-also"]], "Selecting tests": [[19, "selecting-tests"]], "Selective inheritance of predicate definitions": [[326, "selective-inheritance-of-predicate-definitions"]], "Selective printing of debug messages": [[318, "selective-printing-of-debug-messages"]], "Sending a message from a module": [[328, "sending-a-message-from-a-module"]], "Sending a message to an object": [[328, "sending-a-message-to-an-object"]], "Sending a message to self": [[328, "sending-a-message-to-self"]], "Separation between interface and implementation": [[324, "separation-between-interface-and-implementation"]], "Settings files": [[335, "settings-files"]], "Setup and cleanup goals": [[19, "setup-and-cleanup-goals"]], "Should I use prototypes or classes in my application?": [[36, "should-i-use-prototypes-or-classes-in-my-application"]], "Signed packs": [[23, "signed-packs"]], "Singleton variables": [[321, "singleton-variables"]], "Size of the generated code": [[332, "size-of-the-generated-code"]], "Skipping tests": [[19, "skipping-tests"]], "Smalltalk nomenclature": [[330, "smalltalk-nomenclature"]], "Smooth learning curve": [[324, "smooth-learning-curve"]], "Source code compilation modes": [[332, "source-code-compilation-modes"]], "Source code compilation order": [[332, "source-code-compilation-order"]], "Source distribution": [[327, "source-distribution"]], "Source file directives": [[156, null], [163, "source-file-directives"]], "Source file names": [[163, "source-file-names"]], "Source file text encoding": [[335, "source-file-text-encoding"]], "Source files": [[163, "source-files"], [335, "source-files"]], "Source files with both Prolog code and Logtalk code": [[329, "source-files-with-both-prolog-code-and-logtalk-code"]], "Source-level debugger": [[318, "source-level-debugger"]], "Specialized objects": [[163, "specialized-objects"]], "Specializing inherited predicate definitions": [[326, "specializing-inherited-predicate-definitions"]], "Starting Logtalk": [[335, "starting-logtalk"]], "Structural reflection": [[337, "structural-reflection"]], "Summary": [[312, "summary"], [314, "summary"], [315, "summary"], [316, "summary"]], "Support": [[37, null]], "Support for both prototype and class-based systems": [[324, "support-for-both-prototype-and-class-based-systems"]], "Support for component-based programming": [[324, "support-for-component-based-programming"]], "Support for multiple object hierarchies": [[324, "support-for-multiple-object-hierarchies"]], "Supported backend Prolog compilers": [[25, "supported-backend-prolog-compilers"]], "Supported diagrams": [[13, "supported-diagrams"]], "Supported graph languages": [[13, "supported-graph-languages"]], "Supported module directives": [[329, "supported-module-directives"]], "Supported operating-systems": [[15, "supported-operating-systems"]], "Suppressing assertion calls from source code": [[8, "suppressing-assertion-calls-from-source-code"]], "Suppressing goals": [[68, "suppressing-goals"]], "Suppressing tested predicates output": [[19, "suppressing-tested-predicates-output"]], "Suspicious calls": [[321, "suspicious-calls"]], "Synchronized directive": [[333, "synchronized-directive"]], "Synchronizing threads through notifications": [[338, "synchronizing-threads-through-notifications"]], "Syntax": [[56, "syntax"]], "Template and modes": [[121, "template-and-modes"], [122, "template-and-modes"], [123, "template-and-modes"], [124, "template-and-modes"], [126, "template-and-modes"], [127, "template-and-modes"], [128, "template-and-modes"], [129, "template-and-modes"], [130, "template-and-modes"], [131, "template-and-modes"], [132, "template-and-modes"], [133, "template-and-modes"], [134, "template-and-modes"], [135, "template-and-modes"], [137, "template-and-modes"], [138, "template-and-modes"], [140, "template-and-modes"], [141, "template-and-modes"], [142, "template-and-modes"], [143, "template-and-modes"], [144, "template-and-modes"], [145, "template-and-modes"], [146, "template-and-modes"], [147, "template-and-modes"], [148, "template-and-modes"], [149, "template-and-modes"], [151, "template-and-modes"], [152, "template-and-modes"], [153, "template-and-modes"], [154, "template-and-modes"], [155, "template-and-modes"], [157, "template-and-modes"], [158, "template-and-modes"], [159, "template-and-modes"], [160, "template-and-modes"], [161, "template-and-modes"], [162, "template-and-modes"]], "Term and goal expansion": [[195, null], [323, null]], "Term write depth": [[318, "term-write-depth"]], "Terms": [[163, "terms"]], "Test annotations": [[19, "test-annotations"]], "Test dialects": [[19, "test-dialects"]], "Test execution times and memory usage": [[19, "test-execution-times-and-memory-usage"]], "Testing": [[1, "testing"], [3, "testing"], [4, "testing"], [6, "testing"], [8, "testing"], [9, "testing"], [10, "testing"], [11, "testing"], [12, "testing"], [13, "testing"], [15, "testing"], [18, "testing"], [19, "testing"], [23, "testing"], [24, "testing"], [25, "testing"], [44, "testing"], [45, "testing"], [46, "testing"], [47, "testing"], [48, "testing"], [49, "testing"], [50, "testing"], [51, "testing"], [54, "testing"], [55, "testing"], [56, "testing"], [59, "testing"], [60, "testing"], [61, "testing"], [62, "testing"], [63, "testing"], [64, "testing"], [65, "testing"], [66, "testing"], [67, "testing"], [68, "testing"], [69, "testing"], [70, "testing"], [72, "testing"], [73, "testing"], [74, "testing"], [75, "testing"], [76, "testing"], [78, "testing"], [79, "testing"], [80, "testing"], [81, "testing"], [82, "testing"], [83, "testing"], [84, "testing"], [85, "testing"], [87, "testing"], [88, "testing"], [89, "testing"], [90, "testing"], [91, "testing"], [92, "testing"], [93, "testing"], [94, "testing"], [95, "testing"], [96, "testing"], [97, "testing"], [98, "testing"], [100, "testing"], [101, "testing"], [102, "testing"], [103, "testing"], [105, "testing"], [106, "testing"]], "Testing generators": [[19, "testing-generators"]], "Testing input/output predicates": [[19, "testing-input-output-predicates"]], "Testing libraries": [[86, "testing-libraries"]], "Testing local predicates": [[19, "testing-local-predicates"]], "Testing non-deterministic predicates": [[19, "testing-non-deterministic-predicates"]], "Testing packs": [[23, "testing-packs"]], "Tests with timeout limits": [[19, "tests-with-timeout-limits"]], "The Logtalk Handbook": [[42, null], [43, null]], "The built-in category core_messages": [[317, "the-built-in-category-core-messages"]], "The built-in object logtalk": [[331, "the-built-in-object-logtalk"]], "The built-in protocol expanding": [[336, "the-built-in-protocol-expanding"]], "The built-in protocol forwarding": [[336, "the-built-in-protocol-forwarding"]], "The built-in protocol monitoring": [[336, "the-built-in-protocol-monitoring"]], "The built-in pseudo-object user": [[331, "the-built-in-pseudo-object-user"]], "The integration scripts/shortcuts are not working!": [[32, "the-integration-scripts-shortcuts-are-not-working"]], "Third-party tools": [[9, "third-party-tools"]], "Threaded engines": [[338, "threaded-engines"]], "Tool dependencies for full functionality": [[22, "tool-dependencies-for-full-functionality"]], "Tools common flags": [[22, "tools-common-flags"]], "Tools documentation": [[22, "tools-documentation"]], "Tools requirements": [[22, "tools-requirements"]], "Tracing program execution": [[318, "tracing-program-execution"]], "Transparent-box view": [[337, "transparent-box-view"]], "Trivial fails": [[321, "trivial-fails"]], "Troubleshooting": [[38, null]], "Tutorial": [[313, null]], "Type-checking": [[97, "type-checking"], [321, "type-checking"]], "Type-checking ULIDs": [[98, "type-checking-ulids"]], "UPN metric": [[9, "upn-metric"]], "Ubuntu": [[22, "ubuntu"]], "Union of inherited and local predicate definitions": [[326, "union-of-inherited-and-local-predicate-definitions"]], "Unknown entities": [[321, "unknown-entities"]], "Unsupported module directives": [[329, "unsupported-module-directives"]], "Usability": [[39, null]], "Usage": [[9, "usage"], [10, "usage"], [11, "usage"], [12, "usage"], [15, "usage"], [17, "usage"], [23, "usage"], [26, "usage"], [44, "usage"], [50, "usage"], [51, "usage"], [54, "usage"], [55, "usage"], [56, "usage"], [58, "usage"], [59, "usage"], [60, "usage"], [61, "usage"], [62, "usage"], [63, "usage"], [64, "usage"], [67, "usage"], [68, "usage"], [70, "usage"], [73, "usage"], [76, "usage"], [78, "usage"], [79, "usage"], [80, "usage"], [81, "usage"], [82, "usage"], [83, "usage"], [84, "usage"], [87, "usage"], [88, "usage"], [90, "usage"], [92, "usage"], [96, "usage"], [99, "usage"], [100, "usage"]], "User Manual": [[325, null]], "User defined expansion workflows": [[323, "user-defined-expansion-workflows"]], "User-defined flags": [[335, "user-defined-flags"]], "User-defined test dialects": [[19, "user-defined-test-dialects"]], "Uses directive": [[333, "uses-directive"]], "Using Prolog defined expansions": [[323, "using-prolog-defined-expansions"]], "Using compiler options on calls to the Logtalk compiling and loading predicates does not work!": [[38, "using-compiler-options-on-calls-to-the-logtalk-compiling-and-loading-predicates-does-not-work"]], "Using the Prolog backend adapter file expansion rules": [[68, "using-the-prolog-backend-adapter-file-expansion-rules"]], "Using the expansion rules defined in a Prolog module": [[68, "using-the-expansion-rules-defined-in-a-prolog-module"]], "Using the term-expansion mechanism for debugging": [[318, "using-the-term-expansion-mechanism-for-debugging"]], "Utility predicates": [[19, "utility-predicates"]], "Version flags": [[335, "version-flags"]], "Virtual environments": [[23, "virtual-environments"]], "Virtual source file terms and loading context": [[323, "virtual-source-file-terms-and-loading-context"]], "Website": [[99, "website"]], "What are the backend Prolog compiler requirements to run Logtalk?": [[28, "what-are-the-backend-prolog-compiler-requirements-to-run-logtalk"]], "What kind of code Logtalk generates when compiling objects? Dynamic code? Static code?": [[34, "what-kind-of-code-logtalk-generates-when-compiling-objects-dynamic-code-static-code"]], "What support is provided in Logtalk for defining and using components?": [[36, "what-support-is-provided-in-logtalk-for-defining-and-using-components"]], "What support is provided in Logtalk for reflective programming?": [[36, "what-support-is-provided-in-logtalk-for-reflective-programming"]], "What\u2019s the Logtalk distribution license?": [[33, "what-s-the-logtalk-distribution-license"]], "What\u2019s the final license for a combination of Logtalk with a Prolog compiler?": [[33, "what-s-the-final-license-for-a-combination-of-logtalk-with-a-prolog-compiler"]], "Which Prolog-dependent factors are most crucial for good Logtalk performance?": [[34, "which-prolog-dependent-factors-are-most-crucial-for-good-logtalk-performance"]], "Why are all versions of Logtalk numbered 2.x or 3.x?": [[30, "why-are-all-versions-of-logtalk-numbered-2-x-or-3-x"]], "Why do I need a Prolog compiler to use Logtalk?": [[30, "why-do-i-need-a-prolog-compiler-to-use-logtalk"]], "Windows - Chocolatey": [[13, "windows-chocolatey"], [22, "windows-chocolatey"]], "Windows - PowerShell add-ons": [[22, "windows-powershell-add-ons"]], "Workflows": [[27, "workflows"]], "Working with callbacks to generate content": [[69, "working-with-callbacks-to-generate-content"]], "Working with custom elements": [[69, "working-with-custom-elements"]], "Working with test data files": [[19, "working-with-test-data-files"]], "Wrap the contents of a plain Prolog file as an object": [[68, "wrap-the-contents-of-a-plain-prolog-file-as-an-object"]], "Writing and running applications": [[335, null]], "Writing and running tests": [[19, "writing-and-running-tests"]], "[]/1": [[112, null]], "abolish/1": [[165, null]], "abolish_category/1": [[245, null]], "abolish_events/5": [[246, null]], "abolish_object/1": [[247, null]], "abolish_protocol/1": [[248, null]], "after/3": [[166, null]], "alias/2": [[121, null]], "arbitrary": [[44, null]], "asdf": [[7, null]], "ask_question/5": [[167, null]], "asserta/1": [[169, null]], "assertions": [[8, null]], "assertz/1": [[170, null]], "assignvars": [[45, null]], "bagof/3": [[171, null]], "base64": [[46, null]], "basic_types": [[47, null]], "before/3": [[172, null]], "built_in/0": [[122, null]], "call//1-N": [[173, null]], "call/1-N": [[174, null]], "catch/3": [[175, null]], "category/1-4": [[123, null]], "category_property/2": [[250, null]], "cbor": [[48, null]], "clause/2": [[176, null]], "code_metrics": [[9, null]], "coinductive/1": [[124, null]], "coinductive_success_hook/1-2": [[178, null]], "complements_object/2": [[252, null]], "conforms_to_protocol/2-3": [[253, null]], "consistency_error/3": [[179, null]], "context/1": [[180, null]], "core": [[49, null]], "coroutining": [[50, null]], "create_category/4": [[254, null]], "create_logtalk_flag/3": [[255, null]], "create_object/4": [[256, null]], "create_protocol/3": [[257, null]], "csv": [[51, null]], "current_category/1": [[259, null]], "current_event/5": [[260, null]], "current_logtalk_flag/2": [[261, null]], "current_object/1": [[262, null]], "current_op/3": [[182, null]], "current_predicate/1": [[183, null]], "current_protocol/1": [[263, null]], "dates": [[52, null]], "dead_code_scanner": [[10, null]], "debug_messages": [[11, null]], "debugger": [[12, null]], "define_events/5": [[264, null]], "dependents": [[53, null]], "diagrams": [[13, null]], "dictionaries": [[54, null]], "dif": [[55, null]], "discontiguous/1": [[126, null]], "doclet": [[14, null]], "domain_error/2": [[187, null]], "dynamic/0": [[127, null]], "dynamic/1": [[128, null]], "edcg": [[56, null]], "elif/1": [[129, null]], "else/0": [[130, null]], "encoding/1": [[131, null]], "end_category/0": [[132, null]], "end_object/0": [[133, null]], "end_protocol/0": [[134, null]], "endif/0": [[135, null]], "eos//0": [[188, null]], "evaluation_error/1": [[190, null]], "events": [[57, null]], "existence_error/2": [[192, null]], "expand_goal/2": [[193, null]], "expand_library_alias_paths": [[58, null]], "expand_term/2": [[194, null]], "expecteds": [[59, null]], "extends_category/2-3": [[270, null]], "extends_object/2-3": [[271, null]], "extends_protocol/2-3": [[272, null]], "fail/0": [[196, null]], "false/0": [[197, null]], "fcube": [[103, null]], "findall/3": [[198, null]], "findall/4": [[199, null]], "flags": [[1, null]], "forall/2": [[200, null]], "format": [[60, null]], "forward/1": [[201, null]], "genint": [[61, null]], "gensym": [[62, null]], "git": [[63, null]], "goal_expansion/2": [[203, null]], "grammars": [[64, null]], "heaps": [[65, null]], "help": [[15, null]], "hierarchies": [[66, null]], "hook_flows": [[67, null]], "hook_objects": [[68, null]], "html": [[69, null]], "ids": [[70, null]], "if/1": [[137, null]], "ignore/1": [[204, null]], "implements_protocol/2-3": [[274, null]], "imports_category/2-3": [[275, null]], "include/1": [[138, null]], "info/1": [[140, null]], "info/2": [[141, null]], "initialization/1": [[142, null]], "instantiates_class/2-3": [[277, null]], "instantiation_error/0": [[206, null]], "intervals": [[72, null]], "iso8601": [[3, null]], "issue_creator": [[17, null]], "java": [[73, null]], "json": [[74, null]], "json_lines": [[75, null]], "lgtdoc": [[18, null]], "lgtunit": [[19, null]], "linter": [[20, null]], "listing": [[76, null]], "logging": [[77, null]], "logtalk_compile/1": [[279, null]], "logtalk_compile/2": [[280, null]], "logtalk_library_path/2": [[281, null]], "logtalk_linter_hook/7": [[282, null]], "logtalk_load/1": [[283, null]], "logtalk_load/2": [[284, null]], "logtalk_load_context/2": [[285, null]], "logtalk_make/0": [[286, null]], "logtalk_make/1": [[287, null]], "logtalk_make_target_action/1": [[288, null]], "loops": [[78, null]], "macOS - Homebrew": [[13, "macos-homebrew"], [22, "macos-homebrew"]], "macOS - MacPorts": [[13, "macos-macports"], [22, "macos-macports"]], "make": [[21, null]], "message_hook/4": [[208, null]], "message_prefix_file/6": [[209, null]], "message_prefix_stream/4": [[210, null]], "message_tokens//2": [[211, null]], "meta": [[79, null]], "meta_compiler": [[80, null]], "meta_non_terminal/1": [[143, null]], "meta_predicate/1": [[144, null]], "metagol": [[105, null]], "mode/2": [[145, null]], "mode_non_terminal/2": [[146, null]], "multifile/1": [[147, null]], "mutations": [[81, null]], "nested_dictionaries": [[82, null]], "object/1-5": [[148, null]], "object_property/2": [[290, null]], "once/1": [[214, null]], "op/3": [[149, null]], "optionals": [[83, null]], "options": [[84, null]], "os": [[85, null]], "packs": [[23, null]], "parameter/2": [[215, null]], "pddl_parser": [[4, null]], "permission_error/3": [[216, null]], "phrase//1": [[217, null]], "phrase/2": [[218, null]], "phrase/3": [[219, null]], "ports_profiler": [[24, null]], "predicate_property/2": [[220, null]], "print_message/3": [[221, null]], "print_message_token/4": [[222, null]], "print_message_tokens/3": [[223, null]], "private/1": [[151, null]], "profiler": [[25, null]], "protected/1": [[152, null]], "protocol/1-2": [[153, null]], "protocol_property/2": [[291, null]], "public/1": [[154, null]], "question_hook/6": [[225, null]], "question_prompt_stream/4": [[226, null]], "queues": [[87, null]], "random": [[88, null]], "reader": [[89, null]], "recorded_database": [[90, null]], "redis": [[91, null]], "repeat/0": [[228, null]], "representation_error/1": [[229, null]], "resource_error/1": [[230, null]], "retract/1": [[231, null]], "retractall/1": [[232, null]], "self/1": [[233, null]], "sender/1": [[234, null]], "set_logtalk_flag/2": [[155, null], [292, null]], "setof/3": [[235, null]], "sets": [[92, null]], "specializes_class/2-3": [[293, null]], "statistics": [[93, null]], "synchronized/1": [[157, null]], "syntax_error/1": [[237, null]], "system_error/0": [[238, null]], "term_expansion/2": [[239, null]], "term_io": [[94, null]], "this/1": [[240, null]], "threaded/0": [[158, null]], "threaded/1": [[294, null]], "threaded_call/1-2": [[295, null]], "threaded_cancel/1": [[296, null]], "threaded_engine/1": [[297, null]], "threaded_engine_create/3": [[298, null]], "threaded_engine_destroy/1": [[299, null]], "threaded_engine_fetch/1": [[300, null]], "threaded_engine_next/2": [[301, null]], "threaded_engine_next_reified/2": [[302, null]], "threaded_engine_post/2": [[303, null]], "threaded_engine_self/1": [[304, null]], "threaded_engine_yield/1": [[305, null]], "threaded_exit/1-2": [[306, null]], "threaded_ignore/1": [[307, null]], "threaded_notify/1": [[308, null]], "threaded_once/1-2": [[309, null]], "threaded_peek/1-2": [[310, null]], "threaded_wait/1": [[311, null]], "throw/1": [[241, null]], "timeout": [[95, null]], "toychr": [[106, null]], "true/0": [[242, null]], "tsv": [[96, null]], "tutor": [[26, null]], "type_error/2": [[243, null]], "types": [[97, null]], "ulid": [[98, null]], "unicode_arabic_shaping.pl": [[99, "unicode-arabic-shaping-pl"]], "unicode_bidi_mirroring.pl": [[99, "unicode-bidi-mirroring-pl"]], "unicode_blocks.pl": [[99, "unicode-blocks-pl"]], "unicode_case_folding.pl": [[99, "unicode-case-folding-pl"]], "unicode_categories.pl": [[99, "unicode-categories-pl"]], "unicode_cjk_radicals.pl": [[99, "unicode-cjk-radicals-pl"]], "unicode_composition_exclusions.pl": [[99, "unicode-composition-exclusions-pl"]], "unicode_core_properties.pl": [[99, "unicode-core-properties-pl"]], "unicode_data": [[99, null]], "unicode_decomposition_type.pl": [[99, "unicode-decomposition-type-pl"]], "unicode_derived_age.pl": [[99, "unicode-derived-age-pl"]], "unicode_derived_bidi_class.pl": [[99, "unicode-derived-bidi-class-pl"]], "unicode_derived_combining_class.pl": [[99, "unicode-derived-combining-class-pl"]], "unicode_derived_core_properties.pl": [[99, "unicode-derived-core-properties-pl"]], "unicode_derived_decomposition_type.pl": [[99, "unicode-derived-decomposition-type-pl"]], "unicode_derived_east_asian_width.pl": [[99, "unicode-derived-east-asian-width-pl"]], "unicode_derived_joining_group.pl": [[99, "unicode-derived-joining-group-pl"]], "unicode_derived_joining_type.pl": [[99, "unicode-derived-joining-type-pl"]], "unicode_derived_line_break.pl": [[99, "unicode-derived-line-break-pl"]], "unicode_derived_normalization_props.pl": [[99, "unicode-derived-normalization-props-pl"]], "unicode_derived_numeric_type.pl": [[99, "unicode-derived-numeric-type-pl"]], "unicode_derived_numeric_values.pl": [[99, "unicode-derived-numeric-values-pl"]], "unicode_hangul_syllable_type.pl": [[99, "unicode-hangul-syllable-type-pl"]], "unicode_indic_matra_category.pl": [[99, "unicode-indic-matra-category-pl"]], "unicode_indic_syllabic_category.pl": [[99, "unicode-indic-syllabic-category-pl"]], "unicode_jamo.pl": [[99, "unicode-jamo-pl"]], "unicode_name_aliases.pl": [[99, "unicode-name-aliases-pl"]], "unicode_names.pl": [[99, "unicode-names-pl"]], "unicode_prop_list.pl": [[99, "unicode-prop-list-pl"]], "unicode_range_scripts.pl": [[99, "unicode-range-scripts-pl"]], "unicode_script_extensions.pl": [[99, "unicode-script-extensions-pl"]], "unicode_scripts.pl": [[99, "unicode-scripts-pl"]], "unicode_special_casing.pl": [[99, "unicode-special-casing-pl"]], "unicode_unihan_variants.pl": [[99, "unicode-unihan-variants-pl"]], "unicode_version.pl": [[99, "unicode-version-pl"]], "uninstantiation_error/1": [[244, null]], "union_find": [[100, null]], "use_module/1": [[159, null]], "use_module/2": [[160, null]], "uses/1": [[161, null]], "uses/2": [[162, null]], "uuid": [[101, null]], "verdi_neruda": [[5, null]], "wrapper": [[27, null]], "xml_parser": [[6, null]], "zippers": [[102, null]], "{}/1": [[113, null]]}, "docnames": ["bibliography", "contributions/flags", "contributions/index", "contributions/iso8601", "contributions/pddl_parser", "contributions/verdi_neruda", "contributions/xml_parser", "devtools/asdf", "devtools/assertions", "devtools/code_metrics", "devtools/dead_code_scanner", "devtools/debug_messages", "devtools/debugger", "devtools/diagrams", "devtools/doclet", "devtools/help", "devtools/index", "devtools/issue_creator", "devtools/lgtdoc", "devtools/lgtunit", "devtools/linter", "devtools/make", "devtools/overview", "devtools/packs", "devtools/ports_profiler", "devtools/profiler", "devtools/tutor", "devtools/wrapper", "faq/compatibility", "faq/deployment", "faq/general", "faq/index", "faq/installation", "faq/licensing", "faq/performance", "faq/portability", "faq/programming", "faq/support", "faq/troubleshooting", "faq/usability", "genindex", "glossary", "index", "index_latexpdf", "libraries/arbitrary", "libraries/assignvars", "libraries/base64", "libraries/basic_types", "libraries/cbor", "libraries/core", "libraries/coroutining", "libraries/csv", "libraries/dates", "libraries/dependents", "libraries/dictionaries", "libraries/dif", "libraries/edcg", "libraries/events", "libraries/expand_library_alias_paths", "libraries/expecteds", "libraries/format", "libraries/genint", "libraries/gensym", "libraries/git", "libraries/grammars", "libraries/heaps", "libraries/hierarchies", "libraries/hook_flows", "libraries/hook_objects", "libraries/html", "libraries/ids", "libraries/index", "libraries/intervals", "libraries/java", "libraries/json", "libraries/json_lines", "libraries/listing", "libraries/logging", "libraries/loops", "libraries/meta", "libraries/meta_compiler", "libraries/mutations", "libraries/nested_dictionaries", "libraries/optionals", "libraries/options", "libraries/os", "libraries/overview", "libraries/queues", "libraries/random", "libraries/reader", "libraries/recorded_database", "libraries/redis", "libraries/sets", "libraries/statistics", "libraries/term_io", "libraries/timeout", "libraries/tsv", "libraries/types", "libraries/ulid", "libraries/unicode_data", "libraries/union_find", "libraries/uuid", "libraries/zippers", "ports/fcube", "ports/index", "ports/metagol", "ports/toychr", "refman/control/call_in_this", "refman/control/call_in_this_1", "refman/control/call_super_1", "refman/control/context_switch_2", "refman/control/context_switching_calls", "refman/control/delegate_message_1", "refman/control/external_call_1", "refman/control/external_calls", "refman/control/index", "refman/control/message_delegation", "refman/control/message_sending", "refman/control/send_to_object_2", "refman/control/send_to_self_1", "refman/control/super_calls", "refman/directives/alias_2", "refman/directives/built_in_0", "refman/directives/category_1_4", "refman/directives/coinductive_1", "refman/directives/conditional_compilation_directives", "refman/directives/discontiguous_1", "refman/directives/dynamic_0", "refman/directives/dynamic_1", "refman/directives/elif_1", "refman/directives/else_0", "refman/directives/encoding_1", "refman/directives/end_category_0", "refman/directives/end_object_0", "refman/directives/end_protocol_0", "refman/directives/endif_0", "refman/directives/entity_directives", "refman/directives/if_1", "refman/directives/include_1", "refman/directives/index", "refman/directives/info_1", "refman/directives/info_2", "refman/directives/initialization_1", "refman/directives/meta_non_terminal_1", "refman/directives/meta_predicate_1", "refman/directives/mode_2", "refman/directives/mode_non_terminal_2", "refman/directives/multifile_1", "refman/directives/object_1_5", "refman/directives/op_3", "refman/directives/predicate_directives", "refman/directives/private_1", "refman/directives/protected_1", "refman/directives/protocol_1_2", "refman/directives/public_1", "refman/directives/set_logtalk_flag_2", "refman/directives/source_file_directives", "refman/directives/synchronized_1", "refman/directives/threaded_0", "refman/directives/use_module_1", "refman/directives/use_module_2", "refman/directives/uses_1", "refman/directives/uses_2", "refman/grammar", "refman/index", "refman/methods/abolish_1", "refman/methods/after_3", "refman/methods/ask_question_5", "refman/methods/asking_methods", "refman/methods/asserta_1", "refman/methods/assertz_1", "refman/methods/bagof_3", "refman/methods/before_3", "refman/methods/call_1", "refman/methods/call_N", "refman/methods/catch_3", "refman/methods/clause_2", "refman/methods/coinduction_methods", "refman/methods/coinductive_success_hook_1_2", "refman/methods/consistency_error_3", "refman/methods/context_1", "refman/methods/context_methods", "refman/methods/current_op_3", "refman/methods/current_predicate_1", "refman/methods/cut_0", "refman/methods/database_methods", "refman/methods/dcg_methods", "refman/methods/domain_error_2", "refman/methods/eos_0", "refman/methods/error_handling_methods", "refman/methods/evaluation_error_1", "refman/methods/event_methods", "refman/methods/existence_error_2", "refman/methods/expand_goal_2", "refman/methods/expand_term_2", "refman/methods/expansion_methods", "refman/methods/fail_0", "refman/methods/false_0", "refman/methods/findall_3", "refman/methods/findall_4", "refman/methods/forall_2", "refman/methods/forward_1", "refman/methods/forwarding_methods", "refman/methods/goal_expansion_2", "refman/methods/ignore_1", "refman/methods/index", "refman/methods/instantiation_error_0", "refman/methods/logic_and_control_methods", "refman/methods/message_hook_4", "refman/methods/message_prefix_file_6", "refman/methods/message_prefix_stream_4", "refman/methods/message_tokens_2", "refman/methods/meta_call_methods", "refman/methods/not_1", "refman/methods/once_1", "refman/methods/parameter_2", "refman/methods/permission_error_3", "refman/methods/phrase_1", "refman/methods/phrase_2", "refman/methods/phrase_3", "refman/methods/predicate_property_2", "refman/methods/print_message_3", "refman/methods/print_message_token_4", "refman/methods/print_message_tokens_3", "refman/methods/printing_methods", "refman/methods/question_hook_6", "refman/methods/question_prompt_stream_4", "refman/methods/reflection_methods", "refman/methods/repeat_0", "refman/methods/representation_error_1", "refman/methods/resource_error_1", "refman/methods/retract_1", "refman/methods/retractall_1", "refman/methods/self_1", "refman/methods/sender_1", "refman/methods/setof_3", "refman/methods/solution_methods", "refman/methods/syntax_error_1", "refman/methods/system_error_0", "refman/methods/term_expansion_2", "refman/methods/this_1", "refman/methods/throw_1", "refman/methods/true_0", "refman/methods/type_error_2", "refman/methods/uninstantiation_error_1", "refman/predicates/abolish_category_1", "refman/predicates/abolish_events_5", "refman/predicates/abolish_object_1", "refman/predicates/abolish_protocol_1", "refman/predicates/abolishing_entity_predicates", "refman/predicates/category_property_2", "refman/predicates/compiling_predicates", "refman/predicates/complements_object_2", "refman/predicates/conforms_to_protocol_2_3", "refman/predicates/create_category_4", "refman/predicates/create_logtalk_flag_3", "refman/predicates/create_object_4", "refman/predicates/create_protocol_3", "refman/predicates/creating_entity_predicates", "refman/predicates/current_category_1", "refman/predicates/current_event_5", "refman/predicates/current_logtalk_flag_2", "refman/predicates/current_object_1", "refman/predicates/current_protocol_1", "refman/predicates/define_events_5", "refman/predicates/engine_predicates", "refman/predicates/entity_relation_predicates", "refman/predicates/enumerating_entity_predicates", "refman/predicates/enumerating_entity_property_predicates", "refman/predicates/event_handling_predicates", "refman/predicates/extends_category_2_3", "refman/predicates/extends_object_2_3", "refman/predicates/extends_protocol_2_3", "refman/predicates/flag_predicates", "refman/predicates/implements_protocol_2_3", "refman/predicates/imports_category_2_3", "refman/predicates/index", "refman/predicates/instantiates_class_2_3", "refman/predicates/linter_predicates", "refman/predicates/logtalk_compile_1", "refman/predicates/logtalk_compile_2", "refman/predicates/logtalk_library_path_2", "refman/predicates/logtalk_linter_hook_7", "refman/predicates/logtalk_load_1", "refman/predicates/logtalk_load_2", "refman/predicates/logtalk_load_context_2", "refman/predicates/logtalk_make_0", "refman/predicates/logtalk_make_1", "refman/predicates/logtalk_make_target_action_1", "refman/predicates/multi_threading_predicates", "refman/predicates/object_property_2", "refman/predicates/protocol_property_2", "refman/predicates/set_logtalk_flag_2", "refman/predicates/specializes_class_2_3", "refman/predicates/threaded_1", "refman/predicates/threaded_call_1_2", "refman/predicates/threaded_cancel_1", "refman/predicates/threaded_engine_1", "refman/predicates/threaded_engine_create_3", "refman/predicates/threaded_engine_destroy_1", "refman/predicates/threaded_engine_fetch_1", "refman/predicates/threaded_engine_next_2", "refman/predicates/threaded_engine_next_reified_2", "refman/predicates/threaded_engine_post_2", "refman/predicates/threaded_engine_self_1", "refman/predicates/threaded_engine_yield_1", "refman/predicates/threaded_exit_1_2", "refman/predicates/threaded_ignore_1", "refman/predicates/threaded_notify_1", "refman/predicates/threaded_once_1_2", "refman/predicates/threaded_peek_1_2", "refman/predicates/threaded_wait_1", "tutorial/attributes", "tutorial/index", "tutorial/lists", "tutorial/profiling", "tutorial/reflection", "userman/categories", "userman/debugging", "userman/declarative", "userman/documenting", "userman/errors", "userman/events", "userman/expansion", "userman/features", "userman/index", "userman/inheritance", "userman/installing", "userman/messages", "userman/migration", "userman/nomenclature", "userman/objects", "userman/performance", "userman/predicates", "userman/printing", "userman/programming", "userman/protocols", "userman/reflection", "userman/threads"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["bibliography.rst", "contributions/flags.rst", "contributions/index.rst", "contributions/iso8601.rst", "contributions/pddl_parser.rst", "contributions/verdi_neruda.rst", "contributions/xml_parser.rst", "devtools/asdf.rst", "devtools/assertions.rst", "devtools/code_metrics.rst", "devtools/dead_code_scanner.rst", "devtools/debug_messages.rst", "devtools/debugger.rst", "devtools/diagrams.rst", "devtools/doclet.rst", "devtools/help.rst", "devtools/index.rst", "devtools/issue_creator.rst", "devtools/lgtdoc.rst", "devtools/lgtunit.rst", "devtools/linter.rst", "devtools/make.rst", "devtools/overview.rst", "devtools/packs.rst", "devtools/ports_profiler.rst", "devtools/profiler.rst", "devtools/tutor.rst", "devtools/wrapper.rst", "faq/compatibility.rst", "faq/deployment.rst", "faq/general.rst", "faq/index.rst", "faq/installation.rst", "faq/licensing.rst", "faq/performance.rst", "faq/portability.rst", "faq/programming.rst", "faq/support.rst", "faq/troubleshooting.rst", "faq/usability.rst", "genindex.rst", "glossary.rst", "index.rst", "index_latexpdf.rst", "libraries/arbitrary.rst", "libraries/assignvars.rst", "libraries/base64.rst", "libraries/basic_types.rst", "libraries/cbor.rst", "libraries/core.rst", "libraries/coroutining.rst", "libraries/csv.rst", "libraries/dates.rst", "libraries/dependents.rst", "libraries/dictionaries.rst", "libraries/dif.rst", "libraries/edcg.rst", "libraries/events.rst", "libraries/expand_library_alias_paths.rst", "libraries/expecteds.rst", "libraries/format.rst", "libraries/genint.rst", "libraries/gensym.rst", "libraries/git.rst", "libraries/grammars.rst", "libraries/heaps.rst", "libraries/hierarchies.rst", "libraries/hook_flows.rst", "libraries/hook_objects.rst", "libraries/html.rst", "libraries/ids.rst", "libraries/index.rst", "libraries/intervals.rst", "libraries/java.rst", "libraries/json.rst", "libraries/json_lines.rst", "libraries/listing.rst", "libraries/logging.rst", "libraries/loops.rst", "libraries/meta.rst", "libraries/meta_compiler.rst", "libraries/mutations.rst", "libraries/nested_dictionaries.rst", "libraries/optionals.rst", "libraries/options.rst", "libraries/os.rst", "libraries/overview.rst", "libraries/queues.rst", "libraries/random.rst", "libraries/reader.rst", "libraries/recorded_database.rst", "libraries/redis.rst", "libraries/sets.rst", "libraries/statistics.rst", "libraries/term_io.rst", "libraries/timeout.rst", "libraries/tsv.rst", "libraries/types.rst", "libraries/ulid.rst", "libraries/unicode_data.rst", "libraries/union_find.rst", "libraries/uuid.rst", "libraries/zippers.rst", "ports/fcube.rst", "ports/index.rst", "ports/metagol.rst", "ports/toychr.rst", "refman/control/call_in_this.rst", "refman/control/call_in_this_1.rst", "refman/control/call_super_1.rst", "refman/control/context_switch_2.rst", "refman/control/context_switching_calls.rst", "refman/control/delegate_message_1.rst", "refman/control/external_call_1.rst", "refman/control/external_calls.rst", "refman/control/index.rst", "refman/control/message_delegation.rst", "refman/control/message_sending.rst", "refman/control/send_to_object_2.rst", "refman/control/send_to_self_1.rst", "refman/control/super_calls.rst", "refman/directives/alias_2.rst", "refman/directives/built_in_0.rst", "refman/directives/category_1_4.rst", "refman/directives/coinductive_1.rst", "refman/directives/conditional_compilation_directives.rst", "refman/directives/discontiguous_1.rst", "refman/directives/dynamic_0.rst", "refman/directives/dynamic_1.rst", "refman/directives/elif_1.rst", "refman/directives/else_0.rst", "refman/directives/encoding_1.rst", "refman/directives/end_category_0.rst", "refman/directives/end_object_0.rst", "refman/directives/end_protocol_0.rst", "refman/directives/endif_0.rst", "refman/directives/entity_directives.rst", "refman/directives/if_1.rst", "refman/directives/include_1.rst", "refman/directives/index.rst", "refman/directives/info_1.rst", "refman/directives/info_2.rst", "refman/directives/initialization_1.rst", "refman/directives/meta_non_terminal_1.rst", "refman/directives/meta_predicate_1.rst", "refman/directives/mode_2.rst", "refman/directives/mode_non_terminal_2.rst", "refman/directives/multifile_1.rst", "refman/directives/object_1_5.rst", "refman/directives/op_3.rst", "refman/directives/predicate_directives.rst", "refman/directives/private_1.rst", "refman/directives/protected_1.rst", "refman/directives/protocol_1_2.rst", "refman/directives/public_1.rst", "refman/directives/set_logtalk_flag_2.rst", "refman/directives/source_file_directives.rst", "refman/directives/synchronized_1.rst", "refman/directives/threaded_0.rst", "refman/directives/use_module_1.rst", "refman/directives/use_module_2.rst", "refman/directives/uses_1.rst", "refman/directives/uses_2.rst", "refman/grammar.rst", "refman/index.rst", "refman/methods/abolish_1.rst", "refman/methods/after_3.rst", "refman/methods/ask_question_5.rst", "refman/methods/asking_methods.rst", "refman/methods/asserta_1.rst", "refman/methods/assertz_1.rst", "refman/methods/bagof_3.rst", "refman/methods/before_3.rst", "refman/methods/call_1.rst", "refman/methods/call_N.rst", "refman/methods/catch_3.rst", "refman/methods/clause_2.rst", "refman/methods/coinduction_methods.rst", "refman/methods/coinductive_success_hook_1_2.rst", "refman/methods/consistency_error_3.rst", "refman/methods/context_1.rst", "refman/methods/context_methods.rst", "refman/methods/current_op_3.rst", "refman/methods/current_predicate_1.rst", "refman/methods/cut_0.rst", "refman/methods/database_methods.rst", "refman/methods/dcg_methods.rst", "refman/methods/domain_error_2.rst", "refman/methods/eos_0.rst", "refman/methods/error_handling_methods.rst", "refman/methods/evaluation_error_1.rst", "refman/methods/event_methods.rst", "refman/methods/existence_error_2.rst", "refman/methods/expand_goal_2.rst", "refman/methods/expand_term_2.rst", "refman/methods/expansion_methods.rst", "refman/methods/fail_0.rst", "refman/methods/false_0.rst", "refman/methods/findall_3.rst", "refman/methods/findall_4.rst", "refman/methods/forall_2.rst", "refman/methods/forward_1.rst", "refman/methods/forwarding_methods.rst", "refman/methods/goal_expansion_2.rst", "refman/methods/ignore_1.rst", "refman/methods/index.rst", "refman/methods/instantiation_error_0.rst", "refman/methods/logic_and_control_methods.rst", "refman/methods/message_hook_4.rst", "refman/methods/message_prefix_file_6.rst", "refman/methods/message_prefix_stream_4.rst", "refman/methods/message_tokens_2.rst", "refman/methods/meta_call_methods.rst", "refman/methods/not_1.rst", "refman/methods/once_1.rst", "refman/methods/parameter_2.rst", "refman/methods/permission_error_3.rst", "refman/methods/phrase_1.rst", "refman/methods/phrase_2.rst", "refman/methods/phrase_3.rst", "refman/methods/predicate_property_2.rst", "refman/methods/print_message_3.rst", "refman/methods/print_message_token_4.rst", "refman/methods/print_message_tokens_3.rst", "refman/methods/printing_methods.rst", "refman/methods/question_hook_6.rst", "refman/methods/question_prompt_stream_4.rst", "refman/methods/reflection_methods.rst", "refman/methods/repeat_0.rst", "refman/methods/representation_error_1.rst", "refman/methods/resource_error_1.rst", "refman/methods/retract_1.rst", "refman/methods/retractall_1.rst", "refman/methods/self_1.rst", "refman/methods/sender_1.rst", "refman/methods/setof_3.rst", "refman/methods/solution_methods.rst", "refman/methods/syntax_error_1.rst", "refman/methods/system_error_0.rst", "refman/methods/term_expansion_2.rst", "refman/methods/this_1.rst", "refman/methods/throw_1.rst", "refman/methods/true_0.rst", "refman/methods/type_error_2.rst", "refman/methods/uninstantiation_error_1.rst", "refman/predicates/abolish_category_1.rst", "refman/predicates/abolish_events_5.rst", "refman/predicates/abolish_object_1.rst", "refman/predicates/abolish_protocol_1.rst", "refman/predicates/abolishing_entity_predicates.rst", "refman/predicates/category_property_2.rst", "refman/predicates/compiling_predicates.rst", "refman/predicates/complements_object_2.rst", "refman/predicates/conforms_to_protocol_2_3.rst", "refman/predicates/create_category_4.rst", "refman/predicates/create_logtalk_flag_3.rst", "refman/predicates/create_object_4.rst", "refman/predicates/create_protocol_3.rst", "refman/predicates/creating_entity_predicates.rst", "refman/predicates/current_category_1.rst", "refman/predicates/current_event_5.rst", "refman/predicates/current_logtalk_flag_2.rst", "refman/predicates/current_object_1.rst", "refman/predicates/current_protocol_1.rst", "refman/predicates/define_events_5.rst", "refman/predicates/engine_predicates.rst", "refman/predicates/entity_relation_predicates.rst", "refman/predicates/enumerating_entity_predicates.rst", "refman/predicates/enumerating_entity_property_predicates.rst", "refman/predicates/event_handling_predicates.rst", "refman/predicates/extends_category_2_3.rst", "refman/predicates/extends_object_2_3.rst", "refman/predicates/extends_protocol_2_3.rst", "refman/predicates/flag_predicates.rst", "refman/predicates/implements_protocol_2_3.rst", "refman/predicates/imports_category_2_3.rst", "refman/predicates/index.rst", "refman/predicates/instantiates_class_2_3.rst", "refman/predicates/linter_predicates.rst", "refman/predicates/logtalk_compile_1.rst", "refman/predicates/logtalk_compile_2.rst", "refman/predicates/logtalk_library_path_2.rst", "refman/predicates/logtalk_linter_hook_7.rst", "refman/predicates/logtalk_load_1.rst", "refman/predicates/logtalk_load_2.rst", "refman/predicates/logtalk_load_context_2.rst", "refman/predicates/logtalk_make_0.rst", "refman/predicates/logtalk_make_1.rst", "refman/predicates/logtalk_make_target_action_1.rst", "refman/predicates/multi_threading_predicates.rst", "refman/predicates/object_property_2.rst", "refman/predicates/protocol_property_2.rst", "refman/predicates/set_logtalk_flag_2.rst", "refman/predicates/specializes_class_2_3.rst", "refman/predicates/threaded_1.rst", "refman/predicates/threaded_call_1_2.rst", "refman/predicates/threaded_cancel_1.rst", "refman/predicates/threaded_engine_1.rst", "refman/predicates/threaded_engine_create_3.rst", "refman/predicates/threaded_engine_destroy_1.rst", "refman/predicates/threaded_engine_fetch_1.rst", "refman/predicates/threaded_engine_next_2.rst", "refman/predicates/threaded_engine_next_reified_2.rst", "refman/predicates/threaded_engine_post_2.rst", "refman/predicates/threaded_engine_self_1.rst", "refman/predicates/threaded_engine_yield_1.rst", "refman/predicates/threaded_exit_1_2.rst", "refman/predicates/threaded_ignore_1.rst", "refman/predicates/threaded_notify_1.rst", "refman/predicates/threaded_once_1_2.rst", "refman/predicates/threaded_peek_1_2.rst", "refman/predicates/threaded_wait_1.rst", "tutorial/attributes.rst", "tutorial/index.rst", "tutorial/lists.rst", "tutorial/profiling.rst", "tutorial/reflection.rst", "userman/categories.rst", "userman/debugging.rst", "userman/declarative.rst", "userman/documenting.rst", "userman/errors.rst", "userman/events.rst", "userman/expansion.rst", "userman/features.rst", "userman/index.rst", "userman/inheritance.rst", "userman/installing.rst", "userman/messages.rst", "userman/migration.rst", "userman/nomenclature.rst", "userman/objects.rst", "userman/performance.rst", "userman/predicates.rst", "userman/printing.rst", "userman/programming.rst", "userman/protocols.rst", "userman/reflection.rst", "userman/threads.rst"], "indexentries": {"!/0": [[184, "index-0", false]], "(::)/1": [[119, "index-0", false]], "(::)/2": [[118, "index-0", false]], "(<<)/2": [[110, "index-0", false]], "(@)/1": [[108, "index-0", false]], "(\\+)/1": [[213, "index-0", false]], "(^^)/1": [[109, "index-0", false]], "[]/1": [[112, "index-0", false]], "abolish/1": [[165, "index-0", false]], "abolish_category/1": [[245, "index-0", false]], "abolish_events/5": [[246, "index-0", false]], "abolish_object/1": [[247, "index-0", false]], "abolish_protocol/1": [[248, "index-0", false]], "abstract class": [[41, "term-abstract-class", true]], "abstract method": [[41, "term-abstract-method", true]], "adapter file": [[41, "term-adapter-file", true]], "after method": [[41, "term-after-method", true]], "after/3": [[166, "index-0", false]], "alias/2": [[121, "index-0", false]], "always_true_or_false_goals": [[335, "index-22", false]], "ancestor": [[41, "term-ancestor", true]], "arithmetic_expressions": [[335, "index-24", false]], "around method": [[41, "term-around-method", true]], "ask_question/5": [[167, "index-0", false]], "asserta/1": [[169, "index-0", false]], "assertz/1": [[170, "index-0", false]], "backend prolog compiler": [[41, "term-backend-Prolog-compiler", true]], "bagof/3": [[171, "index-0", false]], "before method": [[41, "term-before-method", true]], "before/3": [[172, "index-0", false]], "begin_of_file": [[323, "index-0", false]], "behavioral reflection": [[337, "index-4", false]], "black-box view": [[337, "index-3", false]], "built-in method": [[41, "term-built-in-method", true], [165, "index-0", false], [166, "index-0", false], [167, "index-0", false], [169, "index-0", false], [170, "index-0", false], [171, "index-0", false], [172, "index-0", false], [173, "index-0", false], [174, "index-0", false], [175, "index-0", false], [176, "index-0", false], [178, "index-0", false], [179, "index-0", false], [180, "index-0", false], [182, "index-0", false], [183, "index-0", false], [184, "index-0", false], [187, "index-0", false], [188, "index-0", false], [190, "index-0", false], [192, "index-0", false], [193, "index-0", false], [194, "index-0", false], [196, "index-0", false], [197, "index-0", false], [198, "index-0", false], [199, "index-0", false], [200, "index-0", false], [201, "index-0", false], [203, "index-0", false], [204, "index-0", false], [206, "index-0", false], [208, "index-0", false], [209, "index-0", false], [210, "index-0", false], [211, "index-0", false], [213, "index-0", false], [214, "index-0", false], [215, "index-0", false], [216, "index-0", false], [217, "index-0", false], [218, "index-0", false], [219, "index-0", false], [220, "index-0", false], [221, "index-0", false], [222, "index-0", false], [223, "index-0", false], [225, "index-0", false], [226, "index-0", false], [228, "index-0", false], [229, "index-0", false], [230, "index-0", false], [231, "index-0", false], [232, "index-0", false], [233, "index-0", false], [234, "index-0", false], [235, "index-0", false], [237, "index-0", false], [238, "index-0", false], [239, "index-0", false], [240, "index-0", false], [241, "index-0", false], [242, "index-0", false], [243, "index-0", false], [244, "index-0", false]], "built-in predicate": [[41, "term-built-in-predicate", true], [245, "index-0", false], [246, "index-0", false], [247, "index-0", false], [248, "index-0", false], [250, "index-0", false], [252, "index-0", false], [253, "index-0", false], [254, "index-0", false], [255, "index-0", false], [256, "index-0", false], [257, "index-0", false], [259, "index-0", false], [260, "index-0", false], [261, "index-0", false], [262, "index-0", false], [263, "index-0", false], [264, "index-0", false], [270, "index-0", false], [271, "index-0", false], [272, "index-0", false], [274, "index-0", false], [275, "index-0", false], [277, "index-0", false], [279, "index-0", false], [280, "index-0", false], [281, "index-0", false], [282, "index-0", false], [283, "index-0", false], [284, "index-0", false], [285, "index-0", false], [286, "index-0", false], [287, "index-0", false], [288, "index-0", false], [290, "index-0", false], [291, "index-0", false], [292, "index-0", false], [293, "index-0", false], [294, "index-0", false], [295, "index-0", false], [296, "index-0", false], [297, "index-0", false], [298, "index-0", false], [299, "index-0", false], [300, "index-0", false], [301, "index-0", false], [302, "index-0", false], [303, "index-0", false], [304, "index-0", false], [305, "index-0", false], [306, "index-0", false], [307, "index-0", false], [308, "index-0", false], [309, "index-0", false], [310, "index-0", false], [311, "index-0", false]], "built_in/0": [[122, "index-0", false]], "call//1-n": [[173, "index-0", false]], "call/1-n": [[174, "index-0", false]], "catch/3": [[175, "index-0", false]], "catchall_catch": [[335, "index-34", false]], "category": [[41, "term-category", true]], "category/1-4": [[123, "index-0", false]], "category_property/2": [[250, "index-0", false]], "class": [[41, "term-class", true]], "clause reference": [[41, "term-clause-reference", true]], "clause/2": [[176, "index-0", false]], "clean": [[335, "index-55", false]], "closed-world assumption": [[41, "term-closed-world-assumption", true]], "closure": [[41, "term-closure", true]], "code_prefix": [[335, "index-48", false]], "coinduction": [[335, "index-10", false]], "coinductive predicate": [[41, "term-coinductive-predicate", true]], "coinductive/1": [[124, "index-0", false]], "coinductive_success_hook/1-2": [[178, "index-0", false]], "complementing category": [[41, "term-complementing-category", true]], "complements": [[335, "index-39", false]], "complements_object/2": [[252, "index-0", false]], "component": [[41, "term-component", true]], "conditionals": [[335, "index-33", false]], "conforms_to_protocol/2-3": [[253, "index-0", false]], "consistency_error/3": [[179, "index-0", false]], "context/1": [[180, "index-0", false]], "context_switching_calls": [[335, "index-42", false]], "control construct": [[108, "index-0", false], [109, "index-0", false], [110, "index-0", false], [112, "index-0", false], [113, "index-0", false], [118, "index-0", false], [119, "index-0", false]], "create_category/4": [[254, "index-0", false]], "create_logtalk_flag/3": [[255, "index-0", false]], "create_object/4": [[256, "index-0", false]], "create_protocol/3": [[257, "index-0", false]], "current_category/1": [[259, "index-0", false]], "current_event/5": [[260, "index-0", false]], "current_logtalk_flag/2": [[261, "index-0", false]], "current_object/1": [[262, "index-0", false]], "current_op/3": [[182, "index-0", false]], "current_predicate/1": [[183, "index-0", false]], "current_protocol/1": [[263, "index-0", false]], "debug": [[335, "index-51", false]], "debug handler": [[41, "term-debug-handler", true]], "define_events/5": [[264, "index-0", false]], "deprecated": [[335, "index-18", false]], "directive": [[41, "term-directive", true], [121, "index-0", false], [122, "index-0", false], [123, "index-0", false], [124, "index-0", false], [126, "index-0", false], [127, "index-0", false], [128, "index-0", false], [129, "index-0", false], [130, "index-0", false], [131, "index-0", false], [132, "index-0", false], [133, "index-0", false], [134, "index-0", false], [135, "index-0", false], [137, "index-0", false], [138, "index-0", false], [140, "index-0", false], [141, "index-0", false], [142, "index-0", false], [143, "index-0", false], [144, "index-0", false], [145, "index-0", false], [146, "index-0", false], [147, "index-0", false], [148, "index-0", false], [149, "index-0", false], [151, "index-0", false], [152, "index-0", false], [153, "index-0", false], [154, "index-0", false], [155, "index-0", false], [157, "index-0", false], [158, "index-0", false], [159, "index-0", false], [160, "index-0", false], [161, "index-0", false], [162, "index-0", false]], "discontiguous predicate": [[41, "term-discontiguous-predicate", true]], "discontiguous/1": [[126, "index-0", false]], "disjunctions": [[335, "index-32", false]], "doclet file": [[41, "term-doclet-file", true]], "doclet object": [[41, "term-doclet-object", true]], "domain_error/2": [[187, "index-0", false]], "duplicated_clauses": [[335, "index-31", false]], "duplicated_directives": [[335, "index-20", false]], "dynamic binding": [[41, "term-dynamic-binding", true]], "dynamic entity": [[41, "term-dynamic-entity", true]], "dynamic predicate": [[41, "term-dynamic-predicate", true]], "dynamic/0": [[127, "index-0", false]], "dynamic/1": [[128, "index-0", false]], "dynamic_declarations": [[335, "index-40", false]], "early binding": [[41, "term-early-binding", true]], "elif/1": [[129, "index-0", false]], "else/0": [[130, "index-0", false]], "encapsulation": [[41, "term-encapsulation", true]], "encoding/1": [[131, "index-0", false]], "encoding_directive": [[335, "index-5", false]], "encodings": [[335, "index-37", false]], "end_category/0": [[132, "index-0", false]], "end_object/0": [[133, "index-0", false]], "end_of_file": [[323, "index-1", false]], "end_protocol/0": [[134, "index-0", false]], "endif/0": [[135, "index-0", false]], "engines": [[335, "index-7", false]], "entity": [[41, "term-entity", true]], "entity alias": [[41, "term-entity-alias", true]], "entity directive": [[41, "term-entity-directive", true]], "eos//0": [[188, "index-0", false]], "evaluation_error/1": [[190, "index-0", false]], "event": [[41, "term-event", true]], "events": [[335, "index-41", false]], "existence_error/2": [[192, "index-0", false]], "expand_goal/2": [[193, "index-0", false]], "expand_term/2": [[194, "index-0", false]], "expansion workflow": [[41, "term-expansion-workflow", true]], "extends_category/2-3": [[270, "index-0", false]], "extends_object/2-3": [[271, "index-0", false]], "extends_protocol/2-3": [[272, "index-0", false]], "fail/0": [[196, "index-0", false]], "false/0": [[197, "index-0", false]], "findall/3": [[198, "index-0", false]], "findall/4": [[199, "index-0", false]], "flag": [[335, "index-0", false], [335, "index-1", false], [335, "index-10", false], [335, "index-11", false], [335, "index-12", false], [335, "index-13", false], [335, "index-14", false], [335, "index-15", false], [335, "index-16", false], [335, "index-17", false], [335, "index-18", false], [335, "index-19", false], [335, "index-2", false], [335, "index-20", false], [335, "index-21", false], [335, "index-22", false], [335, "index-23", false], [335, "index-24", false], [335, "index-25", false], [335, "index-26", false], [335, "index-27", false], [335, "index-28", false], [335, "index-29", false], [335, "index-3", false], [335, "index-30", false], [335, "index-31", false], [335, "index-32", false], [335, "index-33", false], [335, "index-34", false], [335, "index-35", false], [335, "index-36", false], [335, "index-37", false], [335, "index-38", false], [335, "index-39", false], [335, "index-4", false], [335, "index-40", false], [335, "index-41", false], [335, "index-42", false], [335, "index-43", false], [335, "index-44", false], [335, "index-45", false], [335, "index-46", false], [335, "index-47", false], [335, "index-48", false], [335, "index-49", false], [335, "index-5", false], [335, "index-50", false], [335, "index-51", false], [335, "index-52", false], [335, "index-53", false], [335, "index-54", false], [335, "index-55", false], [335, "index-6", false], [335, "index-7", false], [335, "index-8", false], [335, "index-9", false]], "flaky test": [[41, "term-flaky-test", true]], "forall/2": [[200, "index-0", false]], "forward/1": [[201, "index-0", false]], "general": [[335, "index-38", false]], "goal-expansion": [[41, "term-goal-expansion", true]], "goal_expansion/2": [[203, "index-0", false]], "grammar rule": [[41, "term-grammar-rule", true]], "grammar rule non-terminal": [[41, "term-grammar-rule-non-terminal", true]], "grammar rule terminal": [[41, "term-grammar-rule-terminal", true]], "grammar_rules": [[335, "index-23", false]], "homoiconic": [[41, "term-homoiconic", true]], "hook": [[335, "index-54", false]], "hook object": [[41, "term-hook-object", true]], "hook predicate": [[41, "term-hook-predicate", true]], "hot patching": [[41, "term-hot-patching", true]], "identity": [[41, "term-identity", true]], "if/1": [[137, "index-0", false]], "ignore/1": [[204, "index-0", false]], "implements_protocol/2-3": [[274, "index-0", false]], "imports_category/2-3": [[275, "index-0", false]], "include/1": [[138, "index-0", false]], "info/1": [[140, "index-0", false]], "info/2": [[141, "index-0", false]], "inheritance": [[41, "term-inheritance", true]], "initialization/1": [[142, "index-0", false]], "instance": [[41, "term-instance", true]], "instantiates_class/2-3": [[277, "index-0", false]], "instantiation": [[41, "term-instantiation", true]], "instantiation_error/0": [[206, "index-0", false]], "interface": [[41, "term-interface", true]], "lambda expression": [[41, "term-lambda-expression", true]], "lambda free variable": [[41, "term-lambda-free-variable", true]], "lambda parameter": [[41, "term-lambda-parameter", true]], "lambda_variables": [[335, "index-25", false]], "late binding": [[41, "term-late-binding", true]], "left_recursion": [[335, "index-35", false]], "library": [[41, "term-library", true]], "library alias": [[41, "term-library-alias", true]], "library notation": [[41, "term-library-notation", true]], "linter": [[335, "index-12", false]], "loader file": [[41, "term-loader-file", true]], "local predicate": [[41, "term-local-predicate", true]], "logtalk_compile/1": [[279, "index-0", false]], "logtalk_compile/2": [[280, "index-0", false]], "logtalk_library_path/2": [[281, "index-0", false]], "logtalk_linter_hook/7": [[282, "index-0", false]], "logtalk_load/1": [[283, "index-0", false]], "logtalk_load/2": [[284, "index-0", false]], "logtalk_load_context/2": [[285, "index-0", false]], "logtalk_make/0": [[286, "index-0", false]], "logtalk_make/1": [[287, "index-0", false]], "logtalk_make_target_action/1": [[288, "index-0", false]], "message": [[41, "term-message", true]], "message lookup": [[41, "term-message-lookup", true]], "message to self": [[41, "term-message-to-self", true]], "message_hook/4": [[208, "index-0", false]], "message_prefix_file/6": [[209, "index-0", false]], "message_prefix_stream/4": [[210, "index-0", false]], "message_tokens//2": [[211, "index-0", false]], "meta-argument": [[41, "term-meta-argument", true]], "meta-interpreter": [[41, "term-meta-interpreter", true]], "meta-predicate": [[41, "term-meta-predicate", true]], "meta-variable": [[41, "term-meta-variable", true]], "meta_non_terminal/1": [[143, "index-0", false]], "meta_predicate/1": [[144, "index-0", false]], "metaclass": [[41, "term-metaclass", true]], "method": [[41, "term-method", true]], "missing_directives": [[335, "index-19", false]], "mocking": [[41, "term-mocking", true]], "mode/2": [[145, "index-0", false]], "mode_non_terminal/2": [[146, "index-0", false]], "module": [[41, "term-module", true]], "modules": [[335, "index-9", false]], "monitor": [[41, "term-monitor", true]], "multifile predicate": [[41, "term-multifile-predicate", true]], "multifile/1": [[147, "index-0", false]], "naked meta-variable": [[41, "term-naked-meta-variable", true]], "naming": [[335, "index-30", false]], "object": [[41, "term-object", true]], "object database": [[41, "term-object-database", true]], "object/1-5": [[148, "index-0", false]], "object_property/2": [[290, "index-0", false]], "once/1": [[214, "index-0", false]], "op/3": [[149, "index-0", false]], "optimize": [[335, "index-49", false]], "parameter": [[41, "term-parameter", true]], "parameter variable": [[41, "term-parameter-variable", true]], "parameter/2": [[215, "index-0", false]], "parametric category": [[41, "term-parametric-category", true]], "parametric entity": [[41, "term-parametric-entity", true]], "parametric object": [[41, "term-parametric-object", true]], "parametric object proxy": [[41, "term-parametric-object-proxy", true]], "parent": [[41, "term-parent", true]], "permission_error/3": [[216, "index-0", false]], "phrase//1": [[217, "index-0", false]], "phrase/2": [[218, "index-0", false]], "phrase/3": [[219, "index-0", false]], "polymorphism": [[41, "term-polymorphism", true]], "portability": [[335, "index-17", false]], "predicate": [[41, "term-predicate", true]], "predicate alias": [[41, "term-predicate-alias", true]], "predicate calling context": [[41, "term-predicate-calling-context", true]], "predicate declaration": [[41, "term-predicate-declaration", true]], "predicate definition": [[41, "term-predicate-definition", true]], "predicate definition context": [[41, "term-predicate-definition-context", true]], "predicate directive": [[41, "term-predicate-directive", true]], "predicate execution context": [[41, "term-predicate-execution-context", true]], "predicate scope container": [[41, "term-predicate-scope-container", true]], "predicate scope directive": [[41, "term-predicate-scope-directive", true]], "predicate shorthand": [[41, "term-predicate-shorthand", true]], "predicate_property/2": [[220, "index-0", false]], "primary predicate declaration": [[41, "term-primary-predicate-declaration", true]], "print_message/3": [[221, "index-0", false]], "print_message_token/4": [[222, "index-0", false]], "print_message_tokens/3": [[223, "index-0", false]], "private inheritance": [[41, "term-private-inheritance", true]], "private predicate": [[41, "term-private-predicate", true]], "private/1": [[151, "index-0", false]], "profiler": [[41, "term-profiler", true]], "prolog_compatible_version": [[335, "index-3", false]], "prolog_compiler": [[335, "index-44", false]], "prolog_dialect": [[335, "index-1", false]], "prolog_loader": [[335, "index-45", false]], "prolog_version": [[335, "index-2", false]], "protected inheritance": [[41, "term-protected-inheritance", true]], "protected predicate": [[41, "term-protected-predicate", true]], "protected/1": [[152, "index-0", false]], "protocol": [[41, "term-protocol", true]], "protocol/1-2": [[153, "index-0", false]], "protocol_property/2": [[291, "index-0", false]], "prototype": [[41, "term-prototype", true]], "public inheritance": [[41, "term-public-inheritance", true]], "public predicate": [[41, "term-public-predicate", true]], "public/1": [[154, "index-0", false]], "question_hook/6": [[225, "index-0", false]], "question_prompt_stream/4": [[226, "index-0", false]], "redefined_built_ins": [[335, "index-27", false]], "redefined_operators": [[335, "index-28", false]], "reflection": [[337, "index-0", false]], "relative_to": [[335, "index-53", false]], "reload": [[335, "index-52", false]], "repeat/0": [[228, "index-0", false]], "report": [[335, "index-47", false]], "representation_error/1": [[229, "index-0", false]], "resource_error/1": [[230, "index-0", false]], "retract/1": [[231, "index-0", false]], "retractall/1": [[232, "index-0", false]], "scratch directory": [[41, "term-scratch-directory", true]], "scratch_directory": [[335, "index-46", false]], "self": [[41, "term-self", true]], "self/1": [[233, "index-0", false]], "sender": [[41, "term-sender", true]], "sender/1": [[234, "index-0", false]], "set_logtalk_flag/2": [[155, "index-0", false], [292, "index-0", false]], "setof/3": [[235, "index-0", false]], "settings file": [[41, "term-settings-file", true]], "settings_file": [[335, "index-0", false]], "singleton method": [[41, "term-singleton-method", true]], "singleton_variables": [[335, "index-29", false]], "source file": [[41, "term-source-file", true]], "source file directive": [[41, "term-source-file-directive", true]], "source_data": [[335, "index-50", false]], "specialization": [[41, "term-specialization", true]], "specializes_class/2-3": [[293, "index-0", false]], "static binding": [[41, "term-static-binding", true]], "static entity": [[41, "term-static-entity", true]], "steadfastness": [[41, "term-steadfastness", true], [335, "index-16", false]], "structural reflection": [[337, "index-1", false]], "subclass": [[41, "term-subclass", true]], "super call": [[41, "term-super-call", true]], "superclass": [[41, "term-superclass", true]], "suspicious_calls": [[335, "index-26", false]], "synchronized predicate": [[41, "term-synchronized-predicate", true]], "synchronized/1": [[157, "index-0", false]], "syntax_error/1": [[237, "index-0", false]], "system_error/0": [[238, "index-0", false]], "tabling": [[335, "index-6", false]], "tail_recursive": [[335, "index-36", false]], "template method": [[41, "term-template-method", true]], "term-expansion": [[41, "term-term-expansion", true]], "term_expansion/2": [[239, "index-0", false]], "test dialect": [[41, "term-test-dialect", true]], "test outcome": [[41, "term-test-outcome", true]], "tester file": [[41, "term-tester-file", true]], "this": [[41, "term-this", true]], "this/1": [[240, "index-0", false]], "threaded engine": [[41, "term-threaded-engine", true]], "threaded/0": [[158, "index-0", false]], "threaded/1": [[294, "index-0", false]], "threaded_call/1-2": [[295, "index-0", false]], "threaded_cancel/1": [[296, "index-0", false]], "threaded_engine/1": [[297, "index-0", false]], "threaded_engine_create/3": [[298, "index-0", false]], "threaded_engine_destroy/1": [[299, "index-0", false]], "threaded_engine_fetch/1": [[300, "index-0", false]], "threaded_engine_next/2": [[301, "index-0", false]], "threaded_engine_next_reified/2": [[302, "index-0", false]], "threaded_engine_post/2": [[303, "index-0", false]], "threaded_engine_self/1": [[304, "index-0", false]], "threaded_engine_yield/1": [[305, "index-0", false]], "threaded_exit/1-2": [[306, "index-0", false]], "threaded_ignore/1": [[307, "index-0", false]], "threaded_notify/1": [[308, "index-0", false]], "threaded_once/1-2": [[309, "index-0", false]], "threaded_peek/1-2": [[310, "index-0", false]], "threaded_wait/1": [[311, "index-0", false]], "threads": [[335, "index-8", false]], "throw/1": [[241, "index-0", false]], "top-level interpreter shorthand": [[41, "term-top-level-interpreter-shorthand", true]], "transparent-box view": [[337, "index-2", false]], "trivial_goal_fails": [[335, "index-21", false]], "true/0": [[242, "index-0", false]], "type_error/2": [[243, "index-0", false]], "undefined_predicates": [[335, "index-15", false]], "underscore_variables": [[335, "index-43", false]], "unicode": [[335, "index-4", false]], "unknown_entities": [[335, "index-13", false]], "unknown_predicates": [[335, "index-14", false]], "ununinstantiation_error/1": [[244, "index-0", false]], "use_module/1": [[159, "index-0", false]], "use_module/2": [[160, "index-0", false]], "uses/1": [[161, "index-0", false]], "uses/2": [[162, "index-0", false]], "version_data": [[335, "index-11", false]], "visible predicate": [[41, "term-visible-predicate", true]], "{}/1": [[113, "index-0", false]]}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [0, 4, 5, 6, 10, 12, 13, 15, 17, 18, 19, 20, 23, 24, 26, 27, 31, 41, 42, 43, 44, 46, 54, 56, 60, 62, 63, 67, 68, 69, 70, 73, 88, 98, 99, 100, 108, 124, 138, 160, 254, 256, 257, 312, 314, 317, 318, 320, 322, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336], "0": [1, 4, 5, 9, 11, 12, 13, 14, 15, 19, 21, 23, 24, 33, 44, 48, 56, 59, 64, 68, 70, 74, 75, 76, 83, 84, 86, 91, 97, 98, 99, 101, 108, 109, 121, 123, 124, 125, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 153, 160, 165, 169, 170, 173, 174, 175, 176, 179, 186, 187, 189, 190, 192, 198, 199, 200, 204, 205, 207, 213, 214, 216, 217, 229, 230, 231, 232, 237, 241, 243, 244, 251, 256, 257, 276, 279, 280, 283, 284, 287, 288, 294, 295, 298, 307, 309, 312, 314, 317, 318, 320, 321, 323, 324, 326, 329, 330, 331, 332, 333, 334, 335, 336, 338], "00": 98, "0000": 101, "00000000": 101, "000000000000": 101, "00a66fc0": 101, "01": 105, "0100": 105, "0164": 9, "01bx5zikbkaltav9oevgemmvri": 98, "01h0j31syqxhjzwprakhq6yvyh": 98, "01h0jdbq1gawjf35c44y5s97dx": 98, "01h0n8cdazk75c5h3bjsgs4vcq": 98, "02": 3, "04574": 105, "08": 9, "0894c7cdb8968b6bbcf00e3673c1c16cfa98232573af30ceddda207b20a7a207": 23, "09": 3, "09230089279334841": 19, "09e576a44db5": 101, "0e": [74, 75], "0x4b": 101, "0x61": 48, "0x62": 48, "0x63": 48, "0x65": 48, "0x68": 48, "0x6c": 48, "0x6f": 48, "0x90": 101, "0x94": 101, "0x9f": 48, "0xbf": 48, "0xd1": 101, "0xdc": 101, "0xf2": 101, "0xff": 48, "1": [0, 1, 4, 5, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 28, 31, 41, 42, 43, 44, 48, 50, 54, 55, 56, 57, 58, 59, 63, 68, 69, 71, 74, 75, 76, 81, 82, 83, 84, 87, 88, 90, 91, 92, 95, 96, 97, 98, 99, 105, 106, 107, 110, 114, 115, 116, 117, 118, 120, 121, 125, 127, 130, 132, 133, 134, 135, 136, 139, 141, 149, 150, 155, 156, 158, 160, 162, 167, 175, 176, 177, 179, 181, 182, 185, 186, 187, 188, 189, 192, 202, 203, 205, 206, 212, 215, 216, 218, 219, 220, 225, 227, 238, 239, 243, 249, 250, 251, 252, 253, 254, 255, 256, 257, 265, 267, 270, 271, 272, 274, 275, 276, 277, 280, 281, 284, 285, 286, 289, 290, 291, 292, 293, 298, 301, 302, 303, 312, 314, 315, 317, 318, 320, 321, 322, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338], "10": [0, 9, 19, 23, 75, 103, 105, 215, 333, 338], "100": [19, 46, 101, 333, 338], "1000": [239, 333], "10000": [19, 333], "10042": 9, "1007": 103, "101": [46, 48, 74, 75, 101], "1016": 9, "102": 101, "103": [46, 70, 331], "104": [46, 48, 74, 75], "108": [46, 48, 74, 75], "11": [0, 1, 9, 19, 23, 100, 140, 320, 338], "110": 333, "111": [0, 46, 48, 70, 74, 75], "1115": 96, "113": 44, "114": 46, "115": 46, "119": 46, "11eb": 101, "12": [0, 19, 315, 338], "1200": 323, "121": 46, "1212": 9, "123": [74, 75, 81, 213], "1234567890123456789": [74, 75], "125": [19, 74, 75], "127": [19, 91, 229], "1273317": 0, "1293": 81, "13": [0, 97, 323], "13211": 0, "133": 44, "14": [19, 101], "15": [0, 5, 100, 105, 131, 254, 321], "150": 97, "151": 0, "156": 0, "157": 0, "1579528": 9, "16": [98, 131], "160": 70, "1613": 105, "16242": 103, "16407": 19, "165": 19, "167": 0, "1684245175344": 98, "16be": 131, "16le": 131, "17": [98, 105, 332], "17023": 19, "1711": 105, "18": [0, 3, 9, 23], "18186": 19, "18610": 19, "189": 0, "1944773afba1908cc6194297ff6b5ac649a844ef69a69b2bcdf267cfa8bfce1": 23, "19506": 19, "196": 19, "197": 44, "1970": 98, "1976": 9, "198": 19, "1986": 0, "1987": 0, "1989": 0, "199": 19, "1990": 0, "1991": 0, "1992": 0, "1994": [0, 9], "1995": [0, 99, 324], "1998": [9, 30, 36, 324, 334], "1999": [0, 30, 324], "1c652782": 101, "1e": 254, "2": [0, 1, 4, 5, 8, 9, 10, 12, 13, 15, 18, 19, 20, 23, 24, 25, 27, 28, 31, 33, 38, 39, 41, 42, 43, 44, 46, 48, 50, 51, 54, 55, 56, 58, 60, 67, 68, 69, 74, 75, 76, 81, 82, 84, 86, 87, 92, 96, 97, 98, 99, 100, 101, 105, 106, 108, 109, 111, 112, 113, 115, 117, 119, 124, 126, 127, 128, 131, 134, 136, 137, 139, 140, 142, 143, 144, 147, 149, 150, 151, 152, 154, 156, 157, 158, 159, 161, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 195, 198, 199, 201, 205, 206, 208, 209, 210, 213, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 244, 245, 247, 248, 251, 254, 255, 256, 257, 259, 262, 263, 264, 265, 266, 268, 273, 276, 279, 283, 286, 287, 289, 294, 296, 298, 300, 305, 307, 312, 314, 315, 317, 318, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338], "20": [23, 70, 140, 320], "200": [4, 149], "2000": [0, 140, 320], "2004": 3, "2007": 9, "2008": 4, "2010": [1, 5, 103], "2011": 4, "2012": [30, 324], "20125": [19, 44], "2014": 3, "2015": [30, 324], "20160818050049": 45, "2018": [105, 334], "2019": 105, "2021": 23, "2023": 98, "20881": 19, "21": [0, 9, 30, 44, 105], "214": [0, 19], "21413": 0, "2147483647": [74, 75], "2147483648": [74, 75], "217": 331, "22": [0, 256, 333], "224": 0, "2250738585072014e": [74, 75], "225073858507201e": [74, 75], "23": [0, 23, 81, 96, 98, 318, 331, 334], "231": 0, "2345": [74, 75], "23671": 19, "24": 19, "240": 70, "2412": 331, "25": 135, "254": 44, "25513": 19, "256": 23, "256colour": 15, "257": 0, "26": [0, 3, 19], "268": 0, "268435452": 333, "268435453": 333, "268435454": 333, "268435455": 333, "27": [0, 1, 335], "273": 321, "285": 0, "294": 103, "296": 0, "29824": 19, "2be": 131, "2gpmzqafxbo5myfipx1qmkhxgg": 70, "2le": 131, "2nd": 9, "2x": 332, "2\u00aa": 0, "2\u00ba": 0, "3": [0, 4, 5, 11, 12, 13, 19, 20, 23, 24, 31, 41, 42, 43, 44, 51, 54, 56, 57, 60, 63, 74, 75, 79, 81, 82, 84, 86, 87, 88, 91, 92, 96, 97, 98, 99, 101, 103, 118, 126, 127, 128, 136, 137, 138, 139, 144, 147, 150, 151, 152, 154, 156, 160, 162, 167, 173, 183, 186, 187, 188, 189, 190, 191, 192, 199, 200, 205, 206, 208, 209, 210, 211, 213, 217, 218, 220, 222, 224, 225, 226, 227, 229, 230, 236, 237, 238, 241, 243, 244, 245, 246, 247, 248, 250, 252, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 273, 276, 282, 290, 291, 292, 297, 299, 301, 302, 304, 305, 314, 315, 317, 318, 320, 321, 322, 323, 324, 326, 330, 331, 332, 333, 334, 335, 336, 338], "30": 70, "3000": 9, "301": 103, "308": [74, 75], "309": 23, "312": 320, "3172": [19, 44], "32": [46, 131, 331], "322": 0, "324": [74, 75], "32be": 131, "32le": 131, "33": 46, "330": 0, "34": [74, 75], "353": 19, "36": 23, "360": 0, "363": 0, "37": 26, "370000": 19, "38": [26, 98, 335], "3853": 19, "39": [331, 335], "390": 0, "3b": 19, "3e4ea295986fb09d0d4aade1f3b4968e29ef594": 19, "3i": 0, "4": [8, 19, 23, 24, 25, 42, 43, 44, 71, 76, 79, 92, 98, 99, 100, 126, 127, 128, 132, 136, 138, 139, 149, 152, 162, 167, 168, 171, 198, 200, 205, 209, 211, 221, 223, 224, 225, 235, 236, 245, 247, 250, 258, 259, 262, 276, 290, 312, 317, 318, 320, 323, 329, 330, 331, 333, 334, 335, 338], "40": 5, "400": 333, "404": 74, "407": 9, "41": [318, 334], "412": 19, "416": 19, "42": [19, 23, 44, 97, 256, 318, 321, 334], "4252": 101, "4294967295": [74, 75], "43": 331, "44": [9, 74], "440": 19, "446": 44, "45": [9, 23, 26, 96, 101], "453": 44, "454": 44, "459": 321, "466": 0, "468": 331, "477836": 331, "48": [26, 86, 98, 101], "481": 0, "49": [19, 98, 101], "4963": 19, "4th": 0, "5": [0, 5, 15, 19, 23, 24, 69, 70, 74, 75, 92, 96, 98, 99, 100, 101, 133, 135, 136, 139, 149, 162, 166, 168, 172, 205, 208, 209, 210, 211, 221, 222, 223, 225, 226, 269, 276, 314, 315, 318, 322, 323, 329, 331, 332, 334, 338], "50": [19, 46, 101], "500000": 19, "5037": 19, "508": 331, "509": 44, "51": [98, 101], "5123": 81, "52": [0, 9, 98, 101], "522": 44, "53": 101, "54": [98, 101], "55": [70, 98, 101], "55aa900775befa135e0d5b48ea63098df8b97f5c": 17, "56": [46, 101], "57": [46, 98, 101], "5714": 105, "5788130906607927": 44, "58": [74, 75], "583": 56, "588": 19, "590": 19, "591": 98, "6": [0, 13, 15, 19, 23, 24, 81, 86, 92, 99, 100, 101, 149, 167, 168, 205, 208, 210, 211, 221, 222, 223, 224, 226, 318, 333, 334, 338], "60": 256, "600": 328, "61": [0, 19, 70, 105], "630000": 19, "6379": 91, "64": [19, 70, 105], "642": 103, "65": [70, 98], "66": [0, 98, 333], "67": [98, 321], "69c5": 101, "7": [19, 20, 23, 30, 44, 81, 82, 92, 100, 101, 137, 180, 225, 276, 278, 318, 321, 335, 338], "70": [0, 70, 98], "700": [19, 149, 333], "7035": 19, "71": [46, 331], "72": [46, 98], "74": [70, 98, 331], "75291": 331, "76": [9, 318], "77": 70, "772526": 0, "786": 19, "79": 70, "7976931348623157e": [74, 75], "7x": 332, "8": [0, 13, 15, 19, 23, 24, 46, 70, 82, 83, 98, 100, 101, 103, 131, 318, 331, 338], "80": [0, 36, 317, 324], "800": 333, "800253": 9, "807712": 9, "81": [46, 70], "816": 44, "82": 98, "82cf": 101, "83": [44, 46], "831": 44, "84": 0, "852": 19, "86": [0, 46, 70, 98], "8601": [3, 320], "866": 44, "87": [0, 19], "87415": 315, "87419": 315, "875": 44, "8774b3863efc03bb6c284935885dcf34f69f115656d2496a33a446b6199f3e19": 23, "88": 0, "8859": 131, "88c8": 101, "89": 0, "8_21": 103, "9": [13, 23, 30, 46, 98, 100, 101, 318, 333, 338], "90": [0, 56], "907": 44, "91": 74, "92": 0, "9223372036854775807": [74, 75], "93": [0, 19, 74], "94": [9, 19], "97": [0, 74, 75, 101], "978": 103, "98": [9, 46, 74, 75, 101, 318], "9814": [19, 44], "99": [19, 70, 74, 75, 101, 318, 338], "9c298c2a08c4e2a1972c14720ef1498e7f116c7cd8bf7702c8d22d8ff549b6a1": 23, "A": [0, 5, 7, 9, 10, 12, 13, 17, 19, 23, 27, 36, 41, 42, 43, 44, 51, 54, 56, 70, 82, 84, 86, 96, 101, 105, 119, 121, 137, 151, 152, 154, 157, 160, 162, 169, 170, 179, 180, 217, 294, 298, 312, 313, 315, 317, 318, 319, 321, 322, 323, 324, 326, 329, 330, 331, 332, 333, 334, 335, 336, 338], "AND": 5, "AS": 5, "As": [10, 11, 12, 13, 17, 19, 23, 26, 34, 38, 41, 44, 56, 69, 76, 86, 106, 127, 138, 160, 180, 200, 213, 314, 317, 318, 320, 321, 323, 324, 328, 329, 330, 333, 334, 335, 336, 338], "At": [99, 318, 324, 334, 335], "BE": 5, "BUT": 5, "BY": 5, "Be": [9, 13, 19, 22, 23, 24, 97, 338], "Being": 330, "But": [12, 17, 18, 19, 23, 41, 44, 56, 68, 90, 92, 99, 126, 128, 142, 144, 147, 154, 159, 161, 213, 287, 312, 317, 318, 321, 323, 329, 330, 332, 333, 334], "By": [8, 11, 14, 18, 19, 20, 23, 63, 70, 74, 75, 81, 98, 101, 221, 317, 318, 331, 333, 334, 335, 336, 338], "FOR": 5, "For": [4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 29, 32, 36, 39, 41, 44, 45, 46, 48, 51, 54, 56, 59, 62, 63, 64, 68, 69, 73, 74, 75, 76, 80, 81, 82, 83, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98, 100, 101, 103, 105, 106, 108, 109, 137, 138, 155, 160, 162, 171, 173, 179, 187, 200, 206, 213, 216, 218, 219, 229, 235, 238, 243, 244, 255, 261, 274, 280, 282, 284, 285, 292, 305, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338], "IF": 5, "IN": 5, "If": [5, 8, 12, 13, 15, 19, 20, 22, 23, 24, 27, 32, 38, 54, 56, 68, 69, 76, 80, 82, 91, 97, 109, 129, 137, 167, 221, 279, 280, 283, 284, 298, 301, 312, 314, 315, 316, 317, 318, 320, 321, 322, 323, 326, 327, 328, 329, 331, 333, 335, 336, 338], "In": [4, 5, 8, 9, 10, 12, 13, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 34, 35, 36, 41, 44, 50, 55, 56, 60, 68, 69, 73, 88, 99, 113, 131, 138, 147, 157, 160, 162, 169, 170, 175, 218, 219, 279, 280, 283, 284, 294, 308, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338], "It": [5, 9, 13, 18, 19, 23, 24, 26, 27, 29, 41, 44, 45, 56, 58, 63, 67, 69, 73, 74, 75, 83, 88, 97, 98, 99, 100, 105, 109, 112, 119, 121, 124, 160, 162, 188, 198, 199, 222, 281, 285, 312, 314, 315, 316, 317, 318, 320, 322, 323, 324, 326, 328, 329, 330, 332, 333, 334, 335, 337, 338], "Its": [13, 110, 118, 317, 318, 322, 335], "NO": 5, "NOT": 5, "No": [26, 30, 34, 36, 41, 69, 306, 310, 326, 335], "Not": [213, 330], "OF": 5, "ON": 5, "OR": 5, "On": [15, 16, 18, 19, 42, 43, 70, 98, 101, 231, 281, 322, 324, 326, 335], "One": [42, 43, 321, 325, 332, 333, 335], "Or": [4, 5, 11, 12, 15, 19, 23, 68, 97, 331], "SUCH": 5, "Such": 333, "THE": 5, "TO": 5, "That": [3, 19, 314, 324, 335], "The": [0, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 34, 38, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 73, 74, 75, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 108, 109, 110, 112, 118, 119, 124, 126, 128, 129, 130, 131, 137, 138, 140, 141, 142, 144, 145, 146, 155, 157, 158, 159, 160, 161, 162, 163, 167, 169, 170, 171, 174, 176, 178, 180, 187, 192, 193, 194, 198, 203, 209, 210, 211, 213, 215, 216, 220, 221, 231, 232, 235, 239, 243, 245, 246, 247, 248, 250, 253, 254, 255, 256, 257, 260, 264, 270, 271, 272, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338], "Their": [142, 335], "Then": [19, 68, 314, 334], "There": [9, 10, 13, 17, 19, 21, 23, 27, 35, 86, 99, 105, 124, 287, 315, 318, 320, 323, 329, 330, 331, 333, 335, 337, 338], "These": [8, 9, 10, 11, 13, 15, 19, 20, 23, 27, 41, 44, 60, 66, 67, 81, 94, 106, 124, 183, 220, 287, 315, 317, 318, 320, 321, 322, 323, 326, 329, 331, 332, 333, 334, 335], "To": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 112, 159, 161, 162, 165, 169, 170, 171, 173, 174, 176, 182, 183, 198, 199, 200, 204, 214, 218, 219, 220, 231, 232, 235, 292, 306, 310, 315, 317, 318, 322, 323, 326, 329, 331, 333, 335, 336, 338], "With": [5, 9, 10, 19, 20, 23, 24, 39, 318, 321, 322, 329, 331, 332, 333, 335], "_": [8, 19, 23, 44, 51, 56, 96, 100, 135, 137, 142, 160, 178, 208, 220, 221, 225, 246, 264, 285, 312, 314, 315, 317, 318, 320, 321, 322, 323, 331, 333, 334, 335, 338], "_1078": 318, "_1082": 318, "_1100": 318, "_1104": 318, "_bar": 331, "_bar_": 331, "_baz": 331, "_baz_": 331, "_build": [18, 320], "_char": 19, "_color": [215, 333], "_color_": [215, 331, 333], "_datamodule_": 159, "_dcl": 25, "_def": 25, "_district": 329, "_doclet": 14, "_g1369": 333, "_g1378": 333, "_g1579": 333, "_g1582": 333, "_g1591": 333, "_g1594": 333, "_g1789": 333, "_g1792": 333, "_g1795": 333, "_g1804": 333, "_g1807": 333, "_g1810": 333, "_g189": 338, "_heapobject_": 162, "_heaptype_": 161, "_id_": 331, "_kind": 19, "_knowledgebase_": [169, 170], "_lgt": [317, 331, 336], "_messag": [19, 334], "_name": 329, "_neighbor": 329, "_optionsmodule_": 160, "_optionsobject_": 161, "_pack": 23, "_parametername_": [41, 331], "_parvar_": 19, "_popul": 329, "_prefix": 222, "_protocol_": 323, "_radius_": 331, "_randomobject_": 19, "_registri": 23, "_stream": 222, "_super": 25, "_token": [19, 222], "_unit": 321, "_variable_": 163, "_variablename_": [19, 215], "_weight": 215, "_weight_": 215, "a_star_interpret": 5, "aaa": 51, "ab": 254, "abbrevi": [10, 318, 332], "abc": [19, 97, 188], "abl": [9, 10, 19, 20, 24, 30, 321, 322, 329, 330, 333, 335], "abolish": [19, 41, 42, 43, 127, 164, 169, 170, 176, 185, 205, 231, 232, 245, 246, 247, 248, 276, 315, 321, 325, 333], "abolish_categori": [249, 250, 254, 259, 276, 317, 336], "abolish_ev": [166, 172, 260, 264, 269, 276, 315, 322], "abolish_object": [249, 256, 262, 276, 290, 330, 331], "abolish_protocol": [249, 257, 263, 276, 291, 336], "abort": [129, 137, 318, 321], "about": [5, 18, 19, 22, 23, 31, 36, 41, 42, 43, 66, 86, 99, 103, 173, 282, 317, 318, 320, 321, 327, 330, 331, 332, 333, 335, 336, 337, 338], "abov": [5, 13, 18, 19, 23, 26, 44, 56, 69, 103, 287, 312, 314, 318, 320, 326, 328, 331, 332, 333, 334, 335, 338], "absenc": 83, "absent": 137, "absolut": [13, 19, 138, 279, 280, 281, 283, 284, 317, 321, 331, 335, 336], "absolutetoler": 19, "abstract": [9, 14, 15, 19, 41, 50, 55, 60, 73, 88, 95, 215, 316, 319, 326, 329, 330, 331, 333, 334], "abstract_class": [148, 316, 331], "abund": [9, 10, 20, 24], "ac": [56, 86], "academ": 327, "acc": [56, 314, 338], "acc2": 314, "acc_info": [56, 323], "accept": [13, 17, 18, 19, 23, 27, 46, 60, 76, 306, 310, 318, 330, 331, 333, 335, 338], "access": [12, 13, 15, 17, 19, 20, 23, 25, 28, 36, 41, 44, 45, 51, 52, 54, 63, 73, 81, 82, 87, 92, 96, 99, 108, 109, 110, 112, 118, 119, 142, 144, 176, 203, 215, 216, 239, 254, 255, 256, 285, 306, 317, 319, 320, 322, 323, 324, 326, 327, 330, 332, 333, 335, 337, 338], "accident": [19, 23, 333], "accomplish": [5, 19, 41, 46, 48, 67, 68, 74, 75, 320, 321, 322, 323, 326, 328, 333, 334, 335, 338], "accord": [5, 19, 331], "account": [19, 23, 24, 109, 149, 160, 162, 326, 333, 335, 337], "accumul": [42, 43, 71, 162], "accur": [12, 19, 318], "accuraci": 19, "acess": 0, "achiev": [34, 41, 322, 324, 328], "ack": [19, 327, 335], "ack_1": 19, "ack_2": 19, "ack_3": 19, "acknowledg": [42, 43, 71, 327], "acm": [0, 9], "acmid": 9, "acquir": 338, "acronym": 5, "across": [19, 31, 42, 43, 85, 99, 320, 323, 324, 329, 333, 335], "act": [19, 24, 41, 322, 323, 324, 331, 334, 337], "action": [5, 10, 21, 23, 88, 286, 287, 288, 315, 318, 322, 329], "activ": [24, 42, 43, 238, 325, 328, 329], "activate_debug_handl": 318, "actual": [9, 13, 19, 23, 50, 143, 160, 281, 285, 318, 321, 323, 329, 330, 332, 333, 334], "actualbal": 19, "actualerror": 19, "acyclic_term": [180, 229], "ad": [16, 19, 23, 24, 25, 27, 41, 42, 43, 56, 67, 87, 100, 169, 170, 316, 317, 318, 320, 321, 323, 329, 330, 331, 333], "adapt": [20, 25, 27, 29, 32, 41, 54, 65, 92, 103, 131, 138, 160, 162, 279, 280, 283, 284, 286, 287, 317, 318, 323, 329, 331, 332, 333, 334, 335, 336, 338], "add": [8, 13, 14, 19, 23, 26, 38, 41, 50, 55, 56, 60, 76, 81, 84, 97, 100, 314, 317, 318, 329, 332, 333, 335], "add_to_queu": 157, "addam": [24, 318], "adder": 56, "addison": 0, "addit": [5, 9, 13, 18, 19, 20, 21, 23, 24, 32, 35, 36, 41, 42, 43, 54, 71, 73, 81, 99, 143, 144, 174, 179, 286, 287, 317, 318, 320, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338], "addition": 335, "address": [9, 13, 64, 96, 99, 103, 324], "adequ": 326, "adjust": 50, "administr": 32, "adob": 13, "adopt": [23, 86, 324, 335], "advanc": [81, 324, 329, 332], "advantag": [13, 19, 27, 68, 317, 320, 322, 324, 329, 331, 333, 334, 335, 338], "advers": 19, "advic": [19, 26, 27, 324, 335], "advis": [5, 19, 23, 27, 35, 320, 327, 329, 333, 335], "aes256": 23, "affect": [5, 12, 19, 23, 41, 54, 155, 287, 322, 323, 326, 329, 332, 335], "affer": 9, "after": [11, 12, 14, 15, 18, 19, 22, 23, 24, 31, 38, 41, 42, 43, 44, 57, 83, 108, 129, 137, 142, 172, 191, 205, 234, 240, 246, 260, 264, 286, 287, 288, 312, 314, 315, 317, 318, 320, 322, 323, 326, 328, 329, 331, 332, 333, 334, 335, 336, 338], "after_event_registri": 57, "ag": [96, 97, 167, 256], "again": [8, 19, 317, 328, 331, 334, 336, 338], "against": 19, "agent": [23, 148, 318, 324, 338], "aggreg": 19, "ago": 324, "ahead": [180, 333], "ahr0chm6ly9sb2d0ywxrlm9yzw": 46, "ai": 0, "aim": [9, 90, 330, 331], "aka": [64, 330], "akin": [5, 337, 338], "alamito": 9, "alberta": 0, "aldani": 9, "alert": [19, 333], "alexiev": 0, "alexiev93": 0, "algebra": 72, "algo": 23, "algorithm": [5, 23, 41, 81, 100, 326, 330, 333, 338], "alia": [10, 18, 19, 23, 41, 51, 54, 58, 82, 96, 131, 139, 150, 159, 160, 161, 162, 163, 173, 179, 256, 281, 285, 317, 326, 329, 331, 335, 336], "alias": [23, 27, 41, 121, 159, 160, 161, 162, 179, 281, 287, 329, 330, 333, 335], "alias1": 333, "alias2": 333, "alias_declared_in": [163, 333], "alias_direct": 163, "alias_directive_resourc": 163, "alias_directive_resource_list": 163, "alias_directive_resource_sequ": 163, "alias_of": [163, 333], "all": [1, 3, 4, 5, 6, 9, 10, 11, 13, 18, 19, 20, 23, 24, 27, 31, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 124, 126, 138, 155, 157, 159, 160, 162, 164, 171, 198, 199, 200, 205, 222, 232, 235, 240, 243, 246, 252, 253, 259, 260, 262, 263, 270, 271, 272, 274, 277, 286, 287, 288, 293, 294, 297, 299, 308, 311, 312, 314, 315, 316, 317, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 332, 334, 335, 336, 337, 338], "all_differ": 333, "all_load": [13, 86, 327], "allen": 72, "alloc": [163, 187, 320], "allow": [5, 8, 9, 10, 11, 13, 17, 18, 19, 23, 24, 25, 28, 30, 33, 36, 41, 44, 51, 59, 60, 67, 68, 73, 74, 75, 76, 83, 86, 88, 92, 96, 99, 105, 108, 109, 110, 112, 113, 118, 124, 128, 144, 155, 157, 159, 160, 161, 162, 163, 166, 169, 170, 172, 179, 187, 190, 192, 199, 206, 215, 216, 222, 229, 230, 237, 238, 243, 244, 256, 281, 287, 288, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "allur": [16, 22, 42, 43], "allurereport": [19, 22], "almost": [19, 324, 327, 335], "alon": [148, 256, 324, 331], "along": [56, 316, 320, 326, 333], "alp": 0, "alpha": [23, 30, 324, 335], "alreadi": [23, 203, 239, 254, 256, 257, 296, 310, 321, 323, 326, 327, 332, 334, 335, 338], "also": [2, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 34, 35, 41, 42, 43, 44, 46, 50, 51, 54, 55, 56, 60, 63, 67, 68, 69, 70, 71, 73, 76, 79, 80, 81, 82, 84, 86, 88, 91, 92, 95, 97, 98, 99, 101, 103, 104, 106, 109, 119, 121, 128, 131, 143, 147, 149, 160, 162, 165, 169, 170, 173, 174, 175, 176, 183, 184, 196, 197, 203, 215, 218, 219, 228, 231, 232, 239, 241, 242, 256, 279, 280, 281, 283, 284, 285, 286, 287, 298, 308, 311, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "altern": [5, 7, 8, 9, 10, 13, 15, 16, 18, 19, 20, 22, 23, 24, 27, 28, 41, 42, 43, 44, 48, 51, 53, 56, 58, 59, 68, 73, 74, 75, 81, 88, 91, 92, 96, 97, 121, 124, 160, 162, 200, 213, 283, 286, 306, 312, 314, 317, 318, 320, 323, 324, 326, 327, 329, 330, 331, 333, 334, 335, 338], "although": [15, 23, 41, 68, 92, 110, 142, 281, 318, 327, 329, 330, 331, 333, 335], "alwai": [8, 19, 20, 23, 41, 68, 69, 86, 88, 92, 100, 127, 143, 144, 184, 196, 197, 213, 228, 242, 281, 295, 302, 305, 307, 309, 316, 317, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338], "always_true_or_false_go": 335, "amaz": 19, "ambigu": [144, 333], "among": [23, 60, 321, 324, 326, 329], "amount": 318, "amsterdam": 0, "an": [0, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 23, 24, 26, 27, 28, 31, 32, 41, 42, 43, 44, 45, 48, 53, 54, 56, 59, 60, 63, 67, 69, 70, 72, 73, 76, 82, 83, 84, 87, 88, 95, 97, 98, 99, 100, 103, 105, 108, 109, 110, 112, 113, 118, 121, 122, 124, 126, 127, 128, 129, 130, 137, 138, 141, 142, 143, 144, 147, 149, 152, 154, 155, 158, 159, 160, 161, 162, 165, 169, 170, 171, 173, 174, 175, 176, 179, 180, 182, 183, 184, 187, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 206, 213, 214, 215, 216, 218, 219, 220, 228, 229, 230, 231, 232, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 253, 255, 256, 261, 270, 271, 272, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 312, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 332, 333, 334, 335, 337, 338], "an_object": [323, 333], "analysi": [0, 16, 20, 42, 43, 326, 335], "analyz": [9, 10, 24], "ancestor": [41, 109, 124, 154, 192, 203, 239, 317, 319, 326, 328, 330, 333], "andrei": 103, "ani": [4, 5, 9, 10, 11, 12, 13, 19, 20, 23, 24, 27, 32, 41, 44, 45, 50, 54, 55, 56, 59, 60, 66, 67, 73, 76, 83, 86, 88, 100, 105, 109, 124, 131, 142, 147, 149, 154, 158, 169, 170, 180, 183, 203, 213, 239, 241, 281, 284, 285, 288, 306, 308, 312, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338], "annoi": 5, "annot": [16, 42, 43], "anonym": [331, 333, 335], "anoth": [13, 19, 23, 38, 41, 44, 69, 76, 84, 88, 137, 144, 160, 162, 169, 170, 316, 317, 318, 319, 321, 322, 323, 329, 331, 333, 334, 335, 338], "ansi": 334, "answer": [19, 41, 118, 119, 167, 225, 234, 298, 301, 302, 305, 318, 321, 328, 330, 333, 334, 338], "answer_write_opt": 19, "answertempl": 298, "anti": 32, "anticip": 334, "anyth": 19, "anywher": [41, 330], "apach": [18, 22, 33], "api": [2, 16, 22, 41, 42, 43, 71, 86, 104, 138, 318, 320, 327, 330, 331, 333, 335, 337, 338], "apidoc": 13, "app": [18, 130, 209, 334], "appar": [13, 321, 326, 334], "appdata": 335, "appear": [13, 22, 84, 324, 333], "append": [5, 19, 20, 143, 144, 160, 162, 173, 174, 209, 279, 280, 282, 283, 284, 314, 327, 329, 331, 332, 333, 334, 335], "appl": 23, "appli": [10, 13, 16, 19, 20, 23, 24, 27, 38, 41, 42, 43, 67, 80, 178, 203, 218, 219, 239, 280, 284, 317, 319, 323, 328, 329, 330, 332, 333, 335, 336], "applic": [0, 10, 12, 14, 16, 18, 19, 23, 27, 31, 41, 42, 43, 50, 55, 56, 58, 60, 61, 62, 68, 73, 83, 84, 85, 88, 90, 94, 99, 109, 110, 130, 142, 157, 160, 254, 256, 257, 281, 287, 318, 320, 321, 322, 324, 325, 326, 327, 330, 332, 333, 337, 338], "appreci": [17, 99], "approach": [0, 329, 330, 333], "appropri": [121, 335], "approxim": [19, 333], "approximately_equ": 19, "april": 30, "apt": [15, 22, 23], "aqua": 13, "ar": [0, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 41, 42, 43, 44, 48, 49, 50, 51, 54, 55, 56, 58, 60, 61, 62, 63, 64, 67, 68, 69, 70, 73, 74, 75, 76, 80, 81, 82, 83, 86, 88, 90, 91, 92, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 109, 110, 112, 113, 118, 119, 121, 122, 124, 127, 128, 138, 142, 143, 144, 152, 157, 158, 159, 160, 161, 162, 163, 165, 169, 170, 171, 173, 175, 176, 178, 179, 180, 182, 183, 193, 194, 200, 203, 209, 210, 219, 220, 221, 231, 232, 235, 237, 239, 246, 250, 256, 259, 260, 262, 263, 264, 279, 280, 283, 284, 285, 286, 287, 288, 290, 291, 294, 295, 301, 302, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "arbitrari": [19, 23, 41, 42, 43, 56, 71, 81, 142, 298, 317, 320, 322, 330, 331, 333, 336, 338], "arbitrarili": 56, "arbitrary0": 44, "arc": 100, "architectur": [13, 19, 329], "archiv": [5, 23, 45, 327], "area": [19, 113, 119, 324, 331], "aren": 5, "arg": 333, "arg1": [173, 174, 178], "arg2": [174, 178], "argnam": [18, 141, 163, 320], "argument": [5, 8, 9, 10, 13, 15, 18, 19, 20, 22, 23, 24, 25, 26, 34, 38, 41, 42, 43, 44, 54, 60, 63, 69, 71, 73, 74, 75, 76, 82, 86, 88, 91, 92, 95, 97, 108, 109, 110, 113, 118, 119, 124, 138, 140, 141, 143, 144, 145, 146, 149, 152, 154, 160, 162, 163, 165, 167, 169, 170, 173, 174, 175, 176, 179, 180, 187, 192, 193, 194, 199, 200, 203, 204, 206, 213, 214, 215, 216, 217, 218, 219, 231, 232, 233, 234, 240, 241, 243, 244, 246, 256, 264, 279, 280, 281, 282, 283, 284, 285, 286, 294, 295, 304, 306, 307, 308, 309, 310, 311, 317, 318, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338], "argument1": [179, 320], "argument2": [179, 320], "aris": 5, "arithmet": [19, 20, 48, 130, 190, 321, 333, 334, 335], "arithmetic_express": 335, "ariti": [4, 12, 24, 41, 51, 56, 108, 109, 112, 118, 119, 121, 124, 126, 128, 141, 147, 151, 152, 154, 157, 160, 162, 163, 165, 169, 170, 174, 176, 179, 183, 215, 229, 231, 232, 317, 318, 320, 326, 329, 331, 333, 335], "arity1": 333, "arity2": 333, "armor": 23, "around": [20, 41, 108], "arrai": [48, 54, 74, 75], "arrow": [13, 333], "arrowhead": 13, "arthur": 318, "articl": [9, 56, 105], "artif": 105, "artifici": [0, 103], "artist": [1, 4], "arun": 99, "arxiv": 105, "as_curly_bracket": 82, "as_dictionari": [19, 54], "as_heap": [161, 162], "as_list": 162, "as_nested_dictionari": 82, "as_set": 92, "asc": 23, "ascii": [23, 131, 335], "asdf": [16, 22, 42, 43], "ask": [19, 38, 41, 42, 43, 59, 164, 167, 205, 225, 226, 320, 325, 328, 330, 331, 337], "ask_quest": [168, 205, 208, 209, 210, 211, 221, 222, 223, 225, 226, 334], "aspect": [9, 13, 324, 330, 332], "assembl": [331, 334], "assert": [16, 19, 22, 42, 43, 51, 96, 128, 157, 169, 170, 193, 281, 317, 325, 330, 331, 335], "asserta": [165, 170, 176, 185, 205, 231, 232, 281, 333, 335], "assertions_failures_to_error": 8, "assertions_messag": 8, "assertz": [23, 51, 96, 109, 160, 162, 165, 169, 176, 185, 205, 231, 232, 281, 285, 312, 317, 323, 333, 335], "assess": [9, 332], "assign": [17, 45, 96, 315, 319, 330], "assignvar": [42, 43, 71], "assignvarsp": 45, "assoc": 54, "associ": [0, 54, 149, 151, 152, 154, 160, 162, 250, 290, 291, 322, 324, 330, 331, 333, 334], "assum": [8, 9, 10, 11, 13, 18, 19, 23, 27, 29, 34, 44, 58, 67, 68, 69, 76, 86, 91, 98, 99, 108, 167, 178, 183, 208, 213, 220, 221, 223, 225, 281, 296, 315, 318, 320, 321, 322, 323, 326, 328, 329, 331, 332, 333, 334, 335, 338], "assumpt": [41, 109, 118, 119, 173, 328, 330, 333, 335], "asterisk": 320, "asynchron": [42, 43, 158, 295, 296, 306, 307, 309, 310, 324, 325], "at_least_one_atom": 19, "at_same_lin": 334, "atom": [13, 15, 19, 23, 41, 46, 47, 48, 56, 60, 62, 63, 69, 70, 74, 75, 81, 94, 98, 101, 126, 127, 128, 129, 131, 142, 143, 144, 145, 146, 147, 155, 160, 163, 165, 179, 180, 182, 183, 187, 209, 210, 222, 223, 226, 229, 243, 246, 253, 255, 260, 261, 264, 270, 271, 272, 274, 275, 277, 281, 282, 287, 288, 292, 293, 303, 305, 317, 318, 320, 321, 324, 329, 330, 331, 333, 334, 335, 336, 338], "atom_cod": [46, 329], "atom_concat": [19, 145, 333, 335], "atom_length": 333, "atom_list": 19, "atom_or_atom_list": 149, "atom_str": 333, "attach": 100, "attain": 34, "attempt": [23, 25, 69, 99, 112, 281, 286, 287, 321, 323, 329, 330], "attent": [9, 10, 20, 24, 335], "attr_": [169, 170], "attract": 326, "attribut": [0, 38, 42, 43, 69, 123, 148, 169, 170, 313, 317, 333, 334], "attribute_": [312, 317, 333], "attributes_protocol": [169, 170, 312], "au": 0, "audit": 23, "augment": 333, "august": [30, 324], "australia": 0, "auth": 17, "authent": [17, 23], "author": [1, 3, 5, 9, 17, 18, 23, 42, 43, 54, 63, 71, 92, 103, 105, 140, 163, 320, 324, 327, 331, 334], "auto": [17, 333], "auto_bug_report": 17, "autom": [13, 16, 17, 18, 23, 25, 42, 43, 86, 320, 327, 333, 334], "automat": [6, 12, 13, 14, 16, 17, 18, 20, 21, 23, 34, 41, 42, 43, 49, 56, 69, 105, 122, 124, 142, 149, 158, 160, 166, 172, 178, 193, 194, 201, 203, 208, 211, 222, 223, 225, 239, 315, 318, 321, 322, 323, 325, 329, 330, 331, 333, 334, 335, 336, 338], "automata": [23, 41], "auxiliari": [13, 19, 41, 99, 163, 314, 317, 329, 331, 333], "avail": [7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 30, 32, 34, 35, 42, 43, 50, 55, 60, 64, 70, 73, 81, 86, 88, 91, 95, 98, 99, 101, 103, 105, 106, 109, 110, 118, 129, 137, 142, 230, 280, 283, 284, 285, 286, 287, 300, 301, 302, 310, 312, 317, 318, 320, 321, 322, 324, 327, 328, 330, 331, 332, 333, 335, 336, 337, 338], "averag": 19, "avl": 54, "avltre": 54, "avoid": [10, 13, 19, 20, 22, 23, 25, 34, 36, 41, 42, 43, 56, 83, 110, 126, 128, 138, 142, 144, 147, 160, 162, 173, 203, 240, 254, 256, 257, 287, 314, 317, 318, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 336, 338], "awai": [5, 321, 333], "awar": [19, 24, 41, 112, 130, 317, 318, 321, 323, 329, 330, 331, 333, 335, 336, 338], "awesom": 23, "awt": 73, "b": [0, 5, 9, 12, 17, 19, 23, 26, 45, 46, 48, 51, 54, 55, 63, 68, 74, 75, 82, 88, 95, 96, 100, 101, 160, 162, 188, 318, 323, 333, 338], "bachelor": 5, "back": [15, 23, 38, 295, 307, 309, 334, 335, 338], "backend": [6, 12, 13, 15, 16, 19, 20, 22, 23, 24, 27, 29, 31, 35, 39, 41, 42, 43, 44, 45, 48, 50, 55, 60, 61, 62, 63, 67, 73, 74, 75, 76, 85, 86, 88, 90, 95, 97, 98, 101, 105, 106, 113, 124, 126, 127, 128, 130, 131, 137, 138, 142, 144, 147, 157, 158, 160, 165, 169, 170, 173, 174, 176, 183, 218, 219, 220, 229, 231, 232, 254, 256, 257, 279, 280, 281, 283, 284, 285, 286, 287, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 317, 318, 321, 323, 324, 327, 328, 329, 330, 331, 332, 333, 336, 338], "backend_adapter_hook": [68, 323], "backend_random": [19, 88], "background": [324, 330], "backquot": 320, "backtrac": 214, "backtrack": [20, 24, 90, 110, 118, 171, 176, 182, 183, 220, 228, 231, 235, 250, 252, 253, 259, 260, 261, 262, 263, 270, 271, 272, 274, 275, 277, 290, 291, 293, 297, 317, 318, 320, 322, 331, 332, 333, 336, 338], "backu": 163, "backup": [23, 112, 327], "backward": [19, 23, 30, 326], "bad": 333, "bag": 171, "bagof": [20, 144, 198, 199, 200, 205, 235, 236, 333], "ball": 19, "banner": [221, 334, 335], "bar": [11, 12, 19, 23, 41, 62, 68, 69, 74, 75, 90, 159, 160, 161, 169, 170, 183, 220, 315, 317, 318, 322, 326, 329, 331, 333, 336], "bar_pack": 23, "bare": 76, "barth": 0, "base": [0, 4, 9, 19, 23, 31, 36, 41, 42, 43, 44, 72, 74, 75, 81, 82, 86, 89, 105, 255, 285, 313, 317, 318, 319, 320, 322, 325, 329, 330, 331, 333, 334, 335], "base64": [15, 42, 43, 70, 71], "base64url": 46, "basenam": [9, 10, 13, 23, 285, 317, 331, 336], "bash": [13, 14, 18, 19, 335], "basi": [9, 20, 316, 322, 324, 328, 329, 331, 332, 335], "basic": [12, 15, 19, 41, 47, 57, 67, 72, 81, 86, 88, 97, 124, 270, 323, 332, 335], "basic_typ": [19, 42, 43, 71, 97], "batch": [23, 42, 43, 325], "baz": [11, 19, 26, 41, 68, 69, 84, 169, 170, 183, 220, 318, 326, 331, 335], "bb": 51, "bbb": 51, "bbedit": 13, "bc83": 101, "bebop": 0, "becaus": [56, 312, 317, 318, 333, 335], "becom": [19, 23, 129, 137, 301, 302, 322, 326, 329, 331, 333, 335, 338], "been": [74, 75, 142, 167, 208, 221, 223, 225, 286, 287, 312, 322, 323, 324, 326, 334, 335, 338], "befor": [5, 9, 10, 13, 19, 23, 24, 25, 27, 41, 44, 57, 60, 84, 108, 110, 149, 159, 161, 162, 166, 191, 193, 205, 246, 260, 264, 281, 315, 318, 321, 322, 323, 326, 327, 328, 329, 332, 333, 334, 335, 336, 338], "before_event_registri": 57, "begin": [5, 19, 56, 317, 318, 329, 331, 334, 336], "begin_category_direct": 163, "begin_object_direct": 163, "begin_of_fil": [19, 323], "begin_protocol_direct": 163, "beginlin": [8, 317, 331, 336], "behalf": [41, 233, 240, 333], "behav": [41, 157, 214, 312, 333, 335], "behavior": [24, 36, 42, 43, 44, 317, 321, 322, 324, 325, 326, 328, 330, 333, 335, 336], "behaviour": 0, "behind": 328, "beig": 13, "being": [8, 9, 10, 12, 13, 19, 20, 23, 27, 35, 38, 41, 51, 68, 95, 96, 105, 112, 113, 159, 161, 194, 215, 237, 240, 246, 285, 307, 312, 317, 318, 321, 322, 323, 324, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338], "beira": 0, "belli": 0, "belli_et_al_92": 0, "belong": [324, 329], "below": [13, 19, 23, 27, 60, 68, 74, 75, 82, 99, 279, 280, 283, 284, 318, 321, 322, 323, 326, 330, 331, 332, 333, 335], "bench": 332, "benchmark": [5, 19, 34, 328, 332, 335], "benchmark_reifi": 19, "benefit": [34, 56, 329, 335], "berlin": 103, "besid": [10, 24, 109, 326, 332, 333], "bessi": 96, "best": [5, 13, 16, 19, 34, 36, 42, 43, 51, 92, 96, 126, 128, 142, 144, 147, 316, 317, 320, 324, 326, 331, 333, 335, 336], "beta": [17, 22, 23, 30, 335], "better": [13, 19, 23, 54, 68, 82, 92, 95, 142, 200, 327, 329, 330, 331, 335, 338], "between": [5, 9, 13, 15, 19, 20, 23, 24, 26, 30, 32, 34, 36, 41, 42, 43, 48, 54, 60, 82, 97, 99, 110, 121, 127, 131, 160, 162, 163, 215, 233, 234, 240, 275, 287, 316, 318, 319, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "between_3_in_interv": 19, "bf166b6": 19, "bfs_interpret": 5, "bib": [105, 327], "bibliographi": [42, 43, 105, 327], "bibsourc": 105, "bibtex": 327, "biburl": 105, "big": [48, 96], "bin": 19, "binari": [5, 19, 44, 48, 54, 89], "binary_stream": 216, "binary_tre": 44, "bind": [6, 19, 20, 31, 41, 42, 43, 119, 159, 160, 161, 162, 287, 298, 317, 320, 321, 323, 324, 328, 329, 330, 332, 333, 335, 338], "bintre": 54, "bird": [317, 326], "birthdai": 338, "bisect": 338, "bit": [19, 23, 70, 88, 101, 334], "bitbucket": [13, 19, 23], "black": [13, 54, 323, 330, 331, 333], "blackboard": 324, "blackducksoftwar": 9, "blank": [9, 64], "blank_grammar": 64, "blob": 19, "block": [0, 32, 69, 294, 300, 301, 302, 305, 306, 310, 320, 323, 330, 333, 338], "block89": 0, "blown": 331, "blue": [92, 320, 323, 331, 333], "bmp": 335, "bn": 335, "bncf": 0, "bobrow": 0, "bobrow_et_al_88": [0, 326], "bodi": [19, 20, 41, 56, 68, 69, 109, 119, 143, 163, 169, 170, 175, 176, 193, 215, 217, 218, 219, 231, 233, 234, 240, 321, 333, 335], "bold": 320, "bom": 131, "bone": 76, "book": [34, 86], "bookkeep": 332, "booktitl": [9, 103], "boolean": [13, 19, 23, 27, 84, 187, 255], "border": 13, "borrow": 327, "both": [5, 13, 17, 18, 19, 22, 23, 31, 34, 41, 42, 43, 44, 56, 64, 67, 73, 88, 99, 105, 128, 138, 144, 178, 200, 246, 264, 279, 280, 281, 285, 312, 315, 317, 318, 319, 320, 321, 322, 323, 325, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338], "bother": 324, "bottom": 5, "bottom_to_top": 13, "bound": [13, 19, 23, 41, 48, 64, 69, 74, 75, 90, 113, 130, 160, 162, 173, 183, 200, 220, 233, 234, 240, 244, 254, 256, 257, 317, 320, 321, 322, 331, 332, 333], "bounded_arithmet": 130, "bowen": 334, "box": [13, 24, 42, 43, 84, 215, 325, 330, 332, 333], "bracha": 0, "bracket": [48, 74, 75, 82, 312], "brad": 0, "branch": [17, 63, 130, 137, 335], "bratko": 0, "bratko90": 0, "breadth": 5, "break": [17, 23, 92, 110, 112, 147, 317, 318, 323, 328, 330, 333, 334, 335], "breakpoint": [12, 42, 43, 325], "brew": [13, 15, 22, 23], "brief": 329, "briefli": [19, 321], "bring": [324, 331], "british": 0, "broad": [327, 331], "broadcast": [42, 43, 325, 333], "broken": [19, 317, 318], "broken_fil": 19, "brother": 5, "brown": 0, "brows": [15, 17, 19, 31, 42, 43], "browser": [1, 3, 4, 6, 11, 19, 21, 22, 31, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106], "bsd": [5, 23, 70, 98, 101, 106], "bsdtar": [22, 23], "btree": [162, 333], "btree_to_queu": 162, "bug": [9, 16, 17, 22, 23, 38, 42, 43, 99, 335], "buggi": [38, 44, 85, 99, 323], "build": [15, 22, 23, 312, 320, 322, 323, 324, 327, 330], "built": [5, 9, 19, 20, 21, 22, 23, 35, 36, 38, 41, 42, 43, 49, 57, 60, 76, 97, 113, 122, 127, 137, 138, 142, 143, 144, 155, 158, 160, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 270, 271, 272, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 318, 322, 323, 324, 325, 327, 328, 329, 330, 334, 335, 337], "built_in": [136, 137, 139, 163, 250, 290, 291, 317, 327, 331, 333, 336], "bulk": 5, "bundl": [5, 19, 23, 73], "bup_interpret": 5, "burgess": 54, "busi": 5, "bve0136144": 0, "bye": 69, "bypass": [28, 42, 43, 60, 113, 203, 239, 318, 322, 325, 333], "byrd": 24, "byte": [19, 46, 48, 70, 89], "bz2": [23, 327], "bzip2": 327, "c": [0, 4, 5, 18, 19, 23, 36, 42, 43, 48, 51, 54, 59, 68, 70, 74, 75, 82, 86, 96, 100, 101, 160, 162, 188, 317, 318, 323, 324, 325, 333, 334], "ca": 9, "cach": [23, 34, 109, 118, 119, 287, 317, 324, 332, 335], "calcul": [5, 333], "calendar": [3, 52], "california": 9, "call": [5, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 41, 42, 43, 44, 50, 54, 55, 60, 63, 69, 73, 76, 79, 80, 84, 88, 95, 97, 108, 109, 110, 112, 113, 115, 118, 119, 121, 124, 138, 142, 143, 144, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 178, 179, 180, 186, 187, 188, 190, 192, 193, 194, 198, 199, 200, 201, 203, 204, 205, 206, 208, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 246, 254, 256, 257, 264, 279, 280, 281, 282, 283, 284, 285, 287, 288, 292, 294, 295, 296, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 320, 322, 323, 324, 325, 326, 327, 330, 331, 334, 335, 336, 337], "call_al": 333, "call_in_us": 113, "call_super_first": 320, "call_super_last": 320, "call_with_time_limit": 19, "call_with_timeout": 19, "callabl": [19, 41, 108, 109, 110, 112, 113, 118, 119, 129, 137, 142, 145, 160, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 198, 199, 200, 201, 203, 204, 213, 214, 217, 218, 219, 220, 225, 231, 232, 235, 243, 246, 250, 260, 264, 282, 285, 290, 291, 294, 295, 298, 306, 307, 309, 310, 330, 333, 338], "callback": [42, 43, 71, 330], "caller": [13, 19, 25, 163, 317, 328, 330, 331, 333, 338], "cambridg": 0, "camel": [99, 335], "camillo": 103, "camp": 5, "can": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 31, 32, 35, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 53, 54, 56, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 101, 104, 105, 110, 112, 119, 124, 127, 128, 131, 137, 138, 142, 144, 145, 146, 149, 151, 152, 154, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 180, 184, 193, 194, 196, 197, 201, 203, 211, 215, 218, 219, 221, 228, 231, 232, 235, 238, 239, 242, 245, 247, 248, 255, 256, 279, 280, 281, 282, 283, 284, 285, 286, 287, 295, 307, 309, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "canada": 0, "cancel": [88, 296, 338], "candid": [20, 335], "cannot": [19, 23, 27, 38, 41, 73, 86, 95, 122, 128, 129, 131, 137, 142, 147, 157, 169, 170, 171, 173, 174, 175, 179, 180, 187, 190, 192, 198, 199, 200, 204, 206, 213, 214, 216, 218, 219, 229, 230, 235, 237, 238, 241, 243, 244, 287, 317, 320, 321, 322, 327, 328, 330, 331, 333, 334, 335, 336, 338], "capabl": [13, 41, 319, 324, 326, 327], "capac": 322, "caption": 13, "car_protocol": 323, "care": [10, 13, 19, 23, 56, 85, 86, 88, 97, 203, 328, 333, 335, 338], "carefulli": 327, "cargil": 0, "carri": [326, 330], "case": [0, 9, 10, 12, 13, 17, 18, 19, 20, 23, 24, 25, 27, 28, 41, 44, 50, 54, 55, 56, 60, 67, 68, 69, 82, 83, 99, 100, 113, 127, 131, 138, 144, 147, 158, 159, 160, 161, 162, 169, 170, 175, 178, 215, 218, 219, 233, 234, 239, 240, 279, 280, 283, 284, 287, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338], "castor": 323, "cat": 19, "catalog": 0, "catalogu": 0, "catch": [19, 20, 38, 97, 137, 179, 186, 187, 189, 190, 192, 205, 206, 216, 229, 230, 237, 238, 241, 243, 244, 288, 321, 323, 333, 335], "catchall_catch": 335, "catcher": [175, 238], "categori": [8, 9, 13, 19, 20, 28, 31, 41, 42, 43, 44, 49, 50, 53, 55, 60, 61, 62, 66, 68, 76, 81, 84, 85, 86, 90, 99, 106, 108, 109, 113, 119, 121, 122, 128, 132, 136, 138, 139, 140, 142, 147, 148, 152, 158, 159, 160, 161, 162, 164, 169, 170, 171, 173, 174, 192, 198, 199, 200, 203, 213, 214, 215, 235, 239, 240, 245, 250, 252, 253, 254, 256, 257, 259, 270, 274, 275, 276, 285, 287, 313, 314, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338], "category1": [317, 331], "category2": [317, 331], "category_direct": [163, 187, 254], "category_identifi": [123, 143, 144, 163, 245, 250, 252, 253, 254, 259, 270, 274, 275], "category_properti": [127, 140, 163, 187, 245, 254, 259, 268, 276, 317], "category_rel": [163, 187, 254], "category_term": 163, "caus": [5, 10, 19, 23, 27, 187, 192, 216, 243, 321, 322, 329, 335], "caution": 92, "cautiou": 330, "caveat": [16, 19, 42, 43, 110, 317, 329, 335], "cbor": [42, 43, 71], "cc0": 99, "cc_metric": 9, "ccc": [51, 317], "ccomp": 13, "cd": [17, 18, 19, 20, 22, 23, 86, 320], "ce": 9, "celsiu": 321, "central": [23, 319, 333, 335], "certifi": 23, "certutil": 23, "cff": 327, "cfm": 9, "chain": [56, 326], "champaux": 0, "champaux92": [0, 335], "champion": 5, "chan": 0, "chanc": [23, 318], "chang": [9, 13, 19, 22, 23, 24, 27, 32, 35, 41, 54, 56, 68, 81, 82, 90, 99, 103, 162, 203, 239, 286, 287, 314, 318, 322, 327, 329, 331, 333, 334, 335], "changeabl": 335, "char": [19, 46, 48, 64, 70, 74, 75, 94, 97, 98, 101, 129], "char_cod": 44, "charact": [19, 23, 25, 35, 44, 60, 64, 70, 89, 94, 97, 98, 101, 229, 237, 281, 318, 329, 330, 335], "character": 41, "character_cod": 229, "character_code_list": 187, "characterist": [326, 332], "charl": 91, "charset": 97, "check": [4, 10, 12, 15, 16, 17, 21, 23, 32, 41, 42, 43, 44, 59, 60, 69, 71, 83, 84, 85, 92, 137, 155, 160, 162, 167, 179, 180, 188, 218, 219, 225, 252, 274, 275, 277, 281, 283, 286, 287, 288, 297, 304, 310, 318, 320, 322, 323, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338], "check_opt": [84, 320], "check_temperatur": 321, "check_xyz": 19, "checker": [27, 44], "checksig": 23, "checksum": 23, "chirp": 317, "choco": [13, 22, 23], "chocolatei": [19, 23], "choic": [5, 19, 23, 24, 26, 54, 74, 75, 82, 97, 184, 228, 318, 319, 321, 322, 324, 335], "choos": [81, 322, 329, 334, 338], "chose": 324, "chosen": [30, 35, 44, 52, 99, 131, 158, 316, 324, 327, 332, 333, 335], "chr": 106, "chr_compil": 106, "christian": 103, "chrome": 19, "ci": [17, 19, 20], "ci_commit_ref_nam": 17, "ciao": [15, 23, 32, 91], "cipher": 23, "circl": [13, 19, 113, 331], "circo": 13, "circular": [13, 39, 42, 43, 287, 325, 329, 335], "circumst": 320, "citat": [9, 327], "cite": 327, "citeulik": 9, "citi": [138, 329, 331], "civil": 3, "claim": 329, "clariti": [19, 41], "clash": [28, 61, 62, 90, 317, 330, 331, 333, 335, 336], "class": [0, 13, 18, 31, 41, 42, 43, 66, 69, 73, 83, 109, 121, 148, 187, 256, 277, 285, 293, 313, 317, 319, 320, 325, 330, 333, 335], "classic": 333, "classifi": [10, 19, 333], "classroom": 324, "claus": [5, 9, 12, 19, 20, 23, 24, 26, 41, 42, 43, 44, 56, 64, 76, 80, 81, 97, 106, 113, 128, 147, 157, 164, 165, 169, 170, 173, 178, 180, 185, 193, 194, 203, 205, 215, 231, 232, 233, 234, 239, 240, 254, 256, 257, 281, 286, 287, 314, 317, 323, 324, 325, 326, 329, 330, 331, 332, 334, 335, 337], "clause_numb": 318, "clean": [19, 23, 39, 86, 287, 318, 329, 333, 334, 335], "clean_directori": 19, "clean_fil": 19, "cleaner": 159, "cleanup": [16, 42, 43], "clear": [329, 330, 333, 335], "clearli": [19, 35], "cli": [17, 22], "client": [41, 91, 154, 319, 326, 333, 338], "clo": 326, "cloc": 9, "clock": [3, 19, 101], "clocksin": 0, "clocksin87": 0, "clone": [15, 19, 23, 68], "clone_pair": 19, "clonepair": 19, "close": [19, 27, 34, 41, 109, 118, 119, 312, 320, 323, 324, 328, 329, 330, 333, 335], "close_opt": 187, "closer": [9, 73, 327], "closest": 330, "closur": [19, 41, 44, 69, 113, 143, 144, 162, 167, 173, 174, 179, 187, 253, 274, 329, 333, 334], "clp": 333, "clpfd": [333, 335], "cluster": [13, 73], "clutter": 19, "cm": 9, "cn": 9, "co": 6, "code": [5, 11, 12, 13, 16, 20, 23, 26, 27, 30, 31, 35, 36, 41, 42, 43, 44, 46, 48, 54, 57, 59, 60, 64, 65, 68, 69, 70, 74, 75, 80, 81, 82, 83, 86, 89, 90, 92, 94, 97, 98, 99, 101, 103, 105, 106, 126, 128, 129, 130, 131, 137, 142, 144, 147, 173, 179, 215, 229, 240, 279, 280, 283, 284, 285, 287, 312, 314, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 336, 337, 338], "code_metr": [13, 16, 19, 20, 22, 42, 43], "code_metrics_util": 9, "code_of_conduct": 327, "code_prefix": [25, 335], "codepoint": 44, "codeurlprefix": 13, "coeffici": 9, "cohes": [9, 41, 317], "coincid": [67, 323, 329], "coinduct": [41, 42, 43, 109, 110, 139, 150, 163, 164, 178, 205, 230, 332, 335], "coinduction_stack": 318, "coinductive_direct": 163, "coinductive_mode_term": 163, "coinductive_predicate_templ": 163, "coinductive_predicate_template_list": 163, "coinductive_predicate_template_sequ": 163, "coinductive_predicate_template_term": [124, 163], "coinductive_success_hook": [124, 177, 205], "coint": 0, "cointe87": [0, 316, 331], "collect": [4, 5, 9, 13, 18, 19, 20, 23, 41, 171, 198, 235, 294, 320, 333, 335, 338], "collect_al": 338, "collect_all_reifi": 338, "colleg": 0, "collis": 338, "colon": [51, 74, 75], "color": [13, 19, 113, 187, 215, 320, 323, 327, 333, 334], "color1": 92, "color2": 92, "column": [24, 51], "com": [0, 5, 7, 9, 13, 17, 18, 19, 22, 23, 45, 56, 63, 91, 98, 99, 105], "combin": [0, 13, 31, 41, 42, 43, 67, 287, 323, 324, 327, 328, 330, 333, 338], "come": [13, 324], "comemb": [124, 178, 333], "comma": [17, 19, 51], "command": [5, 9, 12, 13, 14, 15, 17, 19, 23, 42, 43, 63, 91, 325, 327, 332, 334, 335], "comment": [6, 9, 18, 23, 42, 43, 86, 130, 140, 141, 163, 209, 221, 325, 329, 333, 334], "commerci": [31, 42, 43, 327], "commit": [13, 17, 19, 23, 63, 338], "commit_author": 63, "commit_hash": 63, "commit_log": 63, "committe": 0, "common": [0, 10, 13, 16, 17, 18, 19, 20, 23, 27, 30, 34, 41, 42, 43, 44, 50, 60, 64, 67, 79, 88, 92, 97, 99, 137, 157, 159, 160, 161, 162, 194, 215, 217, 218, 219, 233, 234, 240, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 338], "commonli": [63, 131, 330, 333, 335], "commun": [0, 23, 30, 42, 43, 324, 325, 338], "comp": 106, "compact": [19, 335], "compani": [0, 23], "compar": [0, 5, 13, 19, 20, 31, 42, 43, 50, 54, 55, 60, 82, 149, 254, 317, 318, 320, 324, 329, 331, 332, 336, 338], "compare_3_order_less": 19, "comparingp": [47, 92], "comparison": [20, 23, 92, 333, 335], "compat": [5, 18, 19, 23, 30, 31, 42, 43, 158, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 321, 323, 325, 326, 327, 328, 330, 333, 335, 338], "compens": 101, "compet": 338, "competit": 4, "compil": [0, 4, 6, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 22, 23, 26, 27, 29, 31, 32, 41, 42, 43, 45, 50, 55, 56, 58, 60, 61, 62, 67, 73, 76, 79, 80, 85, 86, 88, 95, 99, 106, 108, 109, 110, 113, 118, 124, 126, 127, 128, 129, 130, 131, 135, 137, 139, 142, 144, 147, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 170, 172, 173, 174, 176, 178, 179, 180, 183, 193, 194, 203, 213, 215, 218, 219, 220, 231, 232, 233, 234, 239, 240, 254, 255, 256, 257, 261, 276, 279, 280, 283, 284, 285, 286, 287, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 320, 322, 324, 325, 326, 328, 330, 331, 333, 334, 336, 337, 338], "compiler_error": 19, "compiler_flag": [163, 187, 280, 284], "complement": [13, 18, 19, 23, 41, 44, 76, 81, 108, 109, 123, 252, 254, 317, 320, 322, 324, 330, 331, 334, 335], "complementari": [17, 322], "complemented_object": [123, 163], "complemented_object_list": 163, "complemented_object_sequ": 163, "complements_object": [163, 245, 247, 250, 254, 256, 259, 262, 266, 270, 275, 276, 285, 290, 317, 331], "complet": [5, 13, 19, 142, 230, 287, 315, 317, 318, 320, 321, 327, 335], "complex": [10, 13, 16, 18, 19, 42, 43, 44, 56, 67, 69, 317, 318, 324, 326, 330, 333, 334, 335], "compli": [19, 333, 335], "complianc": [321, 335], "compliant": [3, 327, 330, 335], "complic": 19, "compon": [9, 11, 13, 19, 31, 41, 42, 43, 98, 167, 208, 209, 210, 211, 221, 225, 226, 312, 318, 325, 331, 334, 335], "compos": [41, 317], "composit": [42, 43, 317, 324, 325, 335], "compound": [9, 19, 23, 41, 44, 47, 48, 59, 69, 74, 75, 81, 83, 84, 148, 163, 174, 194, 209, 215, 229, 281, 317, 318, 320, 324, 330, 331, 332, 333, 334, 335], "compoundp": 153, "comprehens": [13, 27, 109, 317, 330, 333], "compress": [23, 100, 327], "comput": [0, 5, 9, 19, 23, 41, 105, 281, 287, 301, 302, 315, 322, 324, 331, 333, 334, 335, 337, 338], "computation": [12, 20, 321], "con": [19, 335], "concaten": [23, 333], "conceal": 25, "concentr": 318, "concept": [0, 23, 36, 317, 319, 323, 324, 330, 331], "conceptu": 56, "concern": [42, 43, 287, 319, 325, 334], "concis": 48, "conclus": 5, "concret": [9, 41, 331], "concurr": [41, 158, 281], "condens": 318, "condit": [5, 6, 10, 19, 23, 35, 41, 42, 43, 61, 62, 99, 112, 129, 130, 135, 137, 139, 164, 254, 256, 257, 317, 320, 322, 325, 328, 331, 332, 333, 334, 336, 338], "condition": 137, "conditional_compilation_direct": 163, "conduct": 327, "confer": [0, 9], "confer\u00eancia": 0, "config": 335, "configur": [327, 335], "confirm": [13, 19, 60], "conflict": [19, 22, 23, 27, 41, 44, 56, 110, 121, 160, 162, 281, 321, 323, 326, 330, 331, 333, 334, 335, 338], "conform": [19, 60, 213, 253, 327], "conforms_to_protocol": [248, 257, 263, 266, 272, 274, 276, 291, 317, 331], "conjunct": [82, 110, 113, 118, 213, 294, 305, 332, 333, 338], "connect": [9, 19, 91, 100, 320, 333, 338], "consecut": 23, "consequ": [12, 17, 23, 38, 106, 160, 200, 213, 287, 316, 317, 319, 321, 329, 333, 335], "consequenti": 5, "consid": [9, 11, 13, 19, 23, 24, 90, 99, 124, 149, 160, 162, 282, 317, 318, 322, 323, 326, 330, 331, 333, 334, 338], "consider": [16, 42, 43, 325], "consist": [19, 41, 49, 161, 179, 320, 322, 329, 330, 331], "consistency_error": [175, 187, 189, 190, 192, 205, 206, 216, 229, 230, 237, 238, 241, 243, 244], "consol": 334, "constant": [19, 322], "constrain": [19, 35, 44, 312], "constraint": [31, 42, 43, 106, 320, 324, 333], "construct": [0, 5, 9, 13, 19, 20, 23, 24, 28, 41, 42, 43, 59, 67, 68, 76, 83, 84, 92, 108, 109, 110, 112, 113, 118, 119, 137, 143, 144, 164, 166, 172, 173, 174, 201, 203, 213, 229, 239, 282, 317, 318, 321, 322, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336], "constructor": [59, 83, 169, 170, 330], "consult": [4, 5, 11, 12, 15, 18, 19, 21, 22, 31, 36, 38, 42, 43, 45, 54, 82, 87, 88, 92, 155, 314, 321, 331, 332, 335], "consultor": 0, "consum": [305, 333, 338], "consumpt": 338, "contain": [5, 6, 8, 13, 18, 19, 20, 23, 25, 34, 38, 41, 54, 56, 59, 69, 74, 75, 80, 86, 98, 103, 105, 106, 110, 118, 128, 129, 137, 138, 142, 147, 151, 152, 155, 158, 160, 162, 171, 173, 174, 180, 198, 199, 200, 213, 214, 215, 235, 240, 255, 285, 286, 287, 295, 307, 308, 309, 311, 312, 314, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 333, 335, 336, 338], "content": [5, 13, 19, 23, 51, 56, 71, 89, 127, 138, 283, 284, 317, 320, 323, 327, 330, 331, 333, 335, 336, 337], "context": [16, 19, 24, 41, 42, 43, 68, 97, 109, 110, 112, 113, 115, 118, 119, 121, 142, 143, 144, 160, 162, 164, 171, 173, 174, 175, 179, 187, 190, 192, 198, 199, 200, 203, 205, 206, 213, 214, 215, 216, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 254, 256, 285, 306, 310, 312, 314, 317, 319, 321, 322, 325, 326, 328, 329, 330, 331, 332, 334, 335], "context_switching_cal": [19, 24, 68, 110, 163, 290, 318, 331, 335], "contigu": [41, 333], "continu": [10, 19, 23, 38, 86, 318, 333], "contract": 5, "contrari": [331, 336], "contrast": [319, 329, 330, 335, 338], "contribut": [1, 6, 9, 19, 41, 42, 43, 56, 99, 147, 317, 323, 327, 331, 333], "contributor": [5, 327], "control": [0, 9, 11, 12, 19, 20, 24, 28, 41, 42, 43, 57, 68, 76, 81, 108, 109, 110, 112, 113, 118, 119, 124, 137, 164, 166, 172, 174, 201, 203, 205, 213, 239, 312, 315, 317, 318, 320, 321, 322, 323, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338], "control_construct": 333, "conveni": [19, 22, 23, 57, 59, 63, 68, 83, 321, 323, 324, 328, 330, 331, 333, 336], "convent": [23, 56, 331], "converg": [13, 338], "convers": [10, 13, 18, 68, 99, 316, 329, 333], "convert": [4, 6, 13, 16, 18, 19, 23, 30, 38, 42, 43, 44, 60, 68, 84, 99, 137, 152, 167, 169, 170, 194, 218, 219, 221, 318, 320, 323, 324, 325, 327, 333], "convert_graph": 160, "cook": 0, "cope": 327, "copi": [13, 19, 23, 27, 56, 209, 314, 327, 329, 333, 334, 335, 338], "copyright": [4, 5, 6, 86, 163, 320, 327, 334], "cord": 0, "cordes91": 0, "core": [0, 19, 42, 43, 71, 92, 163, 208, 210, 211, 213, 221, 282, 318, 320, 321, 324, 327, 330, 333, 334, 338], "core_messag": [19, 250, 259], "coreutil": [19, 22, 23], "corner": 13, "coroutin": [42, 43, 55, 71, 105], "correct": [13, 19, 26, 41, 44, 56, 112, 144, 179, 187, 320, 321, 327, 329, 333, 335], "correctli": [56, 144, 329, 333], "correl": 318, "correspond": [18, 19, 22, 23, 41, 48, 56, 74, 75, 86, 92, 113, 118, 119, 143, 144, 145, 146, 155, 178, 215, 233, 234, 240, 292, 306, 310, 315, 317, 318, 319, 320, 321, 322, 326, 327, 328, 331, 333, 335, 336, 337, 338], "corrupt": 338, "cost": [5, 9, 100, 287, 332, 335, 338], "costa": [0, 54], "costli": 332, "could": [5, 9, 10, 19, 20, 23, 24, 27, 312, 320, 322, 323, 324, 331, 333, 334, 335, 338], "count": [5, 9, 19, 24, 25, 81, 332], "counter": [19, 61, 81, 109, 126, 128, 151, 330], "counterpart": [330, 333], "countri": 138, "coupl": [13, 16, 34, 42, 43, 322, 324, 327, 334], "coupling_metr": 9, "cours": [23, 34, 321, 335], "cover": [19, 68, 318, 321, 333, 335, 338], "coverag": [9, 16, 42, 43, 333], "coverage_report": 19, "covington": 0, "covington94": 0, "cow": 96, "cox": 0, "cox86": [0, 317, 324], "cpu": [5, 19, 315], "cpu_tim": 315, "craft": [86, 333], "crash": 13, "crate": 333, "creat": [3, 16, 17, 18, 20, 23, 31, 32, 41, 42, 43, 54, 56, 59, 73, 76, 82, 83, 87, 92, 94, 110, 127, 131, 138, 158, 164, 169, 170, 216, 245, 247, 248, 254, 255, 256, 257, 276, 298, 316, 320, 323, 324, 325, 327, 330, 333, 335, 338], "create_categori": [76, 127, 138, 245, 250, 258, 259, 276, 317, 323], "create_logtalk_flag": [261, 273, 276, 292, 335], "create_object": [127, 138, 247, 258, 262, 276, 290, 323, 330, 331, 333], "create_prolog_flag": 255, "create_protocol": [127, 138, 248, 258, 263, 276, 291, 323, 336], "creation": [17, 23, 29, 41, 138, 158, 180, 254, 256, 257, 316, 320, 330, 331, 334, 338], "creativ": 99, "creativecommon": 99, "credit": [42, 43, 71, 327], "creep": 318, "critic": [23, 54, 82, 335], "crlf_end": 51, "cross": [13, 27, 329, 333, 337], "crucial": [31, 42, 43, 330], "csd": 56, "css": 13, "csv": [42, 43, 71], "cubic": 19, "culprit": [19, 187, 192, 216, 243, 244], "cumbersom": [19, 335], "curl": [22, 23], "curli": [42, 43, 48, 71, 74, 75], "current": [3, 5, 9, 12, 13, 15, 16, 18, 19, 23, 24, 25, 30, 41, 42, 43, 48, 60, 63, 64, 67, 70, 73, 80, 90, 92, 95, 98, 101, 105, 124, 138, 240, 259, 261, 262, 263, 279, 280, 281, 283, 284, 285, 291, 315, 318, 320, 321, 322, 324, 327, 329, 331, 333, 334, 335, 338], "current_categori": [245, 250, 252, 253, 254, 267, 270, 274, 275, 276, 317, 336], "current_ev": [166, 172, 246, 264, 269, 276, 315, 322], "current_logtalk_flag": [137, 255, 273, 276, 292, 335], "current_non_termin": 333, "current_object": [68, 192, 247, 253, 256, 267, 271, 274, 276, 277, 290, 293, 331, 336], "current_op": [149, 183, 205, 220, 227, 333], "current_output": [19, 69], "current_pred": [182, 205, 220, 227, 326, 333], "current_prolog_flag": [19, 129, 130], "current_protocol": [248, 253, 257, 267, 272, 274, 276, 291, 336], "curri": 333, "cursor": 13, "cursori": 19, "curv": [42, 43, 325], "custom": [10, 12, 16, 18, 19, 41, 42, 43, 44, 67, 68, 71, 81, 92, 97, 282, 320, 323, 325, 327, 335], "custom_print_go": 19, "customiz": 320, "cut": [13, 20, 41, 113, 174, 204, 213, 214, 218, 219, 294, 328, 333, 335], "cv": 51, "cvzf": 23, "cx": 23, "cxprolog": [19, 23, 45, 88], "cyan": [13, 331], "cycl": 124, "cyclic": [20, 41, 97, 124, 180, 333, 335], "cyclomat": [16, 42, 43], "d": [0, 5, 9, 23, 46, 70, 82, 100, 101, 142, 287, 318, 323, 333], "d1": 113, "d2": [13, 22, 113], "d2lang": [13, 22], "dagr": 13, "dai": [98, 135, 142, 320], "dama": 54, "damag": 5, "danger": 316, "daniel": 3, "darker": 13, "darwin": 23, "dash": [13, 74, 75, 318], "data": [5, 13, 16, 20, 23, 41, 42, 43, 46, 48, 51, 63, 74, 75, 76, 82, 90, 93, 96, 97, 99, 100, 105, 138, 151, 159, 160, 162, 239, 317, 318, 319, 320, 321, 324, 329, 330, 331, 332, 333, 334, 335, 336, 337], "data_avail": [308, 311], "data_noise_handl": 159, "data_stor": 76, "databas": [5, 41, 42, 43, 90, 110, 138, 160, 162, 164, 194, 205, 216, 256, 317, 322, 324, 329, 330, 331, 335, 338], "dataset": 105, "date": [1, 3, 13, 18, 19, 23, 42, 43, 71, 135, 140, 142, 163, 320, 327, 335], "date_tim": 142, "datum": 76, "dave": 334, "davison": 0, "davison89": 0, "davison92": 0, "davison93": 0, "db": [126, 128, 331], "db_updat": [157, 338], "dbg": [19, 162, 318], "dblp": 105, "dcg": [56, 64, 333], "dd": 19, "de": [0, 18, 19, 60, 99, 318, 324, 327, 329, 333, 334, 335], "deactivate_debug_handl": 318, "dead": 10, "dead_code_scann": [16, 20, 22, 42, 43, 288], "dead_code_scanner_messag": 10, "deadlock": 338, "deal": [5, 19, 27, 42, 43, 59, 83, 318, 325, 333], "dealt": 329, "debat": 326, "debug": [8, 9, 10, 11, 12, 16, 22, 24, 34, 41, 42, 43, 68, 76, 110, 142, 162, 163, 221, 286, 287, 317, 324, 325, 330, 331, 333, 334, 335, 337], "debug_handl": [318, 332], "debug_messag": [16, 22, 42, 43, 318], "debugg": [16, 19, 22, 24, 42, 43, 226, 246, 260, 264, 325, 330, 332, 334, 335], "debugger_messag": 12, "debuggerp": 318, "decid": [5, 19, 23, 255, 324, 328, 333, 334], "decim": 48, "decis": [9, 323], "declar": [9, 19, 20, 23, 24, 27, 34, 41, 42, 43, 44, 45, 51, 57, 61, 62, 71, 76, 88, 96, 97, 108, 109, 112, 118, 119, 121, 122, 124, 126, 127, 128, 131, 138, 142, 143, 144, 147, 149, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 179, 182, 183, 184, 187, 190, 192, 196, 197, 198, 199, 200, 201, 203, 204, 206, 208, 209, 210, 211, 213, 214, 216, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 235, 237, 238, 239, 241, 242, 243, 244, 254, 256, 257, 281, 285, 314, 315, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 332, 334, 335, 336, 337, 338], "declared_in": [163, 220, 333], "decod": [42, 43, 71, 180, 321], "decompose_file_nam": [323, 335], "decomposit": 9, "decompress": 327, "decor": [318, 321], "decoupl": 334, "decreas": 23, "decrypt": 23, "dedic": [13, 19, 99, 294, 324], "deduct": 0, "deem": 320, "deep": [19, 44], "deepen": 5, "deepli": 318, "default": [6, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 22, 23, 24, 25, 27, 41, 42, 43, 48, 51, 56, 58, 60, 61, 62, 67, 70, 71, 74, 75, 80, 81, 84, 86, 90, 91, 96, 97, 98, 101, 140, 141, 167, 194, 203, 208, 210, 221, 223, 226, 239, 255, 279, 280, 281, 283, 284, 286, 287, 288, 292, 314, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 338], "default_flag": 334, "default_init_opt": 19, "default_opt": [13, 84], "default_workflow_hook": 68, "defeat": 318, "defer": 321, "defin": [5, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 26, 27, 28, 31, 32, 35, 41, 42, 43, 51, 54, 56, 64, 67, 69, 71, 73, 80, 81, 82, 83, 84, 85, 88, 91, 93, 96, 98, 99, 106, 108, 109, 113, 118, 119, 121, 122, 124, 127, 131, 137, 138, 142, 147, 149, 159, 160, 161, 162, 163, 166, 172, 173, 178, 183, 194, 201, 203, 208, 209, 210, 211, 216, 217, 218, 219, 222, 223, 225, 226, 239, 243, 250, 255, 259, 260, 262, 263, 264, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 298, 313, 315, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 332, 337, 338], "define_ev": [166, 172, 246, 260, 269, 276, 315, 322, 323], "defined_in": [163, 333], "definit": [8, 9, 12, 14, 17, 19, 20, 23, 25, 26, 27, 34, 35, 41, 42, 43, 44, 54, 64, 69, 76, 82, 86, 97, 108, 109, 110, 112, 113, 119, 129, 137, 138, 143, 144, 147, 160, 162, 164, 175, 178, 184, 196, 197, 200, 205, 223, 228, 241, 242, 255, 282, 312, 314, 315, 317, 318, 319, 321, 323, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 338], "degrad": 26, "del_attribut": [312, 317], "delai": [160, 215], "deleg": [19, 42, 43, 112, 115, 164, 201, 318, 321, 325, 330], "delet": [10, 19, 23, 26, 39, 54, 82, 162, 287, 312, 318, 330, 335], "delete_fil": 19, "deliv": 9, "delzanno": 0, "delzanno97": 0, "demo": 5, "demodb": 5, "demonstr": 56, "deni": [110, 329, 332, 335], "denot": [329, 331], "depart": 0, "depend": [9, 13, 16, 17, 18, 19, 27, 28, 29, 31, 35, 41, 42, 43, 44, 52, 56, 60, 63, 64, 71, 83, 86, 92, 99, 109, 118, 129, 137, 138, 142, 160, 169, 170, 174, 283, 286, 287, 316, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338], "deploi": [23, 110, 332], "deploy": [31, 42, 43, 334, 335], "deprec": [20, 23, 335], "dept": 0, "depth": [5, 9, 19, 44, 109, 118, 119, 326, 330], "derailleur": 270, "deriv": [5, 88, 99, 256, 271, 327, 330], "descend": [36, 41, 152, 317, 320, 324, 326, 330, 331, 333, 335], "describ": [9, 12, 13, 18, 19, 23, 27, 41, 42, 43, 68, 99, 108, 163, 220, 250, 290, 291, 314, 317, 318, 321, 325, 326, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338], "descript": [6, 18, 19, 23, 42, 43, 71, 93, 315, 320, 321, 322, 327, 329, 333, 335, 336, 337], "deselect": 318, "design": [0, 9, 41, 319, 321, 323, 324, 330, 331, 333, 334, 335], "desir": [19, 23, 63, 74, 75, 320], "despit": [38, 112, 329, 333], "destin": [51, 96], "destroi": [299, 324], "destruct": [319, 330], "destructor": 330, "det_cal": 333, "detach": [17, 23], "detail": [4, 6, 9, 10, 12, 13, 14, 17, 18, 19, 20, 22, 23, 28, 30, 33, 34, 39, 41, 46, 54, 60, 63, 81, 82, 85, 86, 87, 88, 92, 97, 105, 109, 118, 119, 209, 210, 287, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "detect": [10, 18, 60, 91, 180, 281, 321, 329, 335, 338], "determin": [24, 100, 318, 330, 333], "determinist": [16, 24, 41, 42, 43, 95, 157, 214, 294, 306, 332, 333, 338], "dev": [70, 98, 101], "develop": [1, 5, 7, 17, 19, 25, 26, 27, 30, 37, 38, 42, 43, 45, 68, 73, 84, 320, 323, 324, 326, 329, 330, 332, 333, 334, 335, 337, 338], "deviat": [9, 329], "devic": [19, 23], "df": 5, "dfs_interpret": 5, "di": 0, "diagnos": [19, 318], "diagram": [16, 22, 23, 27, 42, 43, 63, 275, 325, 329, 335], "dialect": [16, 41, 42, 43, 91, 323, 329], "dialog": 334, "diamond": 13, "dictionari": [19, 42, 43, 71, 82, 330], "dictionary0": 54, "dictionary1": 54, "dictionary2": 54, "dictionary_clone_4_01": 19, "dictionarypair": 19, "didoudiaz": 23, "dif": [42, 43, 50, 71], "differ": [10, 13, 19, 20, 23, 27, 34, 35, 36, 41, 54, 56, 60, 67, 68, 88, 92, 112, 138, 159, 160, 161, 173, 179, 188, 213, 219, 285, 314, 317, 318, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338], "differenti": [19, 326], "difficult": [324, 329], "difficulti": 9, "difflist": 314, "diplomarbeit": 9, "direct": [5, 8, 9, 10, 14, 18, 19, 20, 24, 27, 28, 30, 31, 41, 42, 43, 50, 54, 55, 56, 60, 67, 68, 76, 82, 95, 99, 108, 113, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 169, 170, 176, 179, 182, 183, 187, 192, 193, 215, 220, 231, 232, 254, 256, 257, 274, 281, 285, 286, 287, 292, 312, 314, 315, 318, 322, 323, 324, 325, 326, 327, 328, 330, 335, 338], "directli": [10, 13, 19, 41, 50, 55, 60, 285, 322, 329, 333], "directori": [2, 4, 5, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 32, 38, 41, 44, 49, 60, 63, 71, 86, 97, 99, 104, 138, 279, 280, 281, 283, 284, 285, 314, 317, 320, 323, 327, 329, 330, 331, 335, 336], "directory_fil": 23, "directory_path": 13, "directory_structur": 99, "direnv": [22, 23], "disabl": [11, 17, 19, 38, 91, 110, 317, 318, 335, 338], "disambigu": 23, "discard": [19, 23, 88, 184, 208, 307, 329], "disciplin": [319, 330], "disclaim": 5, "disconnect": 13, "discontigu": [20, 41, 139, 150, 163, 317, 321, 329, 331], "discontiguous_direct": 163, "discontinu": 321, "discret": 98, "discuss": [13, 19, 23, 100, 323, 326, 328, 329, 330, 335], "disjoint": 100, "disjunct": [20, 294, 335, 338], "disk": [230, 279, 280, 283, 284, 335], "dispatch": [41, 330], "displai": [13, 15, 19, 69, 318, 334], "disregard": [124, 333, 335], "disrupt": 334, "distanc": 324, "distinct": [9, 145, 146, 315, 316, 319, 322, 328, 330, 333], "distinguish": [19, 24, 41, 48, 138, 316, 331], "distract": 19, "distribut": [5, 6, 15, 19, 23, 24, 29, 31, 36, 42, 43, 86, 88, 105, 318, 322, 324, 325, 330, 332, 335], "district": 329, "dit_metr": 9, "diverg": 338, "divers": 333, "divert": [19, 334], "divisor": 190, "dl": 9, "dmi": 0, "dnf": 22, "do": [5, 23, 31, 42, 43, 67, 88, 95, 99, 160, 162, 312, 314, 317, 318, 321, 324, 327, 328, 329, 331, 333, 334, 335], "doc": [15, 18, 19, 22, 23, 63, 86, 327], "doc_metr": 9, "docker": 19, "doclet": [13, 16, 18, 22, 41, 42, 43, 287, 320], "doclet1": 14, "docprefix": 13, "doctyp": 69, "document": [0, 2, 5, 16, 17, 20, 31, 36, 39, 41, 42, 43, 71, 104, 140, 141, 209, 210, 287, 314, 318, 325, 327, 329, 332, 335], "document_convert": 73, "documenting_lgt": 317, "docurlprefix": 13, "doe": [5, 23, 31, 41, 42, 43, 56, 88, 110, 112, 118, 154, 169, 170, 192, 241, 245, 247, 248, 264, 279, 280, 283, 284, 288, 316, 317, 318, 320, 321, 322, 323, 326, 329, 330, 331, 332, 333, 335, 336, 337], "doesn": [9, 12, 13, 19, 23, 160, 213, 304, 323, 329, 331, 333, 334], "doi": [9, 105], "dollar": 318, "domain": [19, 41, 85, 86, 99, 187, 320, 323, 324, 326, 331, 333, 335], "domain_error": [19, 98, 155, 175, 179, 182, 183, 189, 190, 192, 205, 206, 215, 216, 220, 229, 230, 237, 238, 241, 243, 244, 250, 253, 255, 261, 270, 271, 272, 274, 275, 277, 280, 284, 285, 290, 291, 292, 293, 320, 333], "don": [0, 13, 19, 23, 25, 35, 44, 56, 67, 69, 74, 75, 84, 97, 99, 318, 320, 322, 329, 330, 333, 335], "done": [17, 19, 51, 56, 96, 160, 314, 323, 324, 328, 333, 335], "doni": 0, "dont_car": 335, "dony90": 0, "dot": 13, "dot_dia": 13, "doubl": [51, 163, 173, 330, 333], "double_quot": [60, 129, 137, 330], "doubt": 320, "down": [5, 19], "download": [13, 15, 22, 23, 99, 105], "downsid": 333, "dozen": 88, "draft": [0, 333], "drawback": 331, "dress": 317, "driven": [34, 36, 42, 43, 53, 200, 288, 318, 325, 328, 330, 335, 336, 337, 338], "driver": [19, 23, 335], "drop": 15, "dtd": [19, 320], "dual": [317, 321, 324, 333], "dudlei": 3, "due": [4, 9, 10, 13, 19, 20, 23, 24, 34, 41, 73, 83, 95, 110, 144, 287, 317, 318, 321, 323, 329, 332, 333, 335], "dump": 12, "dump_trac": 12, "duplic": [17, 19, 20, 26, 281, 287, 312, 317, 324, 329, 333, 335], "duplicated_claus": 335, "duplicated_direct": 335, "dure": [5, 24, 155, 279, 280, 283, 284, 317, 322, 323, 331, 334, 335, 336], "dynam": [0, 8, 9, 13, 19, 20, 23, 31, 41, 42, 43, 51, 76, 88, 90, 96, 119, 131, 136, 139, 150, 157, 160, 162, 163, 165, 169, 170, 176, 208, 209, 210, 211, 222, 225, 226, 231, 232, 245, 247, 248, 254, 256, 257, 259, 262, 263, 281, 286, 287, 288, 313, 318, 319, 320, 321, 322, 323, 324, 327, 329, 330, 332, 334, 335, 338], "dynamic_declar": [163, 169, 170, 256, 331, 335], "dynamic_direct": 163, "dynamic_pred": 216, "dyo": 19, "e": [0, 5, 9, 10, 12, 13, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 31, 32, 33, 41, 42, 43, 48, 51, 56, 59, 63, 67, 68, 69, 74, 75, 78, 79, 82, 84, 86, 95, 97, 98, 100, 101, 110, 118, 124, 143, 144, 147, 154, 157, 213, 230, 254, 281, 286, 287, 312, 317, 318, 319, 320, 321, 323, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338], "each": [13, 14, 16, 19, 22, 23, 24, 27, 35, 41, 44, 48, 51, 64, 71, 74, 75, 84, 86, 96, 100, 104, 131, 145, 146, 157, 167, 171, 209, 210, 221, 222, 223, 235, 294, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 329, 331, 332, 333, 335, 336, 338], "earli": [41, 322], "earlier": [19, 23, 318, 333], "easi": [19, 23, 169, 170, 314, 318, 324, 329, 331, 334, 338], "easier": [324, 333], "easiest": 329, "easili": [13, 18, 19, 23, 41, 76, 322, 327, 329, 330, 331, 333, 334, 335, 338], "eb156d46e135ac47ef23adcc5d20d49dd8b66abb": 13, "ec": 19, "eccaa1a2a": 63, "eccaa1a2a9495fef441915bbace84e0a4b0394a2": 63, "eclips": [13, 15, 19, 23, 24, 45, 50, 55, 60, 74, 75, 86, 88, 91, 95, 105, 333, 335], "eclipselgt": 335, "ecma": 74, "ecoop": 0, "edcg": [42, 43, 71, 323], "edg": [13, 19, 44, 100], "edge_cas": 44, "edinburgh": 86, "edit": [0, 12, 13, 17, 19, 23, 26, 38, 68, 91, 320, 324, 327, 335], "editor": [13, 46, 48, 51, 74, 103, 317, 318, 327, 331, 335, 336], "edu": [0, 106], "edward": 105, "effect": [18, 157, 184, 239, 318, 320, 322, 329, 330, 333, 338], "effer": 9, "effici": [0, 20, 103, 321, 324, 326, 331, 332, 335], "effort": 9, "eiffel": 333, "either": [5, 9, 10, 12, 13, 14, 15, 17, 19, 20, 22, 23, 24, 25, 27, 28, 41, 44, 54, 56, 59, 63, 64, 67, 69, 82, 86, 87, 91, 99, 113, 118, 129, 137, 138, 141, 160, 169, 170, 200, 203, 239, 255, 257, 259, 262, 263, 294, 312, 317, 318, 319, 320, 321, 324, 328, 329, 330, 331, 332, 333, 335, 336, 338], "el": 9, "electr": 0, "electron": 0, "element": [16, 19, 23, 42, 43, 48, 54, 56, 67, 71, 74, 75, 82, 86, 87, 88, 92, 100, 112, 171, 198, 255, 279, 280, 283, 284, 298, 305, 314, 320, 330, 333], "elif": [125, 130, 135, 137, 139, 163, 323, 335], "elimin": [218, 219, 329], "elk": 13, "els": [20, 125, 129, 135, 137, 139, 163, 333, 335], "elsevi": 0, "elsewher": [19, 20, 321, 329, 330, 333], "em": 0, "emacsthevik": 91, "emb": 29, "embed": [29, 58, 129, 142, 317, 331, 335, 336], "emit": 323, "emphas": [112, 331], "employe": [123, 252], "empti": [13, 17, 19, 69, 82, 83, 110, 141, 162, 171, 198, 230, 235, 239, 317, 318, 323, 333, 335], "emul": [9, 330, 338], "en": [45, 69, 100, 101], "enabl": [11, 12, 19, 23, 27, 41, 42, 43, 68, 145, 146, 158, 159, 161, 162, 312, 314, 315, 317, 318, 321, 324, 325, 326, 331, 332, 333, 334, 335, 336], "encapsul": [28, 34, 36, 41, 42, 43, 68, 110, 112, 147, 312, 314, 317, 319, 324, 325, 328, 330, 331, 333, 335, 336, 337], "enclos": [129, 137], "encod": [19, 41, 42, 43, 70, 71, 138, 139, 156, 163], "encoding_direct": [131, 335], "encount": 13, "encrypt": [16, 42, 43], "end": [13, 18, 19, 23, 35, 41, 87, 132, 133, 134, 135, 188, 281, 285, 312, 314, 315, 317, 320, 327, 328, 329, 331, 333, 334, 335, 336, 338], "end_categori": [8, 19, 44, 123, 136, 139, 163, 312, 317, 333, 334, 336], "end_category_direct": 163, "end_object": [9, 10, 11, 13, 19, 20, 23, 24, 44, 62, 69, 76, 84, 88, 90, 92, 100, 136, 139, 142, 148, 149, 163, 183, 220, 312, 314, 315, 316, 317, 318, 322, 323, 326, 329, 331, 333, 335, 336], "end_object_direct": 163, "end_of_fil": [19, 23, 318, 323], "end_protocol": [136, 139, 153, 163, 314, 336], "end_protocol_direct": 163, "endif": [125, 129, 130, 137, 139, 163, 333, 335], "endless": [281, 316, 322, 326, 334], "endlin": [8, 285, 317, 331, 336], "enforc": [19, 41, 330], "engin": [0, 9, 13, 34, 41, 42, 43, 158, 164, 192, 216, 230, 276, 297, 298, 299, 300, 301, 302, 303, 304, 305, 315, 324, 325, 326, 335], "enjoi": 322, "enough": [19, 41, 320, 329, 332, 333], "enrich": 320, "ensur": [10, 13, 19, 23, 27, 39, 41, 54, 56, 86, 97, 113, 160, 173, 178, 281, 312, 317, 321, 322, 324, 326, 327, 329, 330, 331, 333, 335, 338], "ensure_load": [31, 42, 43, 99, 335], "ent": 320, "enter": [23, 318], "enter_ag": 167, "entir": [5, 335], "entiti": [1, 3, 4, 6, 9, 10, 12, 13, 18, 19, 20, 24, 25, 31, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 109, 121, 122, 126, 127, 128, 129, 131, 137, 138, 139, 140, 143, 144, 147, 149, 154, 155, 159, 160, 161, 162, 164, 211, 215, 250, 253, 254, 256, 257, 270, 271, 272, 274, 275, 277, 282, 285, 287, 290, 291, 292, 293, 312, 314, 317, 318, 319, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "entity_alias_properti": 163, "entity_alias_property_list": 163, "entity_alias_property_sequ": 163, "entity_identifi": [121, 163, 285], "entity_info_item": 163, "entity_info_list": [140, 163], "entity_info_sequ": 163, "entity_prefix": [229, 285], "entity_rel": [216, 254, 256, 257, 285], "entity_resources_list": 163, "entity_typ": 285, "entity_url_suffix_target": 13, "entri": [9, 34, 330, 338], "enumer": [41, 42, 43, 88, 164, 176, 182, 183, 220, 250, 252, 253, 259, 260, 261, 262, 263, 270, 271, 272, 274, 275, 276, 277, 290, 291, 293, 297, 298, 318, 320, 322, 335, 337], "env": 23, "environ": [0, 6, 13, 16, 17, 19, 32, 42, 43, 91, 327, 334, 335], "envrc": 23, "eo": [173, 186, 205, 333], "epoch": 98, "epsilon": [19, 254], "epub": [18, 320], "equal": [19, 23, 34, 74, 75, 100, 254, 318, 331, 333], "equival": [19, 31, 42, 43, 74, 75, 110, 118, 179, 187, 190, 192, 200, 206, 213, 216, 229, 230, 237, 238, 243, 244, 294, 317, 326, 328, 330, 331, 332, 333, 335, 336, 338], "eras": 333, "error": [9, 13, 15, 16, 19, 20, 22, 23, 24, 26, 27, 31, 41, 42, 43, 44, 56, 59, 60, 69, 73, 97, 129, 137, 149, 159, 161, 163, 164, 205, 314, 317, 320, 322, 323, 325, 327, 328, 329, 330, 331, 334, 336, 338], "escap": [38, 51], "especi": [5, 324, 330], "essenti": [0, 19, 23, 34, 319, 331, 334], "essentially_equ": 19, "establish": [318, 322, 324, 338], "etc": [91, 320], "eternallybor": [22, 23], "euc": 131, "european": 3, "ev": 9, "evalu": [9, 190, 320, 332, 333, 334], "evaluation_error": [175, 179, 187, 189, 192, 205, 206, 216, 229, 238, 241, 243, 244, 333], "evan": 105, "evansg18": 105, "even": [5, 19, 27, 34, 56, 204, 326, 327, 330, 333, 334, 335, 338], "even_numb": 338, "event": [5, 34, 36, 41, 42, 43, 53, 59, 71, 77, 155, 163, 164, 166, 172, 205, 246, 260, 264, 276, 313, 317, 323, 325, 329, 330, 331, 332, 333, 335, 336, 337], "event_registri": 57, "eventu": [9, 81, 311, 324], "ever": 338, "everi": [19, 41, 100, 315, 316, 318, 322, 330, 331, 333, 334, 338], "every_oth": 19, "everyth": [5, 330, 334], "evolutionari": 0, "evolv": 13, "ex": [23, 56], "exact": [13, 19, 326, 330, 332], "exactli": 333, "examin": [19, 23, 316], "exampl": [4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 36, 41, 42, 43, 44, 46, 48, 51, 54, 56, 59, 62, 63, 64, 67, 68, 69, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 96, 98, 100, 101, 103, 105, 106, 163, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "exce": 229, "exceed": 229, "except": [0, 8, 13, 18, 19, 20, 22, 24, 34, 38, 41, 42, 43, 44, 59, 69, 95, 97, 98, 99, 110, 118, 163, 175, 190, 238, 241, 288, 294, 295, 301, 302, 306, 307, 309, 310, 314, 318, 323, 324, 325, 326, 330, 333, 335, 338], "excess": 44, "exchang": [36, 158, 330, 331, 333, 337], "excit": 5, "exclam": 18, "exclud": [13, 16, 27, 42, 43, 44, 317, 319, 331, 335], "exclude_directori": [9, 10, 13, 27], "exclude_ent": [9, 10, 13], "exclude_fil": [9, 10, 13, 27], "exclude_librari": [9, 10, 13], "exctx": 318, "execut": [13, 16, 23, 24, 29, 41, 42, 43, 56, 86, 109, 110, 142, 164, 171, 180, 204, 205, 214, 215, 230, 233, 234, 235, 238, 240, 254, 256, 294, 306, 310, 315, 317, 322, 325, 328, 330, 331, 332, 334, 335, 336, 338], "execution_context": [180, 318, 321], "executioncontext": [180, 321], "exemplari": 5, "exemplifi": [19, 74, 75, 318, 333], "exercis": 19, "exhibit": 338, "exist": [13, 19, 23, 30, 36, 41, 42, 43, 44, 99, 100, 110, 112, 118, 137, 171, 192, 198, 199, 235, 245, 247, 248, 255, 279, 280, 283, 284, 297, 298, 299, 301, 302, 303, 318, 320, 322, 323, 324, 325, 329, 330, 333, 334, 335], "existence_error": [108, 109, 110, 112, 118, 119, 165, 171, 175, 176, 179, 187, 189, 190, 198, 199, 205, 206, 216, 229, 230, 231, 232, 235, 237, 238, 241, 243, 244, 245, 247, 248, 264, 279, 280, 283, 284, 299, 301, 302, 303, 306, 310, 314, 333], "existenti": [20, 144, 171, 235, 333], "exit": [19, 24, 318, 322], "expand": [8, 19, 20, 23, 41, 42, 43, 56, 58, 67, 80, 81, 84, 105, 129, 137, 138, 144, 193, 194, 203, 239, 263, 281, 285, 318, 325, 327, 329, 332, 333, 335], "expand_go": [194, 195, 203, 205, 239, 323, 333], "expand_library_alias_path": [42, 43, 71], "expand_library_path": [23, 281], "expand_term": [193, 195, 203, 205, 239, 323, 333], "expandedgo": [193, 203], "expandedterm": 285, "expans": [8, 12, 19, 31, 41, 42, 43, 56, 67, 106, 113, 164, 193, 194, 203, 205, 239, 317, 325, 328, 331, 333, 335], "expansions_debug": 323, "expect": [5, 9, 10, 11, 14, 19, 20, 23, 24, 35, 41, 42, 43, 44, 60, 71, 73, 81, 83, 95, 97, 149, 243, 320, 322, 324, 325, 327, 329, 332, 333, 334, 335, 338], "expens": [12, 20], "experi": [0, 13, 23, 41, 159, 161, 317, 324, 331, 333], "experiment": [16, 20, 23, 42, 43, 63, 81, 82, 124, 209, 282, 333, 334, 338], "explain": [19, 23, 69, 326, 331, 333, 335], "explan": [20, 26], "explanatori": 105, "explicit": [19, 28, 161, 165, 169, 170, 171, 173, 174, 176, 182, 183, 198, 199, 200, 204, 213, 214, 218, 219, 220, 231, 232, 235, 285, 286, 287, 316, 317, 318, 323, 324, 329, 330, 331, 333, 335], "explicitli": [12, 13, 23, 34, 41, 60, 128, 159, 160, 252, 314, 317, 318, 323, 326, 329, 330, 331, 333, 335, 338], "explor": 23, "export": [13, 16, 23, 42, 43, 48, 82, 159, 329, 330, 333, 335], "expos": [12, 13, 19, 319, 329, 334], "exposi\u00e7\u00e3o": 0, "expr": 333, "express": [5, 19, 20, 41, 42, 43, 69, 131, 164, 173, 174, 190, 281, 318, 319, 321, 323, 324, 330, 331, 332, 334, 335], "extend": [0, 7, 9, 13, 14, 16, 19, 24, 27, 41, 42, 43, 44, 51, 56, 59, 69, 76, 88, 96, 97, 100, 105, 109, 113, 121, 123, 148, 153, 160, 162, 167, 254, 256, 257, 270, 271, 272, 286, 287, 317, 318, 320, 324, 326, 328, 329, 330, 331, 333, 334, 335, 336], "extended_categori": [123, 163], "extended_category_list": 163, "extended_category_sequ": 163, "extended_object": [148, 163], "extended_object_list": 163, "extended_object_sequ": 163, "extended_protocol": [153, 163], "extended_protocol_list": 163, "extended_protocol_sequ": 163, "extends_categori": [163, 245, 250, 254, 259, 266, 276, 285, 317], "extends_object": [163, 247, 256, 262, 266, 276, 277, 285, 290, 293, 331], "extends_protocol": [163, 248, 257, 263, 266, 276, 285, 291, 336], "extens": [9, 10, 13, 19, 20, 23, 24, 27, 56, 82, 97, 138, 148, 279, 280, 283, 284, 316, 317, 318, 320, 321, 322, 323, 326, 327, 329, 330, 331, 333, 334, 335, 336], "extern": [9, 13, 19, 41, 42, 43, 115, 164, 329, 333, 335], "external_cal": 163, "extra": [22, 23, 332], "extract": [5, 18, 98], "f": [0, 5, 19, 72, 82, 100, 101, 113, 318, 323, 329], "f2d19094dc4b": 101, "facilit": [19, 27, 324], "fact": [5, 10, 19, 23, 24, 41, 56, 58, 163, 215, 281, 318, 329, 331, 333, 335], "factbas": 138, "facto": [18, 19, 60, 99, 318, 324, 327, 329, 333, 334, 335], "factor": [31, 42, 43, 332, 333], "fahrenheit": 321, "fail": [4, 8, 16, 17, 23, 24, 26, 35, 41, 42, 43, 44, 50, 74, 75, 84, 88, 97, 109, 118, 119, 129, 137, 171, 178, 184, 197, 200, 204, 205, 207, 213, 223, 228, 235, 242, 279, 280, 283, 284, 286, 287, 294, 300, 301, 304, 305, 310, 318, 320, 322, 323, 328, 329, 330, 333, 334, 335, 338], "fails_if": 320, "failur": [5, 16, 19, 20, 24, 41, 42, 43, 59, 137, 200, 287, 288, 294, 295, 307, 309, 318, 320, 321, 322, 338], "fals": [10, 13, 19, 20, 23, 27, 41, 48, 51, 74, 75, 130, 184, 196, 205, 207, 213, 228, 242, 255, 287, 320, 333, 335], "famili": [5, 24, 318], "familiar": [26, 330, 333], "fan": 256, "faq": [33, 42, 43], "farm": 96, "fast": 100, "fast_random": [19, 88, 161], "faster": [13, 19, 45, 88, 333, 338], "fatal": 335, "fault": 13, "faur": 0, "favor": [327, 329], "favorit": [324, 327], "fcube": [42, 43, 104], "fd": 333, "fdp": 13, "feasibl": 19, "featur": [0, 13, 16, 19, 30, 34, 35, 42, 43, 97, 100, 113, 254, 256, 257, 317, 318, 320, 321, 323, 325, 327, 329, 330, 332, 333, 338], "februari": [0, 30, 324], "fed": 323, "feedback": [17, 23, 324], "femal": [24, 318], "ferm": 103, "ferrari": 103, "fescobar": 19, "fetch": [5, 300, 332, 338], "few": [25, 30, 60, 99, 320, 327, 329, 333, 335], "field": [51, 73, 96], "file": [1, 2, 3, 4, 6, 9, 11, 12, 14, 15, 16, 18, 22, 23, 25, 26, 27, 29, 30, 31, 32, 35, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 113, 126, 127, 128, 129, 131, 137, 138, 139, 142, 149, 155, 159, 160, 161, 162, 164, 192, 193, 194, 203, 206, 209, 216, 239, 244, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 314, 321, 324, 325, 328, 330, 332, 333, 337, 338], "file1": [39, 283, 318, 335], "file2": [39, 283, 318, 335], "file_exist": 335, "file_extens": 13, "file_label": 13, "file_lin": 8, "file_path": 19, "file_search_path": [23, 335], "file_system": [280, 284], "filecopyrighttext": 1, "filenam": [320, 327], "filter": [17, 19, 159, 333, 334], "final": [13, 18, 19, 22, 23, 31, 34, 42, 43, 320, 326, 330, 334, 335], "find": [5, 10, 12, 13, 15, 19, 41, 42, 43, 99, 100, 131, 171, 198, 199, 235, 304, 320, 321, 325, 326, 327, 329, 330, 335, 337, 338], "find_root": 338, "findal": [19, 20, 41, 144, 160, 162, 171, 200, 205, 235, 236, 330, 331, 333], "fine": [11, 13, 41, 180, 317, 323, 324, 333, 338], "finish": [15, 108, 317, 338], "finit": [5, 19, 44], "fiorentini": 103, "fiorino": 103, "firefox": [31, 42, 43], "firenz": 0, "first": [0, 5, 11, 12, 19, 20, 23, 26, 30, 32, 34, 36, 38, 41, 44, 51, 54, 63, 68, 73, 74, 75, 82, 84, 88, 91, 92, 96, 99, 109, 118, 119, 124, 131, 141, 144, 160, 169, 193, 194, 203, 218, 219, 233, 234, 240, 246, 264, 270, 271, 272, 277, 279, 280, 282, 283, 284, 287, 293, 307, 309, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338], "fit": [5, 68, 99, 324], "five": 333, "fix": [19, 20, 23, 26, 38, 41, 69, 91, 193, 203, 287, 321, 323, 330, 333, 334, 335], "fix_opt": 84, "fixed_point": 323, "fixpoint": 5, "flag": [2, 9, 10, 11, 12, 13, 16, 18, 19, 20, 23, 24, 25, 35, 41, 42, 43, 50, 55, 60, 68, 76, 80, 86, 95, 109, 110, 118, 131, 155, 158, 164, 166, 169, 170, 172, 187, 216, 221, 229, 255, 261, 276, 279, 280, 282, 283, 284, 285, 286, 287, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 317, 318, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338], "flag_opt": [187, 255], "flag_valu": [155, 163, 187, 255, 280, 284, 292], "flaki": [16, 17, 41, 42, 43], "flat": 23, "flatten": [100, 294, 332], "flavor": [0, 317], "flaw": [99, 329], "fletcher": 6, "flexibl": [27, 324], "fli": 326, "flightless": 326, "float": [19, 20, 44, 47, 48, 81, 88, 93, 163, 255, 321, 333], "float_overflow": 190, "flow": [9, 67, 318, 334], "flush": [222, 334], "flush_output": [333, 334], "fo": 18, "focu": [60, 319], "focus": 324, "fold": [13, 332], "fold_left": [79, 162, 333], "folder": [6, 14, 19, 22, 23, 32, 86, 103, 105, 106, 327, 335], "foldl": [162, 333], "follow": [5, 9, 10, 11, 13, 18, 19, 20, 22, 23, 24, 33, 45, 50, 51, 55, 56, 60, 68, 69, 74, 75, 81, 100, 103, 105, 110, 129, 130, 137, 149, 155, 171, 179, 187, 190, 192, 193, 194, 198, 206, 216, 229, 230, 237, 238, 243, 244, 285, 287, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 338], "foo": [8, 11, 12, 17, 19, 23, 24, 41, 44, 62, 68, 69, 74, 75, 84, 90, 97, 155, 159, 160, 161, 162, 169, 170, 180, 183, 220, 221, 223, 315, 317, 318, 321, 322, 326, 329, 331, 333, 334, 335, 336], "foo42": 23, "foo_1": 19, "foo_list_alert": 8, "foo_pack": 23, "foobar": [19, 169, 170], "footprint": 332, "fop": [18, 22], "foral": [19, 144, 171, 198, 199, 205, 235, 236, 297, 299, 330, 332, 333], "forc": [13, 15, 23, 56, 83, 127, 287, 312, 318, 322, 329], "ford": 318, "foreign": [163, 329, 332, 335], "forest": 100, "forget": [25, 333], "forgo": [319, 331], "form": [5, 19, 41, 56, 69, 84, 95, 163, 318, 320, 326, 332], "formal": [0, 23], "format": [12, 13, 16, 17, 18, 20, 22, 23, 42, 43, 46, 48, 63, 69, 71, 74, 75, 82, 103, 140, 141, 173, 174, 179, 187, 190, 192, 206, 216, 218, 219, 229, 230, 237, 238, 243, 244, 318, 321, 325, 327, 329, 333, 334, 335], "former": 19, "fornarino": 0, "fornarino_et_al_89": [0, 324], "fortun": 5, "forum": 327, "forward": [42, 43, 56, 73, 91, 112, 164, 205, 263, 287, 321, 329, 330, 333], "found": [2, 5, 16, 19, 22, 23, 26, 27, 38, 41, 44, 46, 49, 71, 73, 74, 75, 86, 99, 104, 109, 138, 159, 160, 163, 167, 221, 259, 262, 263, 279, 280, 283, 284, 307, 309, 317, 318, 320, 321, 323, 324, 326, 327, 329, 330, 331, 333, 334, 335, 338], "foundat": 4, "four": [24, 64, 318, 320, 332, 333], "fourth": 334, "fraction": 48, "fragil": [138, 335], "fragment": [15, 42, 43, 71, 320], "frame": [0, 324], "framework": [5, 19, 324], "francisco": 9, "franklin": 96, "free": [4, 5, 41, 59, 83, 151, 171, 235, 320, 321, 322, 333, 334, 338], "freeli": [36, 327, 331, 333, 335], "freez": 50, "frequenc": 44, "frequent": [19, 41, 329, 330], "fresh": 333, "friend": 330, "friendli": [4, 84], "from": [4, 5, 12, 13, 15, 16, 17, 18, 19, 20, 23, 24, 26, 27, 28, 32, 34, 41, 42, 43, 47, 50, 54, 55, 56, 59, 60, 68, 69, 73, 76, 82, 83, 84, 86, 88, 91, 92, 94, 95, 98, 99, 103, 105, 106, 108, 109, 113, 119, 124, 138, 142, 143, 149, 151, 152, 154, 155, 159, 160, 162, 163, 166, 169, 170, 172, 193, 194, 213, 240, 255, 256, 271, 279, 280, 282, 283, 284, 285, 300, 301, 302, 304, 305, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 338], "fromherz": 0, "fromherz93": [0, 324], "front": 87, "frozen": 50, "frustrat": 324, "ftp": 0, "fukunaga": 0, "fukunaga86": 0, "fulfil": 23, "full": [9, 10, 12, 13, 18, 23, 41, 56, 84, 97, 138, 285, 318, 320, 323, 324, 329, 331, 333, 334, 335, 337], "fulli": [9, 10, 20, 23, 60, 85, 110, 323, 335], "function": [9, 19, 20, 23, 28, 31, 41, 42, 43, 44, 52, 56, 112, 317, 319, 321, 323, 326, 328, 330, 332, 333, 335, 336, 338], "functor": [12, 25, 41, 73, 84, 112, 163, 165, 183, 194, 317, 329, 331, 333, 335], "fundament": [328, 330, 332, 333], "further": [13, 27, 41, 203, 239, 323, 330, 333], "furthermor": [312, 322, 324], "futur": [18, 82, 321, 333], "fuzz": 81, "fx": 333, "fy": [4, 149, 328], "g": [0, 9, 10, 12, 13, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 31, 32, 33, 41, 42, 43, 46, 56, 59, 63, 67, 68, 69, 78, 79, 84, 86, 97, 98, 100, 101, 103, 154, 157, 179, 213, 230, 281, 317, 318, 319, 320, 321, 323, 327, 329, 330, 331, 332, 333, 334, 335], "ga": 230, "gabriel": 0, "gain": 329, "galleri": 23, "ganti": 0, "gecko": [31, 42, 43], "gemini": 323, "gender": 312, "gener": [0, 5, 6, 8, 11, 13, 14, 15, 16, 17, 20, 22, 23, 25, 27, 31, 38, 39, 41, 42, 43, 46, 48, 59, 61, 62, 68, 70, 71, 74, 75, 81, 86, 88, 91, 95, 99, 100, 109, 124, 128, 131, 155, 160, 179, 187, 190, 192, 200, 206, 209, 210, 216, 229, 230, 237, 238, 243, 244, 254, 256, 257, 281, 287, 294, 296, 298, 306, 310, 312, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 329, 330, 331, 333, 334, 335, 336, 338], "genint": [42, 43, 71], "genint_cor": 61, "gensym": [42, 43, 71], "gensym_cor": 62, "geo": 138, "germani": 0, "get": [3, 5, 15, 19, 21, 23, 25, 26, 31, 42, 43, 63, 73, 84, 98, 101, 160, 161, 261, 301, 302, 312, 315, 328, 329, 330, 333, 335], "get_attribut": 312, "get_char": [19, 333], "get_char_1_01": 19, "get_char_1_02": 19, "get_char_2_01": 19, "get_char_2_02": 19, "get_se": [44, 81, 88], "gh": [17, 22], "git": [5, 13, 15, 17, 19, 22, 23, 42, 43, 71, 105], "gitforwindow": [22, 23], "github": [0, 5, 7, 9, 13, 17, 18, 19, 22, 23, 56, 91, 98, 99, 105], "gitlab": [13, 17, 18, 19, 23], "give": [19, 56, 73, 121, 160, 162, 318, 320, 323, 324, 326, 333, 334], "given": [10, 11, 13, 19, 22, 23, 24, 25, 34, 44, 51, 56, 60, 68, 70, 74, 75, 81, 82, 84, 88, 96, 97, 98, 138, 209, 210, 226, 282, 296, 298, 314, 318, 320, 321, 322, 323, 324, 329, 333, 334, 338], "glab": [17, 22], "glenn": 54, "global": [6, 12, 18, 19, 20, 22, 24, 41, 61, 62, 90, 142, 149, 154, 155, 292, 318, 322, 323, 324, 328, 330, 331, 332, 333, 335], "globalsz": 6, "glossari": [42, 43, 327, 330], "glue": 327, "gnome": 18, "gnu": [6, 12, 15, 17, 19, 23, 45, 60, 74, 75, 91, 333, 335], "gnupg": [22, 23], "gnupg2": [22, 23], "gnuprolog": 91, "go": [5, 19, 41, 180, 316, 318, 333, 335], "goal": [5, 8, 10, 12, 13, 14, 16, 20, 22, 23, 24, 26, 39, 41, 42, 43, 56, 67, 80, 86, 95, 108, 110, 113, 118, 124, 129, 130, 137, 142, 143, 144, 149, 158, 164, 167, 169, 170, 171, 173, 174, 175, 179, 187, 190, 192, 193, 198, 199, 200, 203, 204, 205, 213, 214, 215, 216, 218, 219, 229, 230, 233, 234, 235, 237, 238, 240, 243, 256, 282, 285, 294, 295, 298, 301, 305, 306, 307, 309, 310, 314, 315, 317, 318, 320, 322, 325, 328, 329, 330, 331, 332, 333, 334, 335], "goal_expans": [25, 27, 41, 67, 193, 194, 195, 205, 239, 285, 323, 329, 333, 336], "goal_thread": 192, "goldberg": 0, "goldberg83": [0, 317, 324], "good": [5, 13, 19, 20, 31, 42, 43, 54, 82, 322, 329, 330, 333, 335], "googl": 19, "gosl": 0, "gov": 0, "gpg": 23, "gpg_tty": 23, "gplgt": 335, "gplv3": 239, "gprolog": 23, "grain": [11, 13, 41, 317, 323, 324, 338], "grammar": [20, 24, 41, 42, 43, 71, 121, 126, 128, 141, 143, 147, 151, 152, 154, 157, 164, 173, 175, 194, 205, 217, 218, 219, 220, 250, 290, 291, 317, 318, 320, 325, 329, 331, 332, 334, 335, 338], "grammar_rul": [163, 333, 335], "grammar_rules_hook": 68, "grammarrulebodi": [217, 218, 219], "granular": [98, 101], "graph": [9, 16, 42, 43, 100, 160, 316, 331], "graph0": 160, "graphic": [12, 322], "graphviz": [13, 22], "great": 5, "greater": [215, 318], "greatest": 41, "greedi": [5, 100], "green": [92, 323, 331], "greet": 5, "grefenstett": 105, "gregori": 106, "ground": [19, 20, 41, 44, 54, 92, 97, 163, 255, 317, 320, 331, 333], "group": [11, 20, 64, 318, 323, 330, 333, 334, 335], "gsed": 22, "gspy": 12, "gtimeout": 19, "gtrace": 12, "guarante": 98, "guess": 51, "guess_ar": 51, "guess_separ": 51, "gui": [10, 19, 73, 334], "guid": [28, 29, 33, 335], "guidelin": [20, 42, 43, 103, 320, 325, 333], "guido": 103, "gyre": 22, "gz": 23, "h": [0, 18, 19, 23, 46, 48, 63, 74, 75, 98, 161, 318, 333], "h1": 323, "h2": 323, "ha": [5, 19, 23, 56, 142, 178, 198, 199, 208, 221, 223, 296, 315, 317, 320, 321, 322, 324, 326, 328, 329, 331, 332, 333, 334, 336], "had": [23, 330], "half": [13, 318], "hall": 0, "halstead": [16, 42, 43], "halstead_metr": 9, "hand": [13, 322, 324, 326, 333, 335], "handbook": [11, 12, 15, 18, 19, 22, 49, 86, 320, 327, 330], "handi": [281, 334], "handl": [0, 7, 13, 16, 19, 41, 42, 43, 44, 51, 53, 57, 59, 83, 90, 92, 96, 106, 110, 118, 164, 166, 172, 205, 276, 312, 317, 318, 320, 323, 325, 329, 334, 335, 338], "handler": [3, 13, 22, 24, 41, 57, 73, 112, 206, 244, 264, 315, 318, 321, 327, 336], "happen": [19, 38, 59, 317, 333, 334, 336, 338], "happi": [135, 338], "happy_birthdai": 338, "hard": [41, 173, 240], "harder": 333, "hardwar": [42, 43, 325], "harm": 23, "hash": [19, 23, 63, 317, 331, 336], "haskel": [19, 333], "have": [5, 12, 13, 15, 17, 19, 20, 22, 23, 24, 25, 27, 32, 41, 56, 69, 74, 75, 85, 99, 128, 130, 143, 144, 147, 149, 157, 167, 179, 225, 286, 287, 312, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 338], "head": [9, 17, 19, 26, 56, 69, 76, 87, 163, 169, 170, 176, 178, 180, 215, 231, 232, 233, 234, 240, 282, 314, 318, 329, 330, 331, 332, 333, 335], "header": [23, 51, 96], "headquart": 318, "heap": [19, 42, 43, 71, 161], "heavi": [215, 321, 333, 335], "heidelberg": 103, "height": [100, 119], "held": 83, "hello": [46, 48, 69, 74, 75, 113], "help": [5, 10, 16, 22, 27, 34, 41, 42, 43, 44, 68, 90, 99, 281, 318, 320, 323, 324, 327, 329, 332, 333, 334], "helper": [9, 13, 19, 76, 335], "henc": 36, "hendrick": 56, "here": [56, 163, 256, 314, 329, 330, 333, 334, 338], "heritag": 330, "hexadecim": 99, "hi": [5, 91], "hidden": [56, 326, 332], "hide": [41, 324, 329, 333, 335], "hierarchi": [31, 41, 42, 43, 71, 86, 97, 316, 317, 325, 331, 333, 335], "high": [42, 43, 254, 256, 257, 320, 325, 335, 338], "higher": 322, "highli": [324, 338], "highlight": [41, 327], "hint": 329, "hiros": 0, "histor": 334, "histori": [19, 23, 332], "hit": [317, 331, 336], "hitchhik": 334, "hitchhikers_fixed_answ": 334, "hitchhikers_guide_to_the_galaxi": 334, "hoc": [41, 329], "hold": [19, 23, 41, 44, 73, 83, 99, 147, 154, 326, 329, 333, 338], "holder": 5, "holland": 0, "home": [13, 17, 18, 19, 22, 23, 138, 281, 327, 335], "homebrew": [15, 23], "homoicon": [41, 319], "hook": [8, 9, 10, 12, 13, 14, 19, 20, 21, 23, 24, 25, 41, 42, 43, 56, 58, 67, 68, 73, 80, 81, 106, 124, 147, 164, 167, 178, 193, 194, 203, 205, 208, 209, 210, 211, 221, 222, 223, 225, 226, 239, 286, 287, 288, 317, 318, 325, 329, 330, 331, 332, 333, 334, 335, 336], "hook_flow": [19, 42, 43, 68, 71, 323, 329], "hook_object": [9, 10, 13, 19, 20, 24, 42, 43, 71, 318, 323], "hook_pipelin": [19, 67, 68, 323], "hook_set": [67, 323, 329], "hookobject": 67, "hope": 13, "host": [13, 19, 23, 41, 91], "hostnam": [17, 23], "hot": [19, 41, 42, 43, 76, 325], "hour": 98, "hovercraft": 256, "how": [5, 19, 20, 26, 27, 29, 31, 41, 42, 43, 50, 55, 60, 67, 99, 131, 169, 170, 173, 179, 320, 321, 323, 327, 329, 330, 332, 333, 335], "howev": [5, 8, 13, 17, 19, 22, 23, 24, 25, 36, 48, 73, 99, 169, 170, 171, 235, 286, 287, 314, 316, 317, 318, 319, 321, 322, 324, 326, 328, 329, 330, 331, 333, 334, 335, 338], "hr": 69, "htm": 86, "html": [0, 1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 26, 27, 31, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 320, 327], "html5": 69, "html5custom": 69, "http": [0, 5, 6, 7, 9, 13, 17, 18, 19, 22, 23, 45, 46, 48, 51, 56, 63, 74, 75, 86, 91, 96, 98, 99, 100, 101, 103, 105, 106], "human": 334, "hurt": 338, "hybrid": 83, "hypothesi": [124, 178], "hypothet": [19, 130], "i": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 35, 38, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 55, 56, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 75, 76, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 108, 109, 110, 112, 113, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 137, 138, 140, 141, 142, 143, 144, 147, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 183, 184, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 270, 271, 272, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "iana": [96, 131], "ic": 333, "icecream": 334, "icon": 13, "ics": 9, "id": [9, 10, 19, 42, 43, 71, 98, 101, 113, 281], "iddf": 5, "iddfs_interpret": 5, "idea": [13, 19, 20, 73, 316, 317, 319, 322, 324, 330, 333], "ideal": [9, 19, 23, 322, 331, 332, 334], "ident": 41, "identifi": [1, 19, 23, 41, 42, 43, 51, 70, 98, 99, 101, 110, 112, 113, 118, 128, 160, 162, 164, 215, 240, 245, 246, 247, 248, 250, 252, 253, 254, 256, 257, 259, 260, 262, 263, 264, 270, 271, 272, 274, 275, 277, 285, 290, 291, 293, 295, 296, 306, 309, 310, 317, 318, 320, 329, 330, 331, 333, 334, 335, 336], "identity_hook": [68, 323], "idiom": 333, "ie": 70, "iec": [0, 333], "ieee": [0, 9], "iff": [129, 130, 137, 213, 294, 306, 310, 320], "ignor": [9, 13, 19, 23, 30, 51, 73, 95, 171, 174, 200, 205, 212, 213, 214, 222, 235, 318, 326, 329, 332, 333, 334, 335], "ignorequot": 51, "illustr": [19, 23, 24, 105, 312, 314, 315, 333], "ilp": 105, "imagin": 5, "imit": 19, "immedi": [23, 295, 333, 338], "impact": [12, 332, 335], "imper": [78, 319, 330, 333], "imperi": 0, "implement": [0, 9, 10, 13, 15, 19, 23, 25, 31, 36, 38, 41, 42, 43, 44, 45, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 65, 66, 67, 68, 72, 73, 76, 78, 79, 80, 82, 83, 86, 87, 88, 90, 92, 94, 95, 97, 98, 99, 100, 101, 102, 106, 121, 123, 124, 148, 159, 160, 161, 162, 166, 167, 169, 170, 172, 188, 200, 201, 203, 215, 239, 240, 253, 254, 256, 257, 274, 287, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338], "implemented_protocol": [123, 148, 163], "implemented_protocol_list": 163, "implemented_protocol_sequ": 163, "implements_protocol": [68, 163, 248, 253, 257, 263, 266, 272, 276, 285, 291, 317, 331, 336], "impli": [5, 9, 41, 119, 317, 322, 324, 329, 333, 335, 338], "implicit": [13, 19, 41, 44, 50, 55, 60, 64, 109, 121, 173, 188, 215, 217, 218, 219, 233, 234, 240, 286, 287, 318, 329, 330, 333, 338], "implicitli": [17, 19, 24, 41, 157, 256, 318, 323, 324, 328, 329, 330, 331, 333, 338], "import": [9, 13, 34, 36, 41, 42, 43, 48, 61, 62, 66, 68, 76, 82, 84, 90, 109, 115, 119, 121, 148, 158, 159, 164, 240, 256, 275, 313, 318, 320, 324, 325, 326, 329, 330, 331, 333, 335, 338], "imported_categori": [148, 163], "imported_category_list": 163, "imported_category_sequ": 163, "imports_categori": [68, 163, 245, 250, 252, 254, 259, 266, 270, 276, 285, 317, 331], "impos": [322, 326], "improv": [34, 41, 99, 109, 118, 119, 142, 213, 314, 321, 322, 323, 324, 328, 329, 333, 335], "in_character_cod": 229, "inadvert": 281, "inappropri": 23, "incept": 36, "incident": 5, "includ": [5, 9, 10, 13, 18, 19, 20, 23, 24, 25, 27, 29, 30, 41, 51, 60, 70, 74, 75, 86, 88, 91, 97, 98, 99, 101, 103, 106, 113, 131, 136, 137, 139, 145, 146, 156, 158, 160, 162, 163, 179, 180, 183, 187, 190, 192, 216, 220, 229, 230, 243, 285, 286, 287, 317, 318, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "include_compiler_warn": [26, 335], "include_wrapped_fil": 27, "incompat": [23, 32, 82], "incomplet": [13, 26], "inconsist": [85, 88, 323], "incorrect": [243, 322], "increas": [23, 61, 99, 100], "increment": [5, 56, 324], "indefinit": 48, "indent": [69, 318, 333, 335], "independ": [9, 19, 23, 56, 67, 113, 157, 281, 305, 307, 322, 324, 327, 332, 333, 335, 338], "index": [0, 6, 9, 18, 19, 22, 23, 24, 34, 42, 86, 320, 322, 324, 327, 331, 332, 333, 335], "indianr": 13, "indic": [9, 15, 19, 24, 41, 48, 74, 75, 76, 108, 109, 112, 118, 119, 124, 128, 141, 165, 169, 170, 176, 183, 231, 232, 317, 318, 320, 329, 330, 331, 333, 334], "indigo": 92, "indirect": [5, 333], "indirectli": [10, 13, 41, 331], "individu": [9, 13, 19, 23, 38, 67, 86, 179, 294, 331, 332, 334, 335], "indivis": 322, "induct": 105, "ineffici": 24, "inevit": 331, "infer": [5, 13, 23, 24, 255, 332], "infin": 48, "infinit": [41, 178, 228, 323, 330], "infix": [41, 56, 314, 333], "inflict": 323, "influenc": [9, 330, 332], "info": [15, 18, 19, 22, 23, 56, 136, 139, 145, 146, 150, 163, 317, 320, 329, 331, 333, 336], "info_direct": 163, "inform": [5, 6, 9, 10, 11, 12, 13, 16, 18, 19, 24, 36, 41, 42, 43, 45, 51, 56, 59, 86, 91, 99, 103, 109, 110, 118, 145, 146, 210, 221, 317, 318, 320, 321, 322, 324, 327, 329, 330, 331, 332, 333, 334, 335, 336], "inher": [44, 321, 332], "inherit": [0, 9, 10, 13, 25, 27, 34, 41, 42, 43, 76, 109, 115, 119, 121, 152, 164, 193, 194, 312, 316, 317, 319, 325, 329, 330, 331, 333, 335, 338], "inheritance_diagram": 13, "inheritance_rel": 13, "init": [109, 142, 151, 152, 326, 331, 333, 335], "initi": [12, 14, 19, 23, 86, 88, 95, 130, 135, 136, 139, 148, 149, 155, 156, 163, 169, 170, 255, 256, 281, 285, 292, 323, 324, 326, 330, 333, 335], "initroutin": 329, "inlin": [15, 42, 43, 50, 55, 60, 69, 163, 180, 321, 325, 331, 333, 335], "inner": 330, "inproceed": [9, 103], "input": [16, 42, 43, 46, 56, 68, 74, 75, 149, 167, 188, 203, 206, 216, 218, 219, 226, 285, 318, 321, 333, 334, 338], "ins": [317, 327, 333], "insert": [54, 56, 82, 162], "insert_al": 162, "insid": [19, 41, 56, 106, 149, 312, 314, 318, 321, 324, 327, 328, 329, 330, 333, 335, 338], "insight": 337, "inspect": 333, "inspir": [19, 24, 36, 59, 86, 91, 317, 330, 335], "instabl": 9, "instal": [5, 15, 16, 17, 18, 19, 31, 42, 43, 73, 281, 314, 320, 325, 335], "instanc": [13, 36, 41, 42, 43, 148, 154, 256, 277, 281, 285, 314, 315, 316, 319, 320, 324, 325, 326, 330, 333, 335, 336], "instance_base_nam": 19, "instant": 277, "instanti": [9, 13, 19, 36, 41, 54, 68, 121, 145, 146, 148, 149, 160, 162, 171, 206, 215, 218, 219, 235, 256, 277, 316, 318, 320, 321, 322, 324, 326, 328, 330, 331, 333, 336], "instantiated_object": [148, 163], "instantiated_object_list": 163, "instantiated_object_sequ": 163, "instantiates_class": [163, 247, 256, 262, 266, 271, 276, 285, 290, 293, 331], "instantiation_error": [44, 109, 110, 112, 113, 118, 119, 155, 165, 169, 170, 171, 173, 174, 175, 176, 179, 187, 189, 190, 192, 198, 199, 200, 204, 205, 213, 214, 215, 216, 217, 218, 219, 220, 229, 230, 231, 232, 235, 237, 238, 241, 243, 244, 245, 247, 248, 254, 255, 256, 257, 264, 279, 280, 283, 284, 292, 294, 295, 296, 298, 299, 301, 302, 303, 306, 307, 309, 310, 320, 333], "instead": [8, 15, 18, 19, 20, 23, 25, 26, 30, 38, 41, 44, 46, 56, 68, 69, 73, 76, 98, 101, 105, 106, 129, 131, 137, 143, 160, 208, 225, 279, 280, 281, 285, 305, 307, 312, 317, 318, 319, 321, 324, 326, 329, 330, 331, 332, 333, 334, 335, 338], "instruct": [5, 15, 17, 18, 22, 29, 32, 35, 86, 327, 329, 333, 335], "instrument": [332, 335], "int": 256, "int_overflow": 190, "integ": [19, 44, 47, 48, 56, 61, 81, 88, 90, 93, 97, 98, 99, 143, 144, 149, 163, 165, 167, 180, 182, 183, 215, 254, 255, 256, 257, 282, 314, 320, 329, 333, 335], "integr": [0, 16, 19, 22, 28, 30, 31, 42, 43, 73, 86, 288, 318, 322, 325, 327, 335, 338], "intel": 105, "intellig": [0, 103], "intend": [13, 19, 20, 312, 318, 321, 322, 326, 327, 333, 335], "intent": 321, "interact": [19, 23, 318, 334], "intercept": [8, 10, 13, 19, 41, 42, 43, 208, 221, 222, 223, 225, 318, 325, 332, 335], "interchang": [82, 328, 330], "interest": [10, 329], "interf": 23, "interfac": [13, 23, 41, 42, 43, 73, 85, 314, 319, 322, 325, 328, 329, 330, 331, 333, 334, 335, 336, 338], "interfer": [19, 322, 333], "interior": 0, "interleav": 335, "intermedi": [18, 19, 30, 38, 39, 41, 131, 285, 287, 317, 318, 331, 332, 335, 336], "intermix": [41, 329], "intern": [0, 4, 9, 12, 13, 19, 25, 44, 56, 74, 84, 88, 285, 318, 322, 328, 329, 330, 331, 332, 333, 338], "internet": 330, "interoper": 330, "interpret": [5, 9, 12, 15, 16, 18, 19, 25, 31, 41, 42, 43, 67, 69, 76, 82, 105, 138, 144, 160, 162, 173, 175, 279, 280, 283, 284, 286, 287, 312, 315, 318, 322, 326, 328, 330, 331, 332, 333, 334, 335], "interrupt": [5, 95], "intersect": 92, "interv": [42, 43, 71, 88, 321, 338], "intervalp": 72, "intrins": 322, "introduc": [19, 56, 82, 97, 328, 330, 331, 332, 333, 334, 335], "introduct": [42, 43, 71, 324], "intuitionist": 103, "invalid": [18, 19, 34, 98, 253, 261, 270, 271, 272, 274, 275, 277, 280, 284, 292, 293, 317, 321, 335], "invent": [13, 320], "invis": [41, 333], "invoc": 318, "invocation_numb": 318, "invok": 25, "io": [0, 17, 19, 22, 48, 91, 94], "io_mod": [187, 333], "ioctl": 23, "ip": 64, "ip_grammar": 64, "irrelev": [334, 335], "irrespect": [41, 322, 324], "isbn": 103, "isn": 333, "iso": [0, 3, 30, 35, 38, 42, 43, 92, 99, 131, 163, 175, 184, 196, 197, 213, 228, 241, 242, 320, 321, 325, 327, 328, 329, 330, 333, 335], "iso8601": [2, 42, 43], "iso95": [0, 321, 324, 327, 333], "isol": [41, 324], "issn": 9, "issu": [2, 9, 10, 13, 16, 20, 26, 42, 43, 71, 92, 287, 318, 329, 333], "issue_cr": [16, 19, 22, 42, 43], "ital": 320, "itali": 0, "item": [19, 318], "iter": 5, "its": [0, 5, 9, 10, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 27, 36, 41, 44, 56, 59, 60, 64, 73, 76, 81, 83, 84, 86, 88, 99, 108, 113, 121, 127, 138, 147, 149, 159, 160, 174, 179, 187, 192, 201, 203, 204, 206, 214, 215, 216, 228, 233, 234, 239, 240, 243, 244, 255, 285, 286, 287, 294, 298, 306, 310, 316, 317, 318, 319, 320, 322, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338], "itself": [13, 18, 19, 23, 25, 36, 38, 41, 86, 203, 239, 280, 284, 312, 316, 318, 319, 322, 323, 326, 328, 329, 330, 331, 333, 334, 335, 338], "j": [0, 9, 98, 105, 318], "jack": 0, "jair": 105, "jame": 72, "jan": [19, 54, 105], "januari": [0, 30, 36, 98, 324], "jatechuk": 19, "java": [0, 42, 43, 71, 83, 324, 325], "java_hook": 73, "javadoc": 73, "jdoe": [17, 19, 22, 23, 335], "jdoe_awesome_pack": 23, "jdoe_awesome_packs_registri": 23, "jenkin": 19, "ji": 23, "jiprolog": [12, 23, 73, 88], "jiri": 54, "jni": 73, "joachim": 19, "job": 338, "joelbyt": 5, "john": [6, 23], "joi": 0, "join": 87, "join_al": 87, "joiner": 56, "joint": 0, "journal": [0, 9, 105], "joy_et_al_00": [0, 324], "jp": 131, "jpl": 73, "json": [42, 43, 71, 75, 82], "json_lin": [42, 43, 71], "jsonl": 75, "jsonlin": 75, "jtc": 0, "juli": [30, 324], "jump": [87, 318], "jump_al": 87, "june": 0, "junit": 19, "just": [5, 19, 27, 51, 69, 312, 314, 318, 319, 320, 321, 322, 326, 328, 329, 330, 333, 335], "jxvf": 327, "jyclsqo8zgucof1znpfdrvj03ww5qa9e0fxrb": 70, "k": [0, 9, 98], "k42": 76, "kahn": 0, "katholiek": 1, "keef": [54, 65, 86, 92, 99, 334], "keen": 0, "keep": [34, 51, 69, 96, 255, 329, 332, 333, 335, 338], "kei": [18, 19, 23, 48, 54, 69, 74, 75, 76, 82, 90, 126, 128, 140, 141, 142, 151, 281, 285, 318, 319, 320, 323, 324, 329, 330, 333, 334, 335], "kelvin": 321, "kept": [255, 327, 335], "key1": 320, "key2": 320, "keysort": 100, "keyword": [9, 109, 317, 318, 320, 326, 330, 336], "kiczal": 0, "kind": [13, 31, 42, 43, 78, 167, 208, 209, 210, 221, 225, 226, 312, 315, 318, 320, 322, 329, 331, 333, 334, 336], "kind_prefix_stream": 334, "kino": 45, "know": [5, 23, 41, 317, 324, 327, 329, 331, 332, 336], "knowledg": [0, 322, 324, 333, 335], "known": [2, 10, 13, 16, 41, 42, 43, 54, 71, 112, 314, 318, 326, 330, 331, 332, 333], "knuth": 0, "knuth84": 0, "kprolog": 45, "kruskal": 100, "l": [0, 3, 8, 19, 23, 48, 54, 56, 74, 75, 160, 161, 162, 178, 282, 314, 318, 324, 333], "l1": [282, 314], "l2": [282, 314], "label": [13, 17, 19, 333], "lack": [9, 10, 13, 19, 20, 24, 27, 38, 41, 142, 144, 287, 317, 318, 327, 329, 330, 333, 335], "lagerkvist": [5, 65], "lai": 335, "lambda": [20, 41, 42, 43, 69, 164, 173, 174, 318, 330, 332, 335], "lambda_express": 163, "lambda_free_vari": 163, "lambda_paramet": [163, 229], "lambda_vari": [333, 335], "lang": 69, "languag": [0, 5, 7, 9, 16, 19, 23, 30, 34, 41, 42, 43, 68, 78, 108, 112, 220, 250, 283, 286, 287, 290, 291, 319, 320, 322, 323, 324, 326, 328, 329, 330, 331, 333, 335, 336], "larg": [8, 13, 20, 23, 44, 51, 88, 90, 92, 96, 99, 254, 256, 257, 287, 318, 324, 327, 329, 334, 335, 338], "larger": [6, 9, 44, 332], "largest": 322, "last": [5, 13, 15, 23, 39, 170, 173, 286, 287, 305, 320, 333, 334, 335], "late": 41, "later": [5, 13, 15, 19, 23, 92, 317, 321, 332, 333, 335, 338], "latest": [5, 15, 17, 23, 25, 31, 42, 43, 63, 99], "latex": 22, "latexmk": 22, "latter": [73, 138, 334, 338], "layer": [0, 41, 73], "layout": 13, "lazili": [41, 338], "lead": [322, 329, 335, 338], "leaf": 154, "leak": 23, "leap": 318, "learn": [18, 42, 43, 68, 105, 325], "lease_car": 323, "leash": 318, "least": [23, 41, 100, 316, 331, 333], "leav": [5, 19, 24, 51, 154, 330, 333], "lectur": 0, "led": 324, "lee": 0, "left": [13, 20, 44, 56, 326, 332, 335, 338], "left_recurs": 335, "left_to_right": 13, "leftmost": [84, 335], "leftov": 23, "legaci": [90, 137, 329, 333], "len": 56, "length": [9, 48, 137, 160, 256, 314, 333], "length_atom": 333, "length_pair": 160, "lengthi": [105, 287, 324, 335, 338], "less": [10, 15, 19, 318, 320, 327, 334], "let": [5, 56, 312, 314], "leuven": 1, "level": [10, 12, 15, 18, 19, 20, 21, 23, 25, 41, 42, 43, 142, 254, 256, 257, 279, 280, 283, 284, 286, 287, 312, 314, 317, 320, 322, 325, 328, 329, 330, 331, 332, 333, 334, 335, 338], "lexicograph": 98, "lflat": 23, "lflat_pack": 23, "lgt": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 149, 279, 280, 281, 283, 284, 314, 317, 323, 327, 331, 335, 336], "lgt2html": [18, 23, 38, 320], "lgt2rst": [18, 320], "lgt2svg": 13, "lgt2xml": 38, "lgt3xxx": 327, "lgt_": 25, "lgt_prolog_meta_pred": 333, "lgt_prolog_term_expans": 329, "lgt_tmp": 335, "lgt_unicode_open_4_01": 19, "lgtdoc": [16, 20, 22, 23, 41, 42, 43, 320], "lgtdoc_invalid_d": 18, "lgtdoc_missing_direct": 18, "lgtdoc_missing_info_kei": 18, "lgtdoc_missing_punctu": 18, "lgtdoc_non_standard_except": 18, "lgtdocp": 18, "lgtenv": 23, "lgtunit": [8, 9, 16, 17, 20, 22, 42, 43, 44, 91, 162, 333, 334, 335], "lgtunit_messag": 19, "lgtuser": 335, "lgtxxxxxx": 335, "li": 69, "liabil": 5, "liabl": 5, "lib": [19, 329], "libarch": [22, 23], "librari": [1, 3, 4, 6, 9, 10, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 138, 192, 243, 279, 280, 281, 283, 284, 285, 287, 318, 320, 321, 323, 325, 329, 330, 332, 333, 334, 337], "library_index": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 23, 24, 26, 27, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106], "library_nam": 163, "library_source_file_nam": 163, "libxslt": [18, 22], "licens": [1, 4, 5, 6, 23, 31, 42, 43, 71, 106, 163, 239, 320, 324, 327], "lieberman": 0, "lieberman86": [0, 324], "lieu": 321, "life": 334, "light": 13, "lighter": [8, 126, 127, 128, 142, 144, 147], "lightsalmon": 13, "like": [5, 10, 20, 23, 24, 36, 41, 54, 56, 60, 79, 82, 312, 314, 321, 322, 323, 324, 327, 328, 329, 330, 331, 333, 335, 338], "likewis": [36, 326, 328], "limit": [4, 5, 9, 13, 15, 16, 20, 42, 43, 95, 130, 174, 229, 318, 321, 326, 328, 329, 335], "line": [9, 12, 13, 16, 19, 23, 26, 35, 41, 42, 43, 51, 68, 74, 75, 96, 131, 138, 163, 209, 210, 221, 282, 285, 317, 318, 327, 331, 332, 333, 334, 335, 336], "line_count": [12, 138, 163, 317, 331, 336], "linear": [0, 9], "linearli": 9, "link": [1, 3, 4, 6, 11, 16, 18, 19, 21, 23, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 320, 331, 333, 335, 338], "linkout": 9, "link\u00f6p": 5, "lint": [16, 23, 27, 42, 43, 155, 321], "linter": [16, 19, 22, 42, 43, 60, 113, 164, 276, 282, 325, 329, 332, 333], "linux": [15, 19, 23, 70, 98, 101, 327], "lisboa": 0, "lisp": 0, "list": [5, 9, 10, 13, 18, 19, 20, 22, 23, 25, 27, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 56, 59, 60, 64, 67, 69, 70, 71, 74, 75, 81, 82, 83, 84, 86, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 110, 112, 118, 121, 137, 140, 141, 145, 146, 148, 160, 162, 163, 169, 170, 171, 179, 183, 188, 194, 198, 199, 208, 209, 210, 211, 218, 219, 220, 221, 222, 223, 225, 235, 239, 246, 247, 250, 254, 255, 256, 257, 264, 271, 274, 279, 280, 282, 283, 284, 285, 287, 290, 291, 298, 308, 311, 313, 317, 318, 320, 321, 323, 326, 327, 329, 330, 331, 333, 334, 335, 336, 338], "list_memb": [121, 333], "listofpair": 333, "listp": [47, 86, 148, 153, 248, 253, 272, 274, 279, 283, 314, 336], "listp_lgt": 336, "liter": [0, 9], "live": [126, 128], "llc": 99, "ller": 103, "llg": 19, "lo": 9, "load": [2, 5, 16, 20, 21, 31, 34, 41, 42, 43, 71, 99, 104, 122, 129, 137, 142, 147, 149, 152, 154, 158, 159, 160, 161, 162, 164, 276, 279, 280, 281, 283, 284, 285, 286, 287, 292, 312, 314, 315, 318, 321, 322, 324, 325, 326, 328, 330, 332, 333, 334, 337], "load_foreign_fil": 329, "load_foreign_resourc": 113, "loader": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 38, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 160, 280, 281, 284, 318, 320, 323, 325, 327, 329, 330, 333], "loader_debug": 19, "local": [9, 10, 13, 16, 20, 23, 26, 32, 41, 42, 43, 61, 62, 63, 67, 88, 90, 110, 124, 128, 149, 155, 159, 161, 165, 169, 170, 176, 182, 183, 193, 194, 218, 219, 220, 292, 317, 318, 323, 325, 327, 328, 329, 330, 331, 333, 334, 335], "localhost": 91, "locat": [9, 13, 19, 23, 32, 281, 318, 326, 327, 329, 330, 335], "lock": 338, "log": [19, 22, 42, 43, 63, 71, 123, 137, 142, 166, 172, 252, 257, 317, 325, 334, 338], "log2": 9, "log_fil": 257, "log_off": 257, "log_on": 257, "logic": [0, 5, 41, 42, 43, 45, 103, 105, 164, 205, 319, 320, 325, 326, 330, 331, 332, 335], "logical_assign": 45, "login": [17, 19], "logtak_load": 99, "logtalk": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 31, 37, 39, 41, 44, 46, 49, 53, 54, 56, 58, 63, 65, 68, 73, 83, 86, 91, 94, 97, 99, 103, 105, 106, 109, 113, 128, 130, 131, 138, 142, 144, 149, 158, 160, 162, 163, 167, 174, 180, 194, 208, 209, 210, 211, 213, 220, 221, 222, 223, 225, 226, 254, 255, 256, 257, 261, 262, 279, 280, 281, 283, 284, 285, 286, 287, 290, 312, 314, 316, 317, 318, 319, 320, 322, 323, 325, 326, 328, 330, 332, 333, 334, 336, 337, 338], "logtalk3": [13, 19, 63], "logtalk_allure_report": 19, "logtalk_compil": [38, 68, 251, 276, 281, 283, 284, 286, 287, 323, 329, 335], "logtalk_doclet": [13, 14], "logtalk_ent": 320, "logtalk_extens": 27, "logtalk_hom": 281, "logtalk_library_path": [23, 41, 58, 251, 276, 279, 280, 283, 284, 285, 335], "logtalk_linter_hook": [20, 276, 278], "logtalk_load": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 38, 39, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 251, 276, 279, 280, 281, 286, 287, 314, 318, 323, 329, 330, 335], "logtalk_load_context": [23, 142, 203, 239, 251, 276, 281, 323, 329], "logtalk_load_context_kei": 285, "logtalk_mak": [10, 19, 21, 39, 41, 138, 251, 276, 279, 280, 281, 283, 284, 288, 318, 332, 335], "logtalk_make_0": 21, "logtalk_make_1": 21, "logtalk_make_target_act": [14, 19, 251, 276, 286, 287], "logtalk_make_target_action_1": 21, "logtalk_pack": [23, 281], "logtalk_startup_directori": 335, "logtalk_test": [15, 17, 19, 23, 86], "logtalk_typ": 163, "logtalk_us": 281, "logtalk_user_setup": 32, "logtalk_version_select": 7, "logtalkdotorg": [7, 13, 19, 23], "logtalkhom": [13, 19, 23, 32, 281, 327], "logtalkpack": 23, "logtalkus": [13, 19, 23, 32, 281, 327, 335], "london": 0, "long": [5, 19, 35, 56, 67, 159, 160, 161, 162, 254, 256, 257, 317, 320, 323, 326, 329, 331, 333], "longer": [23, 24, 238, 318, 322, 333, 338], "look": [5, 10, 19, 26, 138, 160, 162, 320, 326, 329, 333, 335], "lookahead": 333, "lookup": [34, 41, 54, 82, 109, 118, 119, 316, 317, 319, 324, 328, 330, 333], "lookup_in": 82, "loomi": 0, "loop": [5, 20, 42, 43, 71, 167, 200, 203, 281, 288, 316, 318, 322, 323, 330, 331, 333, 334, 338], "loos": [89, 318], "loss": [5, 19], "lot": [317, 331, 336], "low": [101, 318, 331, 332, 335, 338], "lower": [23, 98, 99, 321], "lstart": 56, "ludemann": 56, "m": [0, 22, 81, 98, 318, 320, 333, 338], "m1": 318, "machin": [23, 34, 332, 334], "maco": [15, 19, 23, 70, 73, 91, 98, 101, 327], "macport": [15, 23], "macvim": 13, "made": [5, 13, 15, 18, 19, 23, 32, 50, 55, 60, 69, 74, 75, 76, 95, 99, 105, 109, 130, 158, 160, 162, 279, 280, 283, 284, 286, 287, 308, 311, 312, 317, 322, 330, 331, 333, 335, 338], "mae": 0, "maes87": [0, 316, 324], "magic": 5, "mai": [0, 6, 9, 10, 12, 13, 17, 18, 19, 20, 23, 24, 25, 28, 32, 35, 36, 38, 41, 44, 56, 63, 68, 69, 73, 75, 83, 85, 91, 99, 109, 110, 119, 121, 138, 143, 160, 162, 169, 170, 173, 174, 176, 194, 203, 218, 219, 231, 232, 239, 254, 256, 257, 281, 283, 284, 286, 287, 308, 311, 312, 314, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338], "main": [16, 22, 23, 41, 42, 43, 51, 63, 73, 76, 78, 79, 80, 96, 131, 138, 286, 287, 325, 329, 330, 331, 333, 334, 335], "main_include_compiler_warn": [26, 335], "mainli": [22, 41, 58, 112, 113, 180, 324, 333], "maintain": [9, 41, 333], "mainten": [19, 23, 215, 324, 326, 331, 333], "major": [5, 23, 320, 327, 333, 335], "majumdar": 99, "make": [13, 16, 18, 19, 20, 22, 23, 31, 32, 41, 42, 43, 57, 60, 61, 62, 73, 76, 88, 90, 100, 108, 109, 119, 126, 128, 142, 144, 147, 154, 157, 166, 172, 173, 200, 201, 215, 233, 234, 240, 287, 304, 311, 317, 318, 320, 321, 322, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336], "make_directori": 335, "make_sound": [108, 317], "male": 312, "man": [14, 15, 17, 18, 19, 327], "manag": [0, 7, 13, 15, 19, 20, 23, 84, 88, 331, 335, 338], "mandat": 329, "mandatori": 333, "mani": [9, 36, 56, 60, 178, 331], "manifest": 23, "mantad": 1, "manual": [0, 11, 12, 15, 17, 18, 19, 22, 23, 27, 32, 34, 42, 43, 56, 105, 109, 118, 119, 155, 193, 194, 220, 250, 255, 261, 280, 284, 290, 291, 292, 314, 321, 323, 327, 330, 334, 335], "map": [48, 54, 79, 91, 320, 324, 330, 333], "map_": 333, "map_list_to_pair": 160, "maplist": 144, "mar": 318, "marin": 13, "mark": [18, 320], "markdown": [17, 18, 320], "marku": 333, "markup": 320, "martin": 9, "marvin": 318, "mask": [19, 333], "master": [19, 63, 334], "match": [20, 26, 35, 76, 118, 119, 130, 135, 169, 170, 176, 188, 231, 232, 246, 314, 317, 318, 321, 322, 324, 327, 328, 331, 335, 336, 338], "materi": [5, 101, 319], "mathemat": 330, "matter": 333, "mauro": 103, "max_ar": 229, "max_depth": 318, "max_integ": 229, "max_siz": 44, "maxim": [9, 88, 336], "maximum": [4, 19, 44, 65, 229, 318], "mayb": [83, 327], "mccabe": [0, 9], "mccabe92": [0, 324, 326], "md": [2, 14, 15, 16, 18, 19, 22, 23, 32, 71, 86, 104, 327], "me": [23, 138, 327], "mean": [5, 9, 19, 23, 112, 317, 319, 320, 322, 327, 330, 331, 332, 333, 336], "meaning": [41, 44, 97, 160, 162, 317, 333], "meant": [9, 320, 321, 329, 330], "meantim": 333, "measur": [9, 322, 332], "mechan": [8, 12, 19, 30, 34, 38, 41, 42, 43, 53, 106, 109, 113, 118, 119, 315, 317, 321, 322, 323, 325, 326, 328, 332, 333, 334, 335, 337, 338], "media": 96, "melbourn": 0, "mellish": 0, "member": [15, 19, 92, 110, 118, 121, 160, 162, 178, 179, 213, 264, 298, 305, 314, 330, 333, 338], "memori": [16, 42, 43, 51, 96, 142, 230, 279, 280, 283, 284, 330, 331, 335], "memory0": 19, "memory1": 19, "memory_us": 19, "mention": [330, 335], "menu": 335, "merchant": 5, "merg": [17, 100, 162, 320], "merge_opt": 84, "mermaid": 13, "messag": [5, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 25, 26, 31, 32, 36, 38, 41, 42, 43, 50, 55, 60, 64, 67, 69, 73, 112, 113, 115, 118, 119, 121, 142, 155, 158, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 179, 184, 187, 190, 192, 196, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 213, 214, 216, 218, 219, 221, 222, 223, 228, 229, 230, 233, 234, 235, 237, 238, 241, 242, 243, 244, 246, 260, 264, 282, 287, 294, 295, 298, 306, 307, 309, 310, 312, 313, 314, 316, 317, 319, 322, 323, 324, 325, 326, 329, 330, 331, 333, 335, 336, 337, 338], "message1": 328, "message2": 328, "message_deleg": 163, "message_hook": [8, 19, 167, 205, 209, 210, 211, 221, 222, 223, 224, 225, 226, 334], "message_prefix_fil": [205, 210, 224, 334], "message_prefix_stream": [8, 167, 205, 208, 209, 211, 221, 222, 223, 224, 225, 226, 318, 334], "message_send": 163, "message_sending_go": 187, "message_to_object": 163, "message_to_self": 163, "message_token": [15, 167, 205, 208, 209, 210, 221, 222, 223, 224, 225, 226, 318, 334], "met": 5, "meta": [5, 8, 10, 13, 19, 20, 25, 27, 31, 36, 41, 42, 43, 44, 71, 80, 95, 97, 105, 109, 110, 112, 118, 119, 143, 144, 157, 160, 162, 164, 175, 179, 193, 205, 316, 321, 323, 325, 328, 329, 330, 335], "meta_argument_specifi": 187, "meta_compil": [13, 42, 43, 71, 79, 332], "meta_directive_templ": 187, "meta_non_termin": [10, 139, 144, 150, 163, 317, 331, 333], "meta_non_terminal_direct": 163, "meta_non_terminal_template_term": [143, 163], "meta_pred": [10, 139, 143, 150, 163, 179, 317, 320, 329, 331, 333, 335], "meta_predicate_direct": 163, "meta_predicate_specifi": 163, "meta_predicate_templ": 163, "meta_predicate_template_list": 163, "meta_predicate_template_sequ": 163, "meta_predicate_template_term": [144, 163], "meta_typ": 97, "metacall_context": 318, "metaclass": [0, 13, 41, 148, 317, 319, 330, 331, 336], "metagol": [42, 43, 104], "metapred": 79, "metapredicates_compil": 80, "meter": 239, "method": [0, 5, 20, 34, 36, 41, 42, 43, 51, 73, 97, 108, 109, 118, 119, 143, 144, 151, 160, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 254, 256, 257, 264, 285, 312, 316, 317, 320, 322, 323, 324, 325, 328, 329, 330, 331, 334, 335, 337, 338], "methodologi": 335, "metric": [16, 42, 43, 332, 335], "michael": 56, "michiel": 0, "mickei": 256, "microsoft": [9, 23, 327], "might": [5, 32, 318, 321, 326, 335], "migrat": [28, 30, 42, 43, 90, 325], "mill": 0, "millimet": 239, "millisecond": [19, 98, 101], "mime": 131, "mimic": 23, "min_integ": 229, "mind": 338, "minim": [16, 27, 41, 42, 43, 60, 61, 62, 64, 69, 73, 90, 123, 124, 318, 322, 324, 332, 333, 335, 336], "minimal_output": 19, "minimum": [65, 100, 322, 333], "minor": [320, 335], "minut": [98, 327], "misc": [22, 23], "misinterpret": 338, "mislead": [19, 329, 332], "mismatch": 23, "miss": [10, 13, 18, 20, 23, 27, 39, 51, 60, 99, 144, 287, 317, 327, 329, 330, 333, 335], "missing_direct": [329, 335], "misspel": 335, "mistak": 335, "misunderstand": 322, "misus": [20, 321, 335], "mit": 23, "mix": [20, 31, 41, 42, 43, 160, 317, 331, 335, 338], "mixin": 324, "mm": 19, "mndrix": 56, "mock": [16, 41, 42, 43], "mock_login": 19, "mod": [19, 44, 318], "mode": [9, 10, 11, 18, 19, 24, 34, 42, 43, 86, 139, 150, 163, 312, 314, 315, 320, 321, 323, 325, 326, 329, 331, 334, 335], "mode_direct": 163, "mode_non_termin": [139, 145, 150, 163, 333], "mode_non_terminal_direct": 163, "mode_term": 163, "model": [0, 13, 24, 42, 43, 83, 322, 325, 326, 332], "modern": [324, 327, 332, 333, 335, 338], "modif": [5, 106, 317, 319, 320, 322, 335, 338], "modifi": [3, 4, 5, 23, 24, 27, 39, 56, 68, 138, 155, 165, 169, 170, 216, 231, 232, 245, 247, 248, 254, 255, 256, 257, 280, 284, 286, 287, 292, 317, 321, 322, 323, 324, 327, 329, 333, 335], "modul": [16, 19, 22, 23, 25, 31, 36, 41, 42, 43, 67, 89, 121, 126, 128, 143, 144, 147, 159, 160, 165, 169, 170, 173, 174, 176, 183, 192, 218, 219, 220, 231, 232, 282, 285, 287, 317, 323, 324, 325, 327, 330, 331, 335], "modular": 9, "module_alia": 163, "module_alias_list": [159, 163], "module_alias_sequ": 163, "module_identifi": [143, 144, 160, 163], "module_non_terminal_indicator_alias_list": 160, "module_predicate_indicator_alias_list": 160, "modulo": 318, "moment": [322, 324], "mon": 105, "monitor": [41, 42, 43, 57, 123, 166, 172, 245, 246, 257, 260, 263, 264, 291, 313, 323, 324, 325, 331, 333], "monitoringp": 123, "monospac": 320, "monoton": 98, "month": [98, 142, 320], "moon": 0, "moon86": [0, 317, 322], "moor": 9, "moores199845": 9, "moot": 319, "more": [5, 9, 13, 18, 19, 20, 23, 24, 27, 34, 36, 41, 44, 45, 56, 57, 61, 62, 69, 84, 90, 99, 103, 109, 121, 160, 161, 162, 287, 301, 306, 310, 312, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "moreov": [17, 19, 23, 30, 34, 203, 239, 317, 318, 329, 330, 331, 333, 338], "morticia": 318, "mortim": 256, "moss": 0, "moss94": [0, 326], "most": [5, 13, 15, 17, 19, 20, 23, 30, 31, 39, 42, 43, 44, 56, 60, 67, 86, 92, 97, 98, 99, 131, 145, 146, 157, 194, 215, 218, 219, 233, 234, 240, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338], "mostli": [99, 334], "motiv": 324, "moura": [0, 1, 5, 23, 54, 63, 65, 99, 140, 256, 320, 334], "moura00": 0, "moura94": [0, 316, 322, 331], "moura99": 0, "mous": 256, "move": [19, 327], "msort": 333, "much": [5, 9, 13, 19, 335], "muller": 338, "multi": [19, 34, 41, 42, 43, 61, 62, 88, 94, 157, 158, 164, 254, 256, 257, 276, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 325, 326, 330, 333], "multifil": [8, 9, 13, 19, 20, 23, 41, 42, 43, 44, 56, 97, 128, 139, 150, 163, 208, 209, 210, 211, 222, 225, 226, 281, 282, 286, 287, 288, 317, 318, 321, 322, 323, 325, 330, 331, 332, 334, 335, 337], "multifile_direct": 163, "multilingu": 335, "multiparadigm": 0, "multipl": [0, 13, 15, 16, 17, 19, 20, 39, 41, 42, 43, 44, 67, 81, 84, 88, 113, 142, 159, 161, 162, 315, 319, 320, 322, 323, 325, 329, 330, 331, 332, 333, 334, 335, 338], "must": [5, 10, 12, 13, 15, 17, 18, 19, 22, 23, 24, 25, 27, 29, 32, 41, 44, 51, 54, 56, 60, 64, 67, 74, 75, 76, 84, 88, 90, 92, 96, 97, 98, 108, 118, 122, 124, 131, 138, 142, 147, 157, 158, 160, 162, 179, 203, 215, 254, 256, 264, 281, 282, 308, 311, 312, 314, 315, 316, 317, 318, 320, 322, 323, 326, 328, 329, 330, 331, 333, 334, 335, 336, 338], "mutabl": [0, 319, 329, 330, 333], "mutat": [42, 43, 44, 71], "mutations_stor": 81, "mutex": [41, 157, 330, 333, 338], "mutual": 287, "mvim": 13, "my": [18, 19, 31, 42, 43, 324, 333], "my_app": [10, 18, 19, 142, 162, 167, 225, 285, 334], "my_application_root": 281, "my_awesome_librari": 23, "my_buggy_cod": 12, "my_car": 323, "my_data_structur": 333, "my_debug_handl": 318, "my_expans": 323, "my_log_fil": 8, "my_pack": 23, "my_pack_collect": 23, "my_project": 19, "my_random_generator_1": 88, "my_source_fil": [24, 58, 80], "my_stream": 244, "my_terse_logtalk_startup_set": 334, "my_test_id": 19, "my_typ": 97, "my_venv": 23, "my_verbose_logtalk_message_set": 334, "mystikninja": 105, "n": [0, 8, 19, 41, 51, 56, 63, 70, 75, 113, 135, 142, 143, 144, 180, 186, 188, 204, 205, 212, 213, 214, 217, 218, 219, 287, 318, 332, 333, 334, 335, 338], "n1": [92, 113, 338], "n2": [92, 113, 338], "naish": 0, "naiv": 5, "nake": [20, 41, 217], "name": [5, 8, 9, 10, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 27, 36, 41, 42, 43, 44, 51, 56, 61, 62, 63, 67, 68, 69, 84, 86, 96, 99, 103, 108, 109, 112, 118, 119, 121, 124, 126, 128, 131, 138, 141, 147, 151, 152, 154, 157, 159, 160, 161, 162, 164, 165, 169, 170, 176, 183, 231, 232, 243, 256, 279, 280, 281, 283, 284, 285, 297, 298, 299, 301, 302, 303, 304, 312, 314, 315, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 334, 336, 338], "name1": [285, 333], "name2": 333, "namespac": [41, 318, 324, 330, 331, 334, 336], "nanosecond": [19, 101], "narrow": 333, "nativ": [60, 76, 88, 323, 330, 332], "natur": [5, 319, 322, 324, 330, 333, 335], "naur": 163, "navig": [13, 15, 69, 320], "navltre": 82, "nbintre": 82, "nd_assignvar": 45, "ndash": 38, "neato": 13, "necessari": [17, 19, 23, 25, 34, 41, 51, 56, 59, 64, 83, 110, 127, 128, 137, 144, 157, 314, 317, 318, 321, 322, 329, 330, 333, 334, 335], "necessarili": [34, 41, 119, 145, 146, 317, 324, 328, 330, 331, 332, 333, 335], "neck": 56, "need": [5, 6, 12, 13, 15, 19, 22, 23, 24, 25, 31, 32, 34, 35, 36, 41, 42, 43, 56, 57, 68, 69, 99, 110, 254, 256, 257, 312, 314, 315, 317, 318, 320, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 334, 335, 336, 338], "needless": 314, "neg": [9, 19, 48, 90, 183, 333], "negat": [5, 318, 332], "negative_float": 19, "negative_infin": 48, "negative_zero": 48, "neglig": [5, 332], "neighbor": 329, "neither": [23, 109, 110, 112, 113, 118, 119, 155, 165, 169, 170, 171, 173, 174, 176, 182, 183, 198, 199, 200, 204, 213, 214, 215, 217, 218, 219, 220, 231, 232, 235, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 270, 271, 272, 274, 275, 277, 279, 280, 283, 284, 285, 290, 291, 292, 293, 294, 295, 298, 299, 301, 302, 303, 306, 307, 309, 310, 318, 320, 332, 333, 335], "neo4j": 73, "neruda": 5, "nest": [82, 137, 318, 330], "nested_dictionari": [42, 43, 71], "net": [18, 19, 103], "network": [19, 23], "never": [23, 24, 44, 69, 171, 203, 235, 239, 286, 287, 320, 322, 323, 329, 330, 331, 333, 335, 338], "nevertheless": [30, 322, 329, 330, 338], "new": [0, 5, 16, 19, 22, 23, 26, 32, 41, 42, 43, 54, 68, 69, 71, 82, 87, 92, 100, 108, 162, 164, 169, 170, 209, 210, 245, 247, 248, 254, 255, 256, 257, 264, 276, 295, 298, 306, 307, 309, 310, 312, 314, 318, 321, 324, 325, 326, 327, 328, 330, 333, 335, 338], "new_btre": [162, 333], "new_lin": 64, "new_queu": [162, 333], "newdepth": 44, "newer": 23, "newest": 23, "newlin": 318, "newslett": 0, "newton": 338, "next": [5, 8, 19, 23, 27, 30, 67, 155, 231, 301, 302, 318, 320, 321, 323, 326, 327, 329, 333, 334, 335, 337, 338], "nice": 69, "nl": [63, 108, 113, 149, 166, 172, 203, 209, 210, 211, 223, 233, 234, 240, 297, 315, 317, 322, 323, 326, 333, 334], "nla": 0, "no_auto_bug_report": 17, "nobukuni": 45, "noc_metr": 9, "node": [5, 9, 13, 15, 44, 100], "node_type_capt": 13, "nodebug": 318, "noisi": 105, "nolog": 318, "nologal": 318, "nomenclatur": [42, 43, 325, 328], "non": [10, 12, 13, 15, 16, 17, 18, 20, 23, 24, 31, 35, 41, 42, 43, 45, 51, 69, 76, 90, 92, 97, 100, 121, 124, 126, 128, 141, 142, 143, 144, 146, 147, 151, 152, 154, 157, 160, 162, 163, 171, 179, 188, 198, 199, 206, 211, 214, 218, 219, 221, 235, 243, 286, 287, 306, 314, 317, 318, 320, 321, 323, 329, 330, 331, 332, 334, 335, 336, 338], "non_empty_list": [8, 187], "non_negative_integ": [97, 163], "non_prototype_rel": 163, "non_termin": [163, 192, 216, 317, 331, 333, 336], "non_terminal_ind": [141, 163], "non_terminal_indicator_alia": [121, 163], "non_terminal_indicator_alias_list": 162, "non_terminal_indicator_list": [160, 162], "non_terminal_indicator_term": [124, 126, 151, 152, 154, 157], "non_terminal_mode_term": [145, 146, 163], "none": [23, 99, 166, 167, 172, 175, 178, 180, 184, 188, 193, 194, 196, 197, 201, 203, 208, 209, 210, 211, 217, 221, 222, 223, 225, 226, 228, 233, 234, 237, 238, 239, 240, 241, 242, 281, 282, 286, 287, 288, 296, 297, 300, 304, 305, 308, 311, 318, 338], "nontermin": [218, 219, 317, 331, 333, 336], "nonvar": [155, 163, 167, 179, 187, 190, 192, 208, 209, 210, 211, 216, 221, 222, 223, 225, 226, 230, 237, 239, 241, 243, 244, 282, 285, 292, 295, 296, 297, 298, 299, 301, 302, 303, 304, 306, 309, 310, 312, 333], "nor": [23, 109, 110, 112, 113, 118, 119, 155, 165, 169, 170, 171, 173, 174, 176, 182, 183, 198, 199, 200, 204, 213, 214, 215, 217, 218, 219, 220, 231, 232, 235, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 270, 271, 272, 274, 275, 277, 279, 280, 283, 284, 285, 290, 291, 292, 293, 294, 295, 298, 299, 301, 302, 303, 306, 307, 309, 310, 318, 320, 332, 333], "nor_metr": 9, "normal": [11, 13, 44, 69, 143, 144, 287, 318, 326, 327, 329, 331, 332, 333, 335], "normal_el": 69, "north": 0, "nospi": 318, "nospyal": 318, "not_a_numb": 48, "not_less_than_zero": [183, 187], "not_yet_readi": 19, "notabl": [13, 18, 23, 34, 41, 44, 56, 60, 74, 85, 88, 103, 280, 284, 319, 322, 323, 329, 330, 332, 333, 334, 335], "notat": [19, 22, 23, 41, 56, 86, 99, 121, 138, 160, 162, 279, 280, 281, 283, 284, 318, 320, 329, 331, 333, 335], "note": [0, 2, 9, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 32, 41, 42, 43, 52, 54, 67, 68, 69, 71, 76, 80, 82, 84, 88, 92, 97, 98, 104, 112, 128, 142, 157, 159, 160, 166, 169, 170, 171, 172, 173, 201, 213, 235, 254, 256, 257, 279, 280, 283, 284, 285, 305, 315, 316, 317, 318, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338], "noth": 334, "notic": [0, 5, 12, 19, 74, 75, 81, 86, 90, 320, 327, 333, 335], "notif": [42, 43, 158, 308, 311, 325], "notifi": [41, 322], "notion": [322, 330], "notori": [13, 19], "notrac": 318, "noun": [141, 333], "noun_phras": 333, "now": [19, 161, 312, 314, 315, 322, 334], "npmj": 19, "nrbtree": 82, "nu": 106, "null": [19, 42, 43, 44, 48, 71, 74, 75, 332], "number": [8, 9, 12, 13, 19, 20, 24, 25, 31, 35, 41, 42, 43, 47, 51, 54, 64, 70, 73, 76, 81, 82, 88, 90, 93, 98, 99, 100, 101, 105, 138, 143, 144, 145, 146, 163, 314, 315, 317, 318, 320, 322, 324, 327, 329, 330, 331, 332, 333, 334, 335, 336, 338], "number1": 19, "number2": 19, "number_grammar": 64, "number_of_claus": [163, 317, 331, 333], "number_of_proof": [145, 146, 163], "number_of_rul": [163, 317, 331, 333], "number_of_user_claus": [163, 317, 331], "number_of_user_rul": [163, 317, 331], "numberlist": 333, "numberofproof": [145, 146], "numer": [23, 51], "nunit": 19, "nupdat": 63, "nz": 86, "o": [0, 3, 13, 19, 23, 42, 43, 48, 54, 65, 70, 71, 74, 75, 86, 92, 97, 99, 142, 243, 287, 318, 323, 324, 333, 334], "obj": 338, "object": [0, 3, 5, 8, 9, 10, 11, 13, 14, 16, 20, 23, 24, 25, 26, 27, 30, 31, 35, 36, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 69, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 95, 96, 97, 98, 100, 101, 105, 106, 108, 109, 110, 112, 113, 118, 119, 121, 122, 123, 128, 133, 136, 138, 139, 140, 142, 147, 149, 151, 152, 154, 155, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 179, 182, 183, 184, 187, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 206, 208, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 252, 253, 254, 256, 257, 260, 262, 264, 271, 274, 275, 276, 277, 281, 282, 285, 287, 290, 293, 295, 306, 307, 308, 309, 310, 311, 313, 315, 316, 318, 320, 321, 322, 325, 326, 327, 330, 332, 334, 335, 336, 337], "object1": [200, 317], "object2": [200, 317], "object_alia": 163, "object_alias_list": [161, 163], "object_alias_sequ": 163, "object_direct": [163, 187, 256], "object_identifi": [110, 112, 118, 143, 144, 148, 162, 163, 166, 172, 233, 234, 240, 246, 247, 252, 253, 256, 260, 262, 264, 271, 274, 275, 277, 282, 290, 293], "object_properti": [12, 19, 127, 140, 158, 163, 187, 247, 256, 262, 268, 276, 331], "object_rel": [163, 187, 256], "object_term": 163, "object_wrapper_hook": [9, 10, 13, 19, 20, 24, 68], "objectmentor": 9, "objecto": 0, "objectorcategori": [285, 336], "objvlisp": 0, "obox": 13, "observ": [53, 322, 324, 337], "obtain": [5, 12], "obviou": 99, "ocaml": 333, "occur": [19, 20, 27, 41, 56, 129, 137, 160, 162, 171, 215, 233, 234, 235, 240, 287, 314, 315, 320, 322, 324, 335], "occurr": [35, 41, 84, 138, 178, 215, 322, 335], "octob": 30, "odd": [19, 23, 44, 330, 338], "odd_numb": 338, "of_expect": 59, "of_unexpect": 59, "off": [12, 18, 19, 20, 34, 86, 110, 155, 169, 170, 221, 292, 318, 321, 322, 328, 332, 334, 335], "offend": [180, 321], "offici": [5, 20, 23, 63, 99, 324, 327, 335], "offset": 12, "often": [10, 13, 15, 19, 23, 24, 27, 38, 69, 76, 200, 254, 256, 257, 287, 316, 318, 320, 321, 323, 327, 329, 330, 331, 332, 333, 334, 335], "ohcount": 9, "ok": 86, "ol": [0, 69, 324], "old": [23, 317, 333, 335], "older": [23, 32, 326], "oldest": 23, "omit": [13, 19, 41, 160, 162, 279, 280, 283, 284, 317, 318, 326, 333, 335, 336], "omit_path_prefix": 13, "onc": [19, 23, 39, 41, 122, 157, 174, 204, 205, 212, 213, 294, 328, 332, 333, 335], "one": [5, 13, 15, 17, 19, 22, 23, 24, 26, 27, 41, 44, 56, 61, 62, 67, 69, 81, 90, 92, 99, 100, 145, 146, 161, 163, 165, 167, 169, 170, 180, 184, 187, 192, 193, 194, 196, 197, 204, 206, 215, 216, 221, 232, 242, 243, 244, 245, 246, 247, 248, 254, 255, 256, 257, 264, 270, 271, 272, 277, 286, 287, 292, 293, 294, 295, 296, 298, 299, 302, 303, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 338], "one_or_error": [163, 333], "one_or_mor": [145, 163, 228, 333], "one_or_more_or_error": [163, 333], "onelin": 63, "ones": [19, 28, 32, 35, 41, 287, 288, 314, 330, 335], "ones_and_zero": 124, "onli": [5, 10, 11, 12, 13, 17, 19, 20, 23, 24, 27, 30, 34, 35, 36, 38, 39, 41, 44, 45, 47, 48, 54, 58, 60, 67, 68, 69, 76, 80, 82, 85, 86, 87, 92, 97, 99, 101, 105, 110, 118, 119, 124, 127, 129, 131, 137, 142, 151, 152, 155, 158, 165, 178, 193, 194, 218, 219, 221, 239, 253, 255, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338], "onlin": 15, "onorm": 13, "ontario": 0, "oo": 9, "oodmetrc": 9, "oolp": 0, "oop": [0, 330], "ooplsla": 0, "oopsla": 9, "op": [4, 19, 136, 139, 150, 151, 152, 154, 156, 160, 162, 182, 323, 328, 333, 335], "opac": 0, "opaqu": [19, 41, 44, 45, 54, 59, 82, 83, 87, 90, 92, 113, 174, 180, 204, 214, 218, 219, 294, 295, 296, 297, 298, 306, 309, 310, 321, 333, 338], "open": [1, 3, 4, 6, 9, 11, 13, 15, 19, 21, 22, 27, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 149, 206, 209, 216, 244, 285, 312, 315, 317, 320, 321, 323, 324, 326, 327, 329, 331, 333, 335, 336], "openssl": 23, "oper": [0, 9, 10, 13, 16, 18, 19, 20, 23, 25, 27, 28, 31, 41, 42, 43, 52, 56, 63, 68, 70, 85, 92, 98, 100, 101, 103, 105, 110, 113, 118, 126, 127, 128, 142, 144, 147, 149, 151, 152, 154, 160, 162, 163, 182, 187, 192, 216, 281, 312, 314, 315, 316, 317, 318, 320, 322, 324, 325, 326, 329, 330, 331, 332, 335, 336, 337, 338], "opera": 38, "operand": 9, "operator_declar": [151, 152, 154], "operator_direct": 163, "operator_list": [160, 162, 163], "operator_prior": [182, 187], "operator_sequ": 163, "operator_specifi": [182, 187], "opportun": 329, "opt": [254, 256, 257, 312], "optim": [10, 11, 12, 13, 19, 25, 34, 42, 43, 50, 55, 60, 79, 80, 86, 95, 109, 113, 118, 128, 159, 161, 162, 178, 286, 287, 317, 318, 321, 322, 325, 327, 328, 329, 333, 334], "option": [8, 9, 10, 12, 13, 15, 17, 18, 19, 20, 23, 27, 31, 41, 42, 43, 44, 51, 56, 58, 59, 63, 67, 68, 71, 73, 80, 96, 97, 105, 138, 161, 178, 209, 243, 255, 287, 317, 318, 320, 321, 323, 330, 331, 334, 336], "or_els": [59, 83], "orang": 92, "order": [4, 5, 13, 19, 23, 28, 36, 41, 42, 43, 54, 56, 61, 67, 92, 98, 103, 113, 142, 143, 144, 157, 162, 171, 173, 178, 198, 218, 219, 235, 254, 256, 257, 308, 312, 316, 317, 318, 321, 323, 324, 325, 329, 330, 331, 333, 334, 335, 336, 338], "orderli": 5, "ordinari": 335, "ordset": 56, "org": [0, 9, 13, 18, 19, 22, 23, 45, 46, 48, 51, 74, 75, 96, 99, 100, 101, 105], "organ": [9, 23, 324, 331, 335], "orient": [0, 5, 9, 41, 42, 43, 112, 315, 322, 325, 326, 328, 330, 331, 333, 335, 338], "orientada": 0, "origin": [0, 9, 19, 23, 24, 27, 41, 51, 56, 65, 83, 91, 99, 100, 105, 106, 112, 144, 179, 317, 321, 323, 328, 330, 331, 333, 335, 336], "original_pair": 19, "orphan": 23, "orthogon": [73, 326], "os_typ": 85, "otago": 86, "other": [5, 7, 9, 10, 16, 19, 23, 25, 27, 32, 34, 37, 41, 42, 43, 44, 46, 54, 60, 67, 69, 70, 71, 73, 81, 82, 87, 92, 98, 99, 101, 108, 109, 243, 286, 287, 312, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 336, 338], "otherwis": [5, 19, 23, 51, 80, 92, 217, 316, 317, 320, 328, 329, 331, 333, 334, 335, 336], "our": [19, 312, 314, 315, 322, 326, 333, 334, 335], "out": [5, 19, 56, 254, 256, 257, 317, 321, 324, 329, 333, 335], "out_of_rang": 215, "outcom": [19, 41], "outdat": 23, "output": [4, 5, 8, 9, 10, 13, 16, 18, 23, 24, 38, 41, 42, 43, 51, 56, 63, 69, 74, 75, 92, 96, 149, 206, 216, 221, 317, 318, 320, 322, 325, 333, 335, 338], "output_directori": 13, "outsid": [41, 187, 314, 327, 329, 330], "outweigh": 338, "over": [19, 20, 23, 50, 55, 60, 66, 88, 95, 97, 102, 110, 118, 315, 317, 322, 324, 335, 337], "overal": 9, "overcom": 329, "overflow": 90, "overhead": [19, 42, 43, 50, 55, 60, 73, 124, 173, 218, 219, 325, 333, 338], "overlap": 100, "overli": 320, "overload": [112, 113], "overrid": [12, 17, 24, 41, 44, 56, 67, 76, 108, 144, 194, 281, 317, 323, 326, 333, 335], "overridden": [19, 20, 41, 81, 108, 317, 320, 323, 330, 333, 335], "overriden": 41, "overview": [13, 16, 19, 42, 43, 71, 99, 325], "own": [13, 15, 19, 22, 23, 64, 67, 76, 99, 294, 312, 317, 318, 320, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 338], "p": [0, 12, 17, 18, 19, 22, 23, 51, 62, 69, 76, 84, 86, 96, 98, 161, 179, 318, 320, 321, 323, 324, 335], "p1": 256, "pack": [16, 22, 42, 43, 281], "pack_protocol": 23, "packag": [13, 15, 19, 23, 31, 42, 43, 106, 327, 330, 333], "paderborn": 0, "page": [5, 9, 13, 14, 15, 17, 18, 19, 23, 42, 56, 103, 105, 327], "pai": [9, 10, 20, 24, 335], "pair": [19, 44, 48, 54, 69, 74, 75, 82, 97, 140, 141, 160, 167, 221, 252, 253, 270, 271, 272, 274, 277, 282, 287, 293, 318, 320, 333, 334, 336], "pairs_keys_valu": 19, "pale": 13, "pan": 9, "pandoc": 22, "pane": 19, "panel": 0, "paper": [0, 9, 103, 105], "para": 0, "paradigm": [0, 319, 324], "parallel": [27, 42, 43, 86, 317, 325, 331, 336, 338], "parallel_logtalk_processes_setup": [86, 335], "paramet": [18, 19, 20, 41, 48, 54, 56, 59, 64, 67, 68, 73, 74, 75, 80, 82, 83, 92, 159, 160, 161, 162, 163, 180, 181, 205, 233, 234, 240, 254, 256, 285, 317, 320, 321, 324, 330, 333], "parameter": [9, 19, 41, 161, 317, 324, 331, 334], "parameter_vari": [163, 285], "parametr": [5, 8, 16, 18, 41, 42, 43, 51, 59, 64, 67, 68, 73, 74, 75, 83, 92, 96, 98, 101, 110, 113, 118, 159, 160, 161, 162, 215, 240, 254, 256, 285, 320, 323, 325, 329, 330, 333, 335], "parametriz": 19, "parcftp": 0, "parent": [24, 41, 252, 256, 271, 285, 319, 326, 331], "parentcategori": [270, 285], "parenthes": [15, 19, 20], "parenthesi": [110, 127], "parentprotocol": [272, 285], "pariti": 13, "parlog": 0, "parnam": [18, 163, 320], "pars": [19, 41, 46, 48, 51, 56, 64, 74, 75, 96, 110, 217, 218, 219, 320, 321, 329, 335], "parse_simple_valid_fil": 74, "parser": [4, 6, 9, 23, 318], "parsing_xml_with_prolog": 6, "part": [0, 11, 13, 15, 19, 20, 41, 60, 68, 86, 283, 286, 287, 328, 331, 333, 334, 335, 338], "parti": [15, 16, 19, 22, 23, 42, 43, 44, 86, 327, 333, 334, 335], "partial": [50, 320, 321, 329, 330, 332], "particip": [317, 319, 324], "particular": [5, 9, 13, 19, 34, 41, 86, 317, 321, 323, 324, 329, 331, 333, 335, 336], "particularli": [18, 19, 326], "partit": [100, 330, 331, 334], "pass": [8, 19, 23, 41, 42, 43, 51, 59, 63, 67, 71, 83, 96, 110, 199, 280, 284, 298, 318, 320, 323, 325, 330, 332, 333, 334, 338], "pass_info": [56, 323], "passphras": 23, "password": [19, 23], "past": [19, 27], "past_end_of_stream": 216, "patch": [19, 23, 41, 42, 43, 76, 109, 320, 325, 327, 335], "path": [9, 10, 13, 18, 19, 22, 23, 32, 41, 58, 74, 75, 82, 84, 100, 138, 279, 280, 281, 283, 284, 285, 317, 327, 330, 331, 335, 336], "path_url_prefix": 13, "pathprefix": 13, "pattern": [19, 36, 41, 319, 320, 328, 331, 333, 338], "paul": 96, "paulo": [1, 5, 23, 54, 63, 65, 99, 140, 256, 312, 320, 334], "paus": 318, "payload": [74, 75], "payrol": 192, "pb": 19, "pc": 19, "pddl": 4, "pddl_parser": [2, 42, 43], "pdf": [6, 9, 13, 18, 56, 105, 320], "pdt": 334, "pearai": 13, "peculiar": 121, "pedant": 5, "peer": 338, "penalti": [19, 178, 329, 333, 338], "pend": 318, "penguin": 326, "peopl": [5, 324], "per": [10, 15, 18, 19, 20, 22, 23, 46, 51, 81, 92, 94, 98, 105, 109, 118, 119, 157, 281, 294, 318, 320, 322, 326, 328, 329, 330, 332, 333, 334, 335], "perform": [5, 10, 19, 23, 24, 26, 30, 31, 41, 42, 43, 54, 68, 69, 82, 88, 90, 92, 95, 97, 99, 109, 118, 119, 129, 130, 137, 142, 159, 161, 162, 178, 193, 194, 213, 218, 219, 287, 317, 318, 323, 325, 326, 327, 329, 331, 333, 336], "perhap": 335, "period": [18, 68, 320], "perl": 4, "perman": [13, 19], "permiss": [27, 56, 216, 320, 330, 331, 333], "permission_error": [109, 110, 112, 118, 119, 155, 165, 169, 170, 175, 176, 179, 187, 189, 190, 192, 205, 206, 229, 230, 231, 232, 237, 238, 241, 243, 244, 245, 247, 248, 254, 255, 256, 257, 280, 284, 292, 298, 321, 333], "permissiontyp": 216, "permit": 5, "permut": 161, "persist": [19, 32, 333], "person": [23, 256, 312, 318, 320], "perspect": [324, 333], "peter": 56, "ph": 0, "phase": [318, 324, 335], "php": 6, "phrase": [20, 41, 141, 143, 151, 152, 154, 173, 186, 188, 205, 332, 333], "pictur": 335, "piec": [13, 324, 327], "pii": 9, "pin": [16, 42, 43], "ping": 323, "pinna": 0, "pinned_pack": 23, "pinned_registri": 23, "pinpoint": 19, "pip": 22, "pipelin": [17, 19, 20, 67, 323], "pisa": 0, "pl": [9, 10, 13, 19, 20, 24, 27, 68, 86, 138, 317, 323, 327, 331, 335, 336], "pl_pack": 23, "pl_reg": 23, "place": [23, 41, 113, 138, 160, 162, 318, 324, 333, 335, 338], "placehold": 318, "plai": [13, 41, 319, 321, 322, 326, 330, 331, 333], "plain": [16, 18, 19, 27, 30, 31, 41, 42, 43, 86, 322, 323, 324, 325, 327, 330, 331, 332, 335], "plan": [4, 5], "plane": 335, "planet": 318, "platform": [35, 324], "pleas": [6, 10, 13, 14, 15, 24, 25, 36, 37, 45, 52, 103, 105, 106, 255, 261, 280, 284, 292, 317, 321, 327, 331, 336], "plenti": 324, "pllib": 86, "plu": [9, 19, 20, 23, 51, 56, 96, 103, 109, 328, 333, 335], "plug": [19, 73], "plugin": [7, 19], "plum": 13, "plunit": 19, "pmoura": [63, 281], "pn": 9, "podar": 0, "point": [5, 9, 19, 23, 24, 26, 32, 41, 42, 43, 68, 97, 99, 100, 184, 193, 203, 228, 320, 323, 325, 327, 333, 335, 338], "pointcut": 324, "polici": 5, "polka": 0, "poll": 338, "pollux": 323, "polymorph": 41, "pong": 323, "pool": 330, "poor": 338, "popul": [93, 329], "popular": [19, 34, 330], "por": 0, "port": [0, 12, 13, 15, 16, 19, 22, 23, 27, 42, 43, 56, 68, 86, 90, 91, 103, 105, 106, 324, 325, 327, 329, 332, 333, 334], "port_profil": 24, "portabl": [15, 16, 19, 20, 22, 31, 42, 43, 50, 55, 71, 85, 88, 89, 92, 95, 99, 103, 106, 126, 128, 131, 142, 144, 147, 254, 256, 257, 280, 284, 317, 323, 324, 325, 329, 330, 333], "portrai": [12, 318], "portray_claus": 76, "ports_profil": [16, 22, 42, 43, 318], "portug": 0, "portugues": 0, "portuguesa": 0, "posit": [10, 15, 19, 41, 44, 48, 61, 88, 143, 144, 215, 285, 287, 318, 326, 332, 333, 334, 335], "position1": 285, "position_": 19, "positive_integ": 97, "posix": [13, 15, 19, 23, 70, 98, 101, 105, 320, 327, 335, 338], "possibl": [5, 10, 13, 17, 19, 20, 22, 23, 24, 28, 34, 35, 41, 44, 51, 63, 67, 69, 74, 75, 98, 100, 121, 124, 160, 162, 179, 187, 190, 192, 216, 229, 230, 243, 254, 256, 257, 285, 312, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338], "possibli": [10, 19, 28, 41, 44, 69, 317, 320, 323, 326, 330, 331, 333, 335], "post": [9, 24, 303, 322, 327, 338], "postpon": [17, 338], "postscript": 13, "potenti": [23, 61, 62, 90, 321, 322, 326, 329, 334, 335, 338], "power": [0, 19, 322, 329], "powershel": [13, 18, 19, 23, 320, 335], "ppp": [317, 336], "practic": [16, 19, 42, 43, 92, 126, 128, 142, 144, 147, 287, 322, 329, 330, 332, 333, 334, 335], "pragmat": [9, 324], "pratic": 0, "pre": [19, 34, 42, 43, 67, 69, 71, 97, 122, 225, 318, 322, 328, 333, 335], "precaut": 23, "preced": [124, 149, 151, 152, 154, 160, 162, 317, 318, 322, 331, 336], "precis": [5, 322], "preclud": 333, "pred": [183, 220], "pred_info": [56, 323], "pred_prop": 220, "predat": 330, "predefin": [5, 17, 19, 41, 155, 255, 261, 292, 320, 327, 328], "predic": [1, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 112, 113, 115, 118, 119, 121, 124, 126, 127, 128, 129, 137, 138, 139, 141, 142, 144, 145, 147, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 170, 172, 173, 175, 176, 178, 179, 180, 183, 187, 190, 192, 193, 194, 201, 203, 206, 208, 209, 210, 215, 216, 220, 221, 222, 223, 226, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 270, 271, 272, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311, 312, 313, 315, 316, 319, 322, 323, 325, 327, 330, 331, 334, 335, 336, 337], "predicate1": 333, "predicate2": 333, "predicate_alias_properti": 163, "predicate_alias_property_list": 163, "predicate_alias_property_sequ": 163, "predicate_call_update_properti": 163, "predicate_call_update_property_list": 163, "predicate_call_update_property_sequ": 163, "predicate_declar": [108, 109, 112, 118, 119, 165, 169, 170, 176, 192, 216, 231, 232, 314, 333], "predicate_declaration_properti": 163, "predicate_declaration_property_list": 163, "predicate_declaration_property_sequ": 163, "predicate_definition_properti": 163, "predicate_definition_property_list": 163, "predicate_definition_property_sequ": 163, "predicate_direct": 163, "predicate_ind": [141, 163, 165, 183, 333], "predicate_indicator_alia": [121, 163], "predicate_indicator_alias_list": 162, "predicate_indicator_list": [160, 162, 163], "predicate_indicator_sequ": 163, "predicate_indicator_term": [124, 126, 151, 152, 154, 157, 163], "predicate_info_item": 163, "predicate_info_list": [141, 163], "predicate_info_sequ": 163, "predicate_mode_term": [145, 146, 163], "predicate_properti": [124, 128, 137, 141, 143, 144, 145, 146, 147, 151, 152, 154, 157, 163, 182, 183, 187, 205, 227, 326, 327, 333], "predicate_template_alia": 163, "predicate_template_alias_list": [160, 162], "predicate_url_target_format": 13, "predict": [9, 19, 23], "predomin": 324, "prefer": [13, 14, 19, 22, 23, 54, 69, 121, 131, 160, 281, 317, 324, 326, 327, 329, 331, 333, 335, 336], "prefix": [8, 13, 15, 19, 22, 23, 41, 42, 43, 68, 99, 147, 160, 162, 208, 209, 210, 221, 222, 223, 285, 317, 318, 325, 326, 329, 330, 333, 335, 336], "preliminari": [13, 27, 73], "preload": 27, "prentic": 0, "prepar": 287, "preprocess": 19, "presenc": [17, 20, 83, 322, 330], "present": [12, 19, 23, 56, 59, 83, 99, 124, 131, 316, 320, 326, 334], "preserv": [17, 19, 41, 51, 68, 109, 112, 321, 324, 328, 332], "press": [0, 9], "pretti": [63, 320], "pretty_print": 333, "pretty_print_blob": 255, "prevent": [9, 10, 15, 17, 19, 20, 23, 24, 44, 61, 62, 88, 91, 110, 112, 147, 317, 321, 322, 323, 329, 331, 332, 333, 334, 335, 336], "previou": [5, 15, 23, 286, 287, 317, 318, 320, 323, 333, 338], "previous": [23, 51, 96, 169, 170, 317, 318, 322, 326], "primari": [41, 147, 329, 333], "primarili": 73, "prime": 338, "prime_numb": 338, "primit": [158, 254, 256, 257, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 322, 328, 332], "principl": 335, "print": [5, 8, 9, 10, 11, 12, 13, 16, 18, 19, 21, 22, 23, 27, 35, 41, 42, 43, 60, 142, 152, 164, 205, 208, 209, 210, 211, 221, 222, 223, 287, 315, 317, 320, 322, 325, 329, 331, 332, 333, 335], "print_depth": 19, "print_goal_hook": [68, 318], "print_messag": [11, 19, 130, 142, 162, 167, 205, 208, 209, 210, 211, 222, 223, 224, 225, 226, 318, 333, 334], "print_message_token": [8, 167, 205, 208, 209, 210, 211, 221, 224, 225, 226, 334], "printabl": 13, "prior": [17, 18, 147, 160, 281, 323, 333], "priori": 317, "prioriti": [9, 182, 333], "pristin": 329, "privat": [13, 23, 41, 42, 43, 61, 62, 76, 82, 84, 90, 109, 112, 118, 119, 128, 139, 147, 148, 150, 152, 154, 163, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 187, 190, 192, 198, 199, 200, 201, 203, 204, 206, 213, 214, 215, 216, 218, 219, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 253, 270, 271, 272, 274, 275, 277, 293, 312, 314, 317, 318, 322, 325, 328, 329, 330, 331, 333, 335, 336], "private_pred": [109, 112, 118, 119, 165, 169, 170, 176, 216, 231, 232, 321], "pro": [19, 27, 335], "probabl": [88, 321, 326, 329, 331, 333, 335], "problem": [0, 4, 10, 13, 19, 23, 30, 32, 38, 279, 280, 283, 284, 318, 323, 324, 326, 329, 333, 335, 338], "problemat": [44, 329, 330, 333, 335], "proce": [109, 238, 308, 338], "procedur": [19, 23, 24, 42, 43, 110, 112, 118, 171, 192, 198, 199, 223, 235, 264, 319, 325, 326, 328, 332, 333], "proceed": [0, 9, 326], "process": [9, 15, 18, 19, 27, 41, 42, 43, 44, 59, 67, 83, 84, 86, 94, 173, 233, 234, 281, 285, 305, 315, 317, 321, 322, 323, 325, 327, 330, 331, 333, 334, 336], "process_init_opt": [19, 333], "processor": [18, 19, 22, 38, 320, 324, 338], "procur": 5, "produc": [13, 48, 74, 75, 333, 335], "product": [8, 81, 324, 329, 332, 334, 335], "profession": [31, 42, 43], "profil": [16, 19, 22, 23, 41, 42, 43, 313, 324, 325, 331, 332], "profit": 5, "program": [0, 5, 9, 19, 20, 31, 34, 41, 42, 43, 53, 56, 97, 103, 105, 108, 112, 158, 313, 314, 317, 321, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337], "programa\u00e7\u00e3o": 0, "programm": [12, 112, 113, 160, 162, 312, 323, 324, 329, 333, 334, 338], "programmat": [69, 320, 333], "progress": [19, 48, 69, 82, 86, 106, 333], "project": [14, 19, 20, 23, 41, 63, 320, 324, 326, 335], "prolog": [0, 4, 5, 6, 12, 15, 16, 19, 22, 27, 29, 31, 32, 38, 41, 42, 43, 44, 45, 50, 52, 54, 55, 56, 60, 61, 62, 63, 67, 73, 74, 75, 85, 86, 88, 89, 90, 91, 92, 95, 97, 98, 99, 105, 106, 113, 124, 126, 127, 128, 130, 131, 137, 138, 142, 144, 147, 157, 158, 159, 160, 162, 163, 165, 169, 170, 173, 174, 175, 176, 183, 184, 196, 197, 213, 218, 219, 220, 228, 229, 231, 232, 241, 242, 254, 255, 256, 257, 279, 280, 281, 282, 283, 284, 285, 286, 287, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 317, 318, 319, 320, 322, 325, 326, 328, 331, 332, 334, 336, 338], "prolog_compatible_vers": 335, "prolog_compil": 335, "prolog_dialect": [137, 335], "prolog_direct": 163, "prolog_extens": 27, "prolog_flag": 187, "prolog_load": 335, "prolog_load_context": 329, "prolog_module_hook": [68, 323], "prolog_statist": 25, "prolog_typ": 163, "prolog_vers": 335, "prolog_xref": 13, "promot": 41, "prompt": [15, 19, 23, 167, 226, 334], "prone": 9, "proof": [41, 145, 146, 314, 330, 331, 333], "prop": 220, "propag": 0, "propel": 256, "proper": [13, 51, 160, 254, 256, 257, 280, 284, 333, 335, 338], "properli": [18, 327, 329, 335], "properti": [12, 19, 41, 42, 43, 88, 99, 138, 164, 220, 250, 276, 290, 291, 321, 322, 325, 327, 337], "property_definit": 99, "proport": 332, "propos": [0, 59, 75, 86], "proposit": 103, "proprietari": [9, 10, 20, 24, 35, 42, 43, 113, 321, 325, 333], "protect": [13, 19, 41, 42, 43, 61, 62, 76, 84, 88, 90, 109, 112, 118, 119, 123, 139, 147, 150, 151, 153, 154, 157, 163, 165, 166, 169, 170, 172, 176, 182, 183, 201, 203, 220, 231, 232, 239, 253, 270, 271, 272, 274, 275, 277, 293, 317, 322, 325, 328, 330, 331, 333, 336, 338], "protected_pred": [112, 118, 165, 169, 170, 176, 216, 231, 232], "protocol": [9, 13, 18, 19, 20, 31, 35, 41, 42, 43, 45, 49, 54, 57, 67, 68, 72, 84, 86, 88, 92, 121, 122, 123, 134, 136, 138, 139, 140, 142, 147, 148, 161, 162, 164, 166, 172, 192, 201, 203, 239, 248, 253, 254, 256, 257, 263, 270, 272, 274, 276, 285, 287, 291, 312, 313, 315, 317, 319, 320, 321, 322, 323, 324, 325, 327, 330, 331, 333, 335, 337], "protocol1": [317, 331, 336], "protocol2": [317, 331, 336], "protocol_direct": [163, 187, 257], "protocol_identifi": [153, 163, 248, 253, 257, 263, 272, 274, 291], "protocol_properti": [127, 140, 163, 187, 248, 257, 263, 268, 276, 336], "protocol_rel": [187, 257], "prototyp": [0, 13, 27, 31, 41, 42, 43, 66, 109, 121, 148, 187, 252, 256, 271, 285, 316, 317, 319, 325, 330, 333, 335, 336], "prototype_rel": 163, "provabl": 213, "prove": [5, 19, 41, 110, 113, 118, 157, 178, 240, 294, 295, 298, 306, 307, 309, 310, 328, 329, 331, 332], "prover": 103, "provid": [4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 31, 34, 41, 42, 43, 44, 45, 46, 50, 51, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 99, 100, 101, 108, 124, 137, 142, 152, 154, 158, 163, 169, 170, 176, 180, 193, 194, 200, 203, 215, 231, 232, 239, 281, 285, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "provide_rel": 13, "proxi": [41, 110, 112, 113, 118, 201], "proxies_04": 19, "proxyar": 110, "proxyfunctor": 110, "ps1": [13, 15, 19, 23, 320, 335], "psenv": [22, 23], "pseudo": [23, 44, 69, 70, 81, 88, 98, 101, 110, 112, 113, 118, 158, 318, 322, 323, 328, 329, 330, 333, 335, 338], "pstart": 56, "pt": 37, "pthread": 338, "pub": 0, "pubert": 24, "public": [0, 8, 11, 12, 13, 19, 23, 24, 30, 41, 42, 43, 44, 51, 61, 62, 74, 76, 84, 86, 96, 99, 100, 109, 118, 119, 138, 139, 147, 149, 150, 151, 152, 163, 165, 166, 167, 169, 170, 172, 176, 178, 179, 182, 183, 184, 196, 197, 201, 203, 208, 209, 210, 211, 218, 219, 220, 221, 222, 223, 225, 226, 228, 231, 232, 239, 242, 253, 256, 257, 270, 271, 272, 274, 275, 277, 293, 312, 314, 315, 317, 318, 321, 322, 323, 325, 328, 329, 330, 331, 333, 334, 336], "publicdomain": 99, "publicli": [23, 67, 271, 274], "publish": [0, 4, 9, 13, 19, 23, 74, 75, 99, 103, 322, 324, 327], "pugslei": 24, "pull": 17, "pure": [5, 315, 320], "purpos": [5, 9, 19, 22, 41, 320, 329, 330, 333, 334], "put": 312, "put_char": 19, "put_char_2_02": 19, "puzzl": 333, "pvr": 56, "pycharm": 13, "pygment": [18, 22], "python": [42, 43, 325], "python3": 22, "p\u00e9ter": 19, "q": [18, 19, 46, 84, 211, 223, 318, 323, 334], "qqq": 336, "qualif": [28, 121, 329, 330, 333], "qualifi": [19, 20, 34, 41, 128, 144, 159, 160, 165, 169, 170, 171, 176, 231, 232, 235, 318, 329, 330, 333], "qualified_directive_resourc": 163, "qualified_directive_resource_list": 163, "qualified_directive_resource_sequ": 163, "qualified_directive_resource_term": 163, "qualified_non_terminal_indicator_term": [128, 147], "qualified_predicate_indicator_term": [128, 147], "qualiti": [9, 20], "quantifi": 333, "quasi": 318, "queri": [6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 23, 24, 25, 26, 27, 36, 41, 69, 81, 84, 87, 100, 103, 105, 106, 178, 255, 304, 312, 315, 317, 318, 320, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "question": [18, 19, 41, 42, 43, 164, 167, 205, 225, 226, 320, 325, 331, 337], "question_hook": [19, 167, 168, 205, 208, 209, 210, 211, 221, 222, 223, 226, 334], "question_prompt_stream": [167, 168, 205, 208, 209, 210, 211, 221, 222, 223, 225, 334], "queue": [41, 42, 43, 71, 158, 162, 294, 295, 298, 300, 303, 305, 306, 307, 309, 333, 335, 338], "queue0": 87, "queue1": 87, "queuep": 153, "quick": [19, 68, 327], "quick_check": 19, "quick_start": 327, "quickcheck": [16, 42, 43, 44], "quicker": 19, "quintu": [19, 23, 24, 88, 333, 334, 335], "quirk": 321, "quit": [13, 15, 19, 318, 322], "quobject": 19, "quot": [51, 69, 163, 318, 323, 330], "quux": [68, 183, 220], "qux": 318, "qwert": 19, "qwerti": 19, "r": [0, 19, 22, 54, 149, 318, 323, 333], "race": [41, 61, 62, 254, 256, 257, 317, 331, 334, 336], "radic": 56, "radiu": 113, "rainbow_color": 92, "rais": [42, 43, 44, 99, 318, 325, 333], "random": [13, 19, 42, 43, 44, 70, 71, 81, 86, 98, 101], "random_protocol": 19, "randomli": [19, 44, 81, 88], "rang": [9, 23, 99, 317, 320, 328, 329, 331, 335], "rank": 100, "rare": [19, 127], "rate": 9, "rather": [326, 333], "ratio": [9, 13], "ration": 41, "rational": [0, 328], "raw_1": 138, "razek": 0, "razek92": [0, 324], "rbtree": [54, 56], "rc": 23, "rcn": 335, "rdiamond": 13, "rdirectori": [23, 27], "re": [5, 14, 15, 19, 23, 41, 105, 171, 204, 214, 235, 294, 301, 320, 335, 338], "reach": [41, 178, 193, 203, 318, 323], "react": 315, "reactiv": 324, "read": [12, 18, 19, 23, 27, 38, 51, 89, 94, 96, 131, 149, 155, 158, 167, 193, 194, 203, 237, 280, 281, 284, 285, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 317, 318, 321, 323, 327, 329, 331, 333, 334, 338], "read_fil": [51, 96], "read_file_by_lin": [51, 96], "read_onli": 255, "read_opt": 187, "read_stream": 157, "read_term": [321, 335], "read_writ": 255, "readabl": [13, 328, 333, 335], "reader": [13, 42, 43, 71], "readi": [5, 18, 303, 305, 314, 327], "readm": [23, 86, 327], "readthedoc": [17, 18, 22], "readutil": 89, "real": [201, 338], "realist": 338, "realli": [5, 330], "reappli": 13, "reason": [0, 9, 19, 41, 66, 103, 169, 170, 218, 219, 322, 329, 330, 333], "rec": 105, "receiv": [9, 19, 41, 118, 163, 165, 233, 311, 317, 321, 326, 328, 330, 332, 333, 336, 338], "recent": [13, 15, 23, 91, 318, 327, 333], "recogn": [19, 27, 69, 124, 138, 215, 279, 280, 283, 284, 322, 333], "recognit": 318, "recogniz": 331, "recommend": [13, 23, 173, 317, 331, 333, 335, 336], "recompil": [318, 324, 329, 335], "record": [0, 10, 51, 90, 333], "recorda": 90, "recorded_databas": [42, 43, 71], "recorded_database_cor": 90, "recoveri": 175, "recreat": [138, 335], "rectangl": [13, 333], "recurs": [9, 10, 13, 20, 41, 44, 163, 193, 203, 305, 321, 323, 324, 332, 333, 335, 338], "recursive_rel": 13, "recycl": [254, 256, 257], "red": [54, 92], "redeclar": 330, "redefin": [20, 23, 41, 122, 138, 159, 161, 211, 223, 317, 318, 320, 321, 328, 330, 334, 335], "redefined_built_in": [333, 335], "redefined_from": [163, 333], "redefined_oper": 335, "redefining_ent": [211, 221, 334], "redefinit": [163, 187, 320, 333, 335], "redi": [42, 43, 71], "redirect": [16, 19, 42, 43, 334], "redirect_assertions_messag": 8, "redis_host": 91, "redis_port": 91, "rediscli": 91, "redistribut": [4, 5], "redo": [24, 25, 318], "reduc": [41, 326], "reduct": 9, "redund": [20, 332, 335], "reexport": [329, 330], "ref": 23, "refactor": [13, 20, 329], "refer": [13, 19, 20, 30, 39, 41, 42, 43, 57, 73, 90, 101, 106, 112, 159, 161, 163, 240, 314, 315, 317, 320, 321, 322, 325, 326, 327, 328, 330, 331, 333, 335], "referenc": [13, 19, 27, 165, 169, 170, 176, 220, 231, 232, 321, 323, 329, 332, 333, 337], "reference_property_list": 163, "refin": [315, 322, 330], "reflect": [0, 13, 18, 27, 31, 41, 42, 43, 66, 138, 160, 162, 164, 205, 313, 320, 322, 324, 325, 326, 329, 330, 331, 332, 335], "reflex": [322, 331], "refman": 21, "reg": 23, "regard": [5, 19, 44, 45, 54, 68, 82, 87, 90, 92, 179, 180, 295, 296, 297, 298, 306, 309, 310, 317, 333, 335], "regener": 21, "regist": [30, 57, 315, 322], "registri": [16, 42, 43, 281], "registry_protocol": 23, "regress": [19, 330], "regular": [12, 20, 23, 314, 318, 330, 333, 337], "reifi": [19, 302, 338], "reinterpret": [319, 338], "reject": 326, "rel": [9, 10, 13, 19, 23, 41, 44, 54, 82, 84, 138, 279, 280, 281, 283, 284, 326, 332, 335], "relat": [0, 3, 9, 13, 19, 24, 34, 36, 41, 42, 43, 44, 56, 60, 68, 72, 164, 203, 239, 253, 254, 256, 257, 270, 271, 272, 274, 275, 276, 277, 279, 280, 283, 284, 285, 293, 312, 316, 317, 318, 319, 320, 322, 324, 326, 328, 330, 331, 332, 334, 335, 336, 337, 338], "relation_label": 13, "relationship": [42, 43, 316, 324, 325], "relative_to": [280, 284, 335], "relativetoler": 19, "releas": [4, 5, 15, 22, 23, 30, 32, 99, 324, 327, 335], "release_not": 327, "relev": [0, 13, 18, 19, 20, 33, 41, 73, 124, 320, 330, 334, 335], "reli": [15, 19, 38, 295, 296, 297, 298, 306, 309, 310, 333, 334, 335, 338], "reliabl": [23, 88, 335], "reload": [39, 42, 43, 286, 287, 325], "relocat": [41, 281], "remain": [13, 19, 23, 56, 88, 112, 113, 294, 317, 322, 328, 331, 333, 335, 336, 338], "remark": [0, 18, 85, 163, 320, 334], "rememb": [312, 320], "remot": [19, 23], "remov": [19, 34, 56, 73, 87, 314, 322, 331, 332, 333, 335, 338], "remove_from_queu": 157, "renam": 333, "render": [31, 32, 42, 43, 317, 320, 335], "renderx": 18, "reorder": 331, "repeat": [13, 20, 34, 41, 69, 159, 161, 184, 196, 197, 205, 207, 216, 242, 254, 256, 257, 314, 333, 334, 335, 338], "repetit": [19, 314, 326], "replac": [5, 13, 19, 27, 36, 41, 68, 99, 255, 317, 318, 320, 327, 329, 330, 331, 335], "repli": [158, 167, 225, 306, 310, 334, 338], "repo": [13, 15, 17, 19, 23, 56, 105], "report": [0, 10, 16, 17, 20, 22, 23, 26, 31, 42, 43, 56, 99, 129, 137, 159, 161, 180, 221, 281, 287, 317, 321, 327, 331, 332, 333, 334, 335], "reposit": 216, "repositori": [5, 13, 63], "repres": [5, 8, 13, 19, 41, 44, 46, 48, 51, 69, 70, 74, 75, 82, 84, 86, 92, 93, 96, 97, 99, 124, 131, 143, 144, 163, 167, 179, 221, 246, 253, 260, 264, 270, 271, 272, 274, 275, 277, 280, 284, 293, 315, 317, 318, 320, 321, 322, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 338], "represent": [13, 23, 41, 42, 43, 45, 54, 69, 71, 83, 87, 92, 98, 101, 103, 229, 320, 322, 324, 326, 333], "representation_error": [175, 179, 180, 187, 189, 190, 192, 205, 206, 216, 230, 237, 238, 241, 243, 244, 333], "reproduc": [5, 42, 43, 71], "request": [17, 23, 41, 83, 330, 334, 335, 338], "requir": [5, 9, 12, 16, 19, 24, 27, 31, 41, 42, 43, 48, 66, 67, 68, 71, 76, 84, 86, 91, 92, 97, 98, 105, 124, 131, 144, 158, 160, 169, 170, 206, 230, 244, 264, 287, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 317, 318, 320, 321, 322, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 338], "research": 324, "reserv": [4, 5, 19, 42, 43, 325], "reset": [19, 23, 24, 160, 318, 331, 333], "reset_se": 88, "resili": 9, "resolut": [5, 330], "resolv": [10, 18, 121, 169, 170, 279, 280, 283, 284, 332, 335], "resort": [44, 312], "resourc": [9, 13, 23, 33, 41, 99, 160, 230, 317, 319, 320, 322, 331, 333, 335, 336], "resource_error": [175, 179, 187, 189, 190, 192, 205, 206, 216, 229, 237, 238, 241, 243, 244, 333], "respect": [13, 23, 30, 48, 74, 75, 87, 149, 166, 172, 201, 255, 285, 315, 318, 320, 322, 323, 327, 329, 333, 335, 338], "respons": [19, 320, 335], "rest": [219, 324, 335], "restart": [23, 41, 335], "restor": [23, 323], "restrict": [19, 23, 61, 62, 76, 90, 109, 163, 203, 239, 255, 316, 317, 322, 323, 324, 329, 331, 333, 335], "restructuredtext": [18, 320], "result": [8, 10, 12, 13, 16, 20, 23, 24, 26, 31, 34, 41, 42, 43, 44, 46, 51, 67, 90, 92, 99, 100, 112, 113, 124, 158, 162, 180, 194, 199, 281, 287, 294, 295, 305, 306, 307, 309, 310, 317, 318, 320, 321, 322, 323, 324, 327, 329, 330, 331, 332, 333, 334, 335, 336, 338], "result0": 333, "retain": [5, 324, 335], "retest": 19, "retract": [41, 42, 43, 128, 157, 165, 169, 170, 176, 185, 205, 232, 312, 317, 325, 335], "retractal": [51, 96, 160, 165, 169, 170, 176, 185, 205, 231, 312, 317, 333], "retri": [13, 318], "retriev": [13, 23, 41, 69, 160, 176, 240, 281, 295, 298, 301, 302, 306, 320, 322, 330, 331, 333, 335, 338], "return": [9, 12, 19, 41, 51, 63, 73, 98, 99, 101, 171, 180, 194, 198, 199, 203, 235, 239, 274, 281, 285, 295, 298, 302, 305, 309, 314, 315, 317, 318, 322, 323, 330, 331, 333, 334, 335, 336, 338], "returnvalu": 73, "retyp": 13, "reus": [0, 36, 41, 245, 247, 248, 312, 317, 319, 324, 326, 329, 331, 333, 336, 338], "reusabl": [152, 154, 323], "rev": 19, "reveal": [13, 321, 322], "revers": [56, 86], "review": 19, "rewrit": [19, 20, 141, 211, 329, 333, 334], "rewritten": [20, 333, 334, 335, 338], "rfc": [46, 48, 51, 74], "rfc4180": 51, "rfc4648": 46, "rfc8259": 74, "rfc8949": 48, "richard": [65, 86, 92, 99, 105, 334], "right": [4, 5, 13, 44, 56, 326], "right_to_left": 13, "rightfulli": 329, "rigid": [9, 320], "riski": 56, "rlibrari": [10, 13], "rnd": 161, "robert": [4, 9], "robson": 0, "robust": 333, "roi": 56, "role": [41, 319, 321, 322, 326, 329, 330, 331, 333], "roll": 23, "root": [19, 23, 32, 41, 84, 86, 97, 100, 312, 316, 324, 326, 327, 330, 331, 338], "root1": 100, "root2": 100, "root_directory_of_prolog_cod": 27, "rosset": 103, "roundtrip_array_obj_arrai": 74, "roundtrip_hexadecim": 74, "row": [51, 96], "rstart": 56, "rudimentari": 324, "rule": [5, 9, 20, 24, 41, 42, 43, 67, 86, 105, 106, 121, 126, 128, 141, 143, 147, 151, 152, 154, 157, 164, 173, 175, 194, 205, 217, 218, 219, 281, 317, 318, 320, 325, 329, 331, 332, 334, 335, 336, 338], "rumbaugh": 0, "rumbaugh87": [0, 324], "rumbaugh88": [0, 324], "run": [4, 5, 9, 12, 15, 16, 17, 20, 21, 22, 23, 27, 29, 31, 32, 38, 41, 42, 43, 60, 64, 73, 86, 88, 90, 91, 95, 105, 106, 130, 254, 256, 257, 281, 286, 287, 288, 306, 310, 314, 317, 320, 324, 325, 327, 329, 330, 331, 332, 333, 334, 336, 337, 338], "run_propag": 333, "run_test_set": 19, "runner": 256, "runtim": [8, 10, 12, 19, 22, 25, 26, 29, 34, 41, 42, 43, 54, 82, 109, 110, 113, 118, 127, 158, 160, 162, 165, 166, 169, 170, 172, 179, 187, 190, 192, 193, 194, 201, 206, 215, 216, 229, 230, 237, 238, 243, 244, 254, 256, 257, 281, 315, 318, 322, 323, 324, 325, 328, 330, 332, 333, 334, 335, 338], "s0164": 9, "s0164121298100420": 9, "s1": 323, "s2": 323, "saab": 0, "sadli": 5, "safari": 38, "safe": [46, 94], "safer": 323, "safeti": 23, "sai": [5, 19, 73, 315, 324], "said": [314, 333, 335], "same": [5, 9, 10, 13, 15, 17, 19, 20, 22, 23, 24, 27, 31, 34, 41, 42, 43, 44, 46, 56, 67, 69, 73, 88, 98, 100, 106, 108, 112, 113, 129, 137, 138, 142, 157, 159, 160, 161, 162, 179, 187, 190, 192, 206, 209, 215, 216, 229, 230, 237, 238, 243, 244, 255, 308, 311, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338], "same_ar": 179, "same_closure_specif": 179, "same_number_of_argu": 179, "same_number_of_paramet": 179, "sampl": [6, 10, 12, 13, 14, 15, 19, 24, 25, 44, 74, 75, 86, 88, 93, 100, 103, 105, 106, 320, 327, 333, 335], "sample_doclet": 14, "sample_utf_8": 19, "sampling_protocol": 88, "san": 9, "sanit": 23, "santo": 54, "sasak": 4, "satisfactori": 326, "satisfi": [19, 44, 334], "save": [9, 10, 13, 15, 19, 20, 23, 24, 27, 41, 51, 56, 96, 152, 314, 317, 320, 331, 333, 334, 335, 336], "saw": 314, "saxon": [18, 320], "saxonica": 18, "sbn": 0, "scale": 321, "scan": [16, 42, 43, 287, 332], "scanner": 10, "scatter": 329, "scenario": [17, 27, 67, 68, 317, 327, 329, 331, 333, 338], "schacht": 0, "schachte95": 0, "schema": 19, "scheme": [13, 320, 331], "schimpf": 19, "scienc": [0, 9, 105, 322], "sciencedirect": 9, "scm": 63, "scope": [9, 10, 17, 19, 20, 41, 42, 43, 56, 61, 62, 71, 76, 90, 108, 109, 118, 119, 142, 147, 149, 154, 155, 166, 169, 170, 172, 182, 183, 187, 193, 194, 201, 203, 216, 218, 219, 220, 239, 253, 256, 270, 271, 272, 274, 275, 277, 285, 292, 293, 314, 317, 318, 320, 321, 322, 325, 326, 328, 329, 330, 331, 335, 336, 337, 338], "scope_direct": 163, "scope_directive_resourc": 163, "scope_directive_resource_list": 163, "scope_directive_resource_sequ": 163, "scope_directive_resource_term": 163, "score": 9, "scratch": [41, 86, 281, 327, 335], "scratch_directori": [9, 10, 13, 281, 335], "script": [6, 7, 9, 10, 13, 14, 15, 17, 18, 19, 23, 24, 25, 29, 31, 38, 42, 43, 73, 86, 103, 105, 106, 320, 327, 335], "scroll": 15, "se": 0, "sean": 91, "search": [5, 15, 42, 78, 326, 335], "season": 317, "second": [0, 5, 9, 11, 19, 24, 30, 34, 44, 63, 69, 73, 74, 75, 98, 101, 110, 124, 141, 144, 160, 162, 193, 194, 203, 215, 218, 219, 241, 270, 271, 272, 277, 280, 281, 284, 287, 293, 315, 318, 319, 321, 322, 323, 326, 329, 331, 332, 333, 334, 335, 336, 338], "secret": 318, "section": [11, 12, 13, 18, 19, 23, 27, 34, 36, 49, 60, 85, 109, 118, 119, 140, 141, 155, 220, 250, 255, 261, 280, 284, 290, 291, 292, 314, 317, 318, 319, 320, 321, 323, 324, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "secur": [16, 32, 42, 43, 335], "sed": 22, "see": [6, 9, 10, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 33, 34, 39, 41, 42, 43, 44, 46, 49, 50, 55, 56, 60, 63, 70, 71, 73, 74, 75, 78, 79, 80, 82, 85, 86, 97, 98, 100, 101, 103, 105, 106, 109, 118, 119, 140, 141, 175, 184, 196, 197, 209, 210, 228, 241, 242, 255, 261, 274, 280, 284, 287, 292, 314, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337], "see_also": [163, 320], "seed": [19, 44, 88], "seem": 91, "seen": 319, "segment": 13, "seldom": [19, 24], "select": [11, 13, 16, 20, 21, 22, 23, 24, 25, 26, 29, 42, 43, 44, 54, 68, 74, 75, 81, 82, 86, 88, 92, 319, 324, 329, 330, 333, 335, 338], "selector": 330, "self": [19, 41, 42, 43, 109, 110, 119, 165, 169, 170, 171, 173, 174, 176, 180, 181, 182, 183, 198, 199, 200, 204, 205, 213, 214, 215, 218, 219, 220, 231, 232, 234, 235, 240, 306, 310, 312, 314, 317, 318, 322, 324, 325, 330, 331, 332, 333, 335, 336], "semant": [0, 20, 27, 41, 42, 43, 67, 76, 110, 113, 118, 159, 213, 320, 321, 323, 325, 328, 329, 330, 333, 335, 338], "semi": 5, "semicolon": 51, "send": [9, 13, 14, 15, 19, 25, 31, 38, 41, 42, 43, 50, 55, 60, 64, 67, 69, 112, 113, 115, 118, 119, 121, 161, 162, 164, 171, 173, 174, 198, 199, 200, 204, 214, 216, 235, 282, 287, 295, 307, 308, 309, 311, 314, 315, 317, 318, 319, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 338], "sender": [19, 41, 109, 110, 112, 118, 166, 172, 180, 181, 205, 215, 216, 233, 240, 246, 260, 264, 315, 318, 321, 322, 323, 328, 329, 333], "sens": [13, 317, 320, 322, 330, 331, 333], "sensibl": 20, "sensibli": 19, "sensit": 333, "sent": [18, 19, 34, 41, 155, 162, 166, 172, 201, 213, 234, 246, 264, 287, 295, 306, 307, 308, 309, 315, 317, 322, 326, 328, 331, 332, 333, 335, 337, 338], "sentenc": [41, 141, 320, 333], "separ": [13, 17, 19, 41, 42, 43, 51, 59, 69, 83, 86, 96, 157, 160, 281, 287, 325, 327, 329, 330, 331, 333, 334, 335, 336], "sequenc": [12, 14, 19, 41, 42, 43, 64, 67, 71, 88, 101, 179, 187, 190, 192, 206, 216, 229, 230, 237, 238, 243, 244, 322, 329, 334, 335], "sequence_grammar": 64, "sequencese": 19, "seri": [0, 9], "serial": [253, 274], "serialized_object": 19, "serv": 87, "server": [10, 17, 19, 23, 86, 91], "servic": [5, 19, 23, 31, 42, 43], "session": [22, 23, 315, 318, 328, 335], "set": [4, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 22, 23, 25, 26, 27, 35, 36, 41, 42, 43, 51, 58, 60, 67, 68, 69, 71, 76, 80, 81, 84, 88, 97, 99, 100, 103, 110, 121, 155, 158, 160, 162, 166, 169, 170, 171, 172, 221, 235, 255, 264, 279, 281, 283, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338], "set1": 92, "set2": 92, "set_attribut": [312, 317], "set_data_structur": 100, "set_file_write_depth": 19, "set_in_self": [169, 170], "set_in_thi": [169, 170], "set_logtalk_flag": [10, 12, 13, 18, 19, 20, 22, 24, 25, 41, 56, 58, 67, 68, 80, 136, 139, 156, 163, 255, 256, 261, 273, 276, 317, 318, 322, 323, 329, 330, 331, 335], "set_memb": [121, 333], "set_output": 19, "set_prolog_flag": [137, 335], "set_se": [44, 81, 88], "set_stream": 19, "set_text_input": 19, "set_text_output": 19, "set_write_max_depth": 318, "setof": [19, 20, 144, 171, 198, 199, 200, 205, 236, 333], "settings_fil": 335, "setup": [16, 17, 23, 25, 42, 43, 86, 327], "seven": 318, "sever": [13, 15, 18, 19, 21, 23, 30, 41, 44, 54, 78, 82, 88, 145, 146, 281, 312, 314, 317, 318, 320, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338], "sg": 106, "sgvsbg8gd29ybgqh": 46, "sh": [13, 14, 15, 17, 19, 23, 335], "sha": 23, "sha1": [13, 19], "sha256": 23, "sha256sum": 23, "shall": [5, 295, 296, 297, 298, 306, 309, 310, 315, 338], "shan": 0, "shan_et_al_93": [0, 326], "shape": [13, 335], "share": [0, 12, 19, 20, 22, 23, 41, 88, 157, 285, 317, 318, 319, 320, 324, 329, 330, 331, 333, 336, 338], "shell": [5, 14, 19, 23, 32, 38, 73, 327, 335], "shift_ji": 131, "short": [19, 56, 327, 331, 333], "shortcom": [324, 330], "shortcut": [19, 20, 21, 31, 42, 43, 283, 286, 287, 318, 320, 335], "shorten": [159, 161, 317, 331], "shorter": [13, 100], "shorthand": [27, 41, 160, 162, 330, 333, 335], "should": [5, 9, 10, 13, 17, 19, 23, 24, 31, 34, 41, 42, 43, 44, 45, 46, 54, 63, 68, 81, 82, 84, 85, 87, 88, 90, 106, 109, 110, 119, 124, 126, 130, 138, 142, 159, 161, 162, 179, 180, 203, 239, 255, 281, 283, 305, 306, 310, 317, 318, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 338], "show": [13, 19, 31, 42, 43, 318, 335], "shown": [318, 333], "shrink": [19, 44], "shrink_sequ": 44, "shrinker": [42, 43, 71], "sibl": [24, 318], "sic": 0, "sicstu": [0, 12, 13, 15, 19, 23, 25, 45, 50, 55, 60, 91, 95, 105, 324, 334, 335], "sicstus95": [0, 324], "sicstus_profil": 25, "side": [13, 157, 184, 318, 329, 330, 333, 338], "sig": [0, 23], "sign": [16, 42, 43], "signal": [9, 10, 20, 24, 88, 95, 301, 302, 334, 338], "signatur": [23, 330], "signer": 23, "signific": [9, 106, 319, 330, 332, 334, 335, 338], "sigplan": 0, "silenc": 333, "silent": [18, 32, 35, 155, 208, 221, 280, 284, 292, 331, 333, 334, 335], "similar": [13, 19, 56, 101, 169, 170, 312, 314, 317, 318, 321, 324, 326, 328, 329, 330, 331, 333, 335, 336], "similarli": [98, 101, 316, 333], "simpl": [12, 14, 17, 18, 19, 23, 25, 30, 34, 44, 48, 74, 75, 84, 314, 315, 317, 318, 320, 321, 322, 323, 324, 327, 329, 331, 333, 334, 336, 338], "simple_dialect": 19, "simpler": [13, 19, 320, 333, 335], "simplest": 331, "simpli": [9, 10, 13, 19, 20, 22, 23, 24, 26, 39, 54, 68, 82, 86, 88, 105, 112, 118, 119, 281, 307, 317, 318, 321, 323, 328, 329, 330, 332, 333, 335, 338], "simplic": 326, "simplif": [42, 43, 325], "simplifi": [5, 17, 19, 23, 41, 44, 56, 82, 110, 118, 159, 160, 161, 162, 215, 317, 318, 321, 326, 329, 331, 332, 333, 334], "simultan": [105, 338], "sinc": [5, 36, 39, 98, 286, 287, 320, 327, 335], "singl": [10, 16, 19, 24, 41, 42, 43, 44, 56, 64, 68, 69, 94, 96, 99, 112, 157, 194, 215, 240, 287, 316, 318, 320, 323, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 338], "singleton": [20, 41, 285, 335], "singleton_vari": 335, "singletons_warn": 19, "singular": [121, 320], "sink": 333, "sister": [24, 318], "site": 5, "situat": [56, 312, 322, 326], "six": [331, 333], "size": [6, 9, 13, 42, 43, 71, 162, 325, 335], "size_metr": 9, "skip": [11, 12, 16, 39, 42, 43, 51, 91, 95, 96, 318, 322, 334, 335], "skyblu": 13, "slash": [13, 335], "slice": 13, "slow": [5, 13, 19], "slower": 332, "small": [13, 19, 35, 44, 54, 82, 86, 88, 287, 322, 329, 332, 335, 337, 338], "smaller": [19, 44, 215], "smalltalk": [0, 36, 42, 43, 53, 109, 317, 324, 325, 328, 337], "smooth": [42, 43, 325], "snapshot": 5, "snippet": 335, "snyder": 0, "so": [18, 19, 23, 54, 82, 95, 157, 281, 312, 316, 317, 320, 322, 328, 330, 332, 336], "societi": [0, 9], "soft": [20, 328, 335], "soft_cut_support": 230, "softwar": [0, 4, 5, 9, 13, 23, 32, 41, 42, 43, 324, 325, 326, 334], "sole": [330, 333, 335], "solut": [7, 9, 10, 12, 17, 19, 20, 23, 24, 34, 38, 41, 42, 43, 88, 90, 92, 124, 145, 146, 158, 164, 171, 198, 199, 200, 205, 235, 254, 256, 257, 298, 301, 305, 306, 307, 309, 310, 315, 316, 317, 318, 320, 323, 324, 326, 329, 331, 334, 335, 338], "solv": [19, 26, 27, 41, 121, 145, 324, 326, 333, 335, 338], "solver": [28, 333], "some": [4, 5, 9, 10, 12, 13, 15, 19, 20, 22, 23, 24, 28, 32, 34, 35, 41, 44, 48, 52, 60, 67, 73, 74, 75, 83, 85, 86, 92, 93, 95, 97, 99, 101, 103, 105, 110, 113, 124, 126, 127, 128, 130, 142, 144, 147, 149, 159, 160, 162, 229, 287, 312, 314, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "some_categori": 68, "some_go": 12, "some_id": 19, "some_object": [10, 333], "some_pred": 333, "some_protocol": 68, "some_test_id": 19, "someon": 334, "someth": [5, 59, 318, 322, 328, 330, 333], "sometim": [19, 68, 108, 144, 281, 321, 323, 324, 328, 329, 333, 335, 338], "soon": [19, 321, 331, 335], "sophist": [57, 317, 318, 321, 322, 323, 326, 330, 336], "sort": [44, 98, 100, 235, 320, 329, 331, 333, 334, 335], "sort_1": [320, 331, 335], "sortabl": 98, "sorted_integer_list": 44, "sought": 60, "sound": [108, 317, 323], "soundex": 5, "sourc": [5, 6, 9, 10, 12, 13, 14, 15, 16, 19, 20, 22, 23, 26, 27, 30, 31, 35, 41, 42, 43, 44, 46, 56, 58, 67, 68, 74, 75, 81, 86, 105, 113, 127, 129, 131, 137, 138, 139, 142, 149, 155, 159, 160, 161, 162, 164, 193, 194, 203, 239, 276, 279, 280, 283, 284, 285, 286, 287, 292, 317, 320, 321, 324, 325, 330, 331, 333, 336, 337], "source1": 335, "source2": 335, "source3": 335, "source4": 335, "source5": 335, "source_data": [9, 10, 13, 18, 19, 20, 24, 163, 250, 261, 280, 284, 287, 290, 291, 317, 320, 331, 332, 333, 335, 336, 337], "source_fil": [18, 163, 323], "source_file1": 335, "source_file2": 335, "source_file_cont": 163, "source_file_direct": 163, "source_file_nam": [138, 163, 279, 280, 283, 284], "source_sink": [187, 192, 216, 333], "space": [230, 277, 317, 331, 334, 335], "spacebar": 318, "spam": 334, "span": [69, 100, 338], "spdx": [1, 23, 320], "speak": 322, "spec": [23, 98, 329], "special": [5, 9, 10, 13, 19, 20, 22, 23, 24, 26, 27, 34, 35, 41, 109, 121, 148, 256, 293, 316, 317, 318, 320, 322, 330, 331, 333, 335], "specialized_object": [148, 163], "specialized_object_list": 163, "specialized_object_sequ": 163, "specializes_class": [163, 247, 256, 262, 266, 271, 276, 277, 285, 290, 331], "specif": [0, 9, 11, 13, 16, 19, 22, 24, 30, 41, 42, 43, 46, 67, 68, 74, 86, 99, 131, 137, 145, 146, 152, 154, 160, 163, 213, 255, 318, 319, 320, 322, 323, 324, 326, 327, 329, 331, 332, 333, 334, 335, 337], "specifi": [9, 10, 12, 13, 14, 15, 18, 19, 23, 41, 44, 60, 74, 75, 99, 110, 121, 131, 138, 160, 162, 182, 187, 209, 210, 213, 226, 255, 279, 280, 283, 284, 315, 317, 318, 320, 321, 323, 327, 329, 331, 333, 334, 335, 336, 338], "speech": 317, "spell": 99, "sphinx": [13, 15, 18, 22, 320], "sphinx_rtd_them": [18, 22], "spi": [41, 315, 322, 324], "spitz": 54, "split": [13, 19, 314, 327, 333, 335, 338], "sponsor": 327, "spread": [324, 329], "spring": 5, "springer": [0, 103], "springgreen": 13, "spuriou": [26, 97], "spy": [12, 318, 330], "squar": [13, 173, 333], "ssh": [19, 23], "sso": 23, "st": 96, "stabl": [9, 15, 23, 30, 324, 335], "stack": [6, 19, 109, 110], "staffpriv": 86, "stage": [5, 17, 23, 321, 329, 335], "stai": 23, "stamp": [98, 101], "stand": [5, 148, 256, 324, 331], "standalon": [30, 31, 42, 43, 331], "standard": [0, 8, 9, 10, 13, 18, 19, 20, 23, 24, 30, 35, 38, 42, 43, 44, 59, 60, 69, 74, 86, 90, 92, 97, 99, 113, 137, 144, 149, 157, 160, 162, 163, 175, 184, 196, 197, 209, 213, 228, 235, 241, 242, 318, 320, 321, 322, 323, 325, 327, 328, 329, 330, 334, 335, 338], "star": 41, "start": [5, 12, 15, 19, 23, 24, 25, 30, 31, 42, 43, 44, 56, 73, 86, 108, 109, 123, 130, 137, 142, 148, 153, 167, 221, 256, 285, 301, 302, 314, 315, 316, 317, 318, 320, 321, 322, 324, 325, 326, 327, 329, 331, 333, 338], "start_dat": 142, "start_redirect_to_fil": 12, "startlin": 285, "startup": [9, 10, 13, 23, 25, 26, 41, 49, 122, 158, 318, 330, 334, 335], "state": [0, 17, 19, 56, 88, 318, 319, 324, 329, 330, 331, 333], "state_spac": [271, 277, 293], "stateless": 88, "statement": 330, "static": [9, 19, 20, 31, 41, 42, 43, 109, 122, 128, 159, 161, 162, 163, 165, 169, 170, 176, 178, 231, 232, 245, 247, 248, 250, 259, 262, 263, 290, 291, 317, 319, 320, 321, 323, 324, 327, 328, 329, 330, 331, 332, 333, 335, 336], "static_categori": [216, 245], "static_object": [216, 247], "static_pred": [165, 169, 170, 176, 216, 231, 232], "static_protocol": [216, 248], "statist": [5, 19, 25, 42, 43, 71, 333], "statu": [19, 22, 23, 322, 327, 335], "steadfast": [20, 41, 335], "steel": 0, "stefik": 0, "stefik_et_al_86": [0, 322], "step": [5, 13, 18, 19, 23, 30, 41, 67, 68, 100, 320, 323, 329, 334, 335], "still": [8, 19, 20, 23, 25, 41, 88, 90, 317, 318, 329, 333, 335], "stone": 5, "stop": [18, 24, 299, 315, 318, 320, 322, 335], "stop_redirect_to_fil": 12, "stop_watch": 315, "storag": [16, 42, 43], "store": [19, 138, 158, 160, 162, 281, 312, 322, 329, 330, 331, 335], "straight": [91, 329], "straightforward": [19, 24, 312], "strategi": [109, 118, 119, 326], "stream": [8, 19, 42, 43, 46, 51, 69, 74, 75, 89, 96, 167, 187, 192, 208, 210, 216, 221, 222, 223, 226, 244, 285, 318, 322, 323, 325, 333], "stream_opt": 187, "stream_or_alia": [187, 210, 222, 223, 226], "stream_posit": 187, "stream_properti": 187, "stress": 318, "strict": 5, "strictli": [23, 322, 333], "string": [17, 19, 30, 48, 60, 74, 75, 99, 320, 329, 330, 334], "stringparam": 19, "strong": [69, 324, 327, 334], "stronger": [19, 324], "strongli": [23, 320, 329, 335], "stroud": 9, "stroustrup": 0, "stroustrup86": [0, 324], "structur": [18, 19, 23, 36, 42, 43, 57, 97, 100, 312, 320, 324, 325, 330, 331, 333, 334, 335], "studi": 0, "studio": 9, "style": [42, 43, 163, 320, 325, 333, 334], "stylesheet": 320, "sub": [9, 10, 13, 17, 19, 23, 27, 41, 63, 97, 144, 187, 192, 206, 216, 243, 244, 318, 320, 327, 333, 334, 335, 338], "subclass": [41, 256, 293, 319, 320, 330, 331], "subdiagram": 13, "subdirectori": 327, "subject": [53, 90, 192, 329, 335], "submit": 99, "subscrib": 322, "subsequ": [23, 109, 118, 119, 301, 323, 324], "subset": [19, 23, 30, 60, 85, 100, 332], "substanti": 326, "substitut": [5, 41], "subsum": [19, 41, 306, 310, 318], "subsumes_term": 19, "subtl": 5, "subtyp": 41, "subvert": 333, "succe": [8, 19, 20, 41, 44, 67, 68, 88, 97, 167, 183, 184, 198, 199, 204, 208, 221, 223, 225, 228, 242, 285, 294, 295, 296, 302, 306, 307, 309, 310, 315, 318, 320, 321, 322, 323, 331, 333, 334, 338], "succeed": [129, 137, 204, 318], "success": [23, 31, 41, 42, 43, 110, 118, 124, 166, 178, 282, 294, 295, 307, 309, 318, 320, 321, 322, 324, 331, 335, 338], "successfulli": [17, 23, 129, 137, 142, 167, 208, 221, 225, 315, 318, 322, 330, 334, 335], "sudo": [13, 15, 22, 23], "suffici": [56, 109, 118, 218, 219, 317, 331, 333, 338], "suffix": [13, 14, 23, 317, 327, 331, 333, 336], "sugar": 4, "suggest": [1, 20, 22, 26, 99, 329, 333, 335], "suit": [5, 19, 60], "suitabl": [19, 84, 329, 334, 335, 338], "summar": [19, 23], "summari": [0, 19, 42, 43, 71, 313], "super": [19, 41, 57, 76, 109, 173, 317, 322, 324, 326, 328, 330, 332, 333, 335], "super_cal": 163, "superclass": [41, 285, 293, 319, 326, 330, 331], "superset": [324, 330], "suppli": [167, 320], "support": [5, 9, 11, 12, 16, 18, 19, 20, 21, 23, 27, 29, 30, 31, 32, 34, 35, 38, 41, 42, 43, 44, 48, 50, 52, 53, 55, 56, 60, 61, 62, 63, 64, 67, 68, 69, 74, 75, 76, 77, 80, 81, 84, 85, 88, 91, 95, 97, 101, 105, 106, 109, 110, 118, 124, 126, 129, 131, 142, 158, 165, 169, 170, 173, 174, 176, 183, 218, 219, 220, 229, 231, 232, 254, 255, 256, 257, 282, 285, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337], "suppos": 19, "suppress": [11, 13, 16, 22, 42, 43, 239, 280, 284, 318, 334, 335], "suppress_binary_output": 19, "suppress_goal_hook": 68, "suppress_path_prefix": 22, "suppress_text_output": 19, "sure": [9, 13, 19, 22, 23, 32, 287, 320, 329, 335], "surround": [51, 333], "survei": 0, "surviv": 90, "suspend": [308, 311, 318, 338], "suspici": [20, 155, 335], "suspicious_cal": [60, 155, 282, 335], "svg": [13, 63], "swap": 88, "swi": [12, 13, 15, 19, 23, 25, 45, 50, 54, 55, 60, 73, 89, 91, 95, 105, 106, 137, 255, 333, 334, 335], "swim": 326, "swipl": 19, "switch": [9, 23, 24, 42, 43, 54, 56, 68, 82, 110, 115, 164, 325, 327, 331, 334, 335], "symbol": [13, 41, 54, 163, 330], "symdiff": 92, "symmetr": 23, "sync_write_log_entri": 338, "synchron": [41, 42, 43, 61, 62, 88, 128, 139, 150, 158, 163, 254, 256, 257, 294, 295, 307, 309, 317, 324, 325, 330, 331, 334, 336], "synchronized_direct": 163, "synchronized_directive_resourc": 163, "synchronized_directive_resource_list": 163, "synchronized_directive_resource_sequ": 163, "synchronized_directive_resource_term": 163, "synopsi": 56, "syntact": [9, 20, 41, 237, 321], "syntax": [4, 8, 13, 19, 27, 38, 41, 42, 43, 71, 73, 74, 75, 110, 112, 118, 126, 127, 128, 142, 144, 147, 149, 163, 215, 237, 317, 320, 321, 324, 326, 327, 328, 329, 330, 331, 333, 335, 336], "syntax_error": [175, 179, 187, 189, 190, 192, 205, 206, 216, 229, 230, 238, 241, 243, 244, 333], "synthesi": 0, "system": [0, 5, 9, 10, 12, 13, 16, 18, 19, 20, 23, 24, 27, 30, 31, 32, 36, 41, 42, 43, 44, 50, 52, 53, 55, 60, 63, 70, 76, 85, 86, 88, 91, 95, 97, 98, 99, 101, 105, 165, 169, 170, 173, 174, 176, 213, 218, 219, 229, 231, 232, 238, 255, 281, 313, 315, 317, 318, 320, 322, 323, 325, 329, 330, 331, 332, 333, 334, 335, 336, 338], "system_error": [175, 179, 187, 189, 190, 192, 205, 206, 216, 229, 230, 237, 241, 243, 244, 333], "szab\u00f3": 19, "szeredi": 19, "t": [0, 5, 9, 12, 13, 18, 19, 23, 25, 35, 44, 56, 59, 67, 68, 69, 74, 75, 84, 97, 99, 143, 149, 160, 161, 162, 171, 178, 213, 235, 304, 318, 320, 322, 323, 329, 330, 331, 333, 334, 335], "t2": 333, "tab": [13, 51, 96, 334, 335], "tabl": [19, 23, 24, 34, 51, 54, 60, 74, 75, 96, 99, 124, 131, 147, 162, 320, 329, 332, 335, 338], "taenzer": 0, "taenzer89": [0, 326], "tag": [23, 48, 295, 296, 306, 309, 310, 333, 338], "tail": [20, 199, 282, 314, 324, 332, 333, 335], "tail2": 314, "tail_recurs": 335, "take": [5, 8, 13, 18, 19, 23, 24, 27, 63, 68, 69, 74, 75, 86, 92, 97, 109, 149, 173, 217, 317, 318, 320, 322, 324, 327, 329, 331, 333, 334, 335, 337, 338], "taken": [10, 23, 88, 105, 160, 162, 203, 326, 334, 335, 338], "tala": 13, "talkshow": 23, "taller": 100, "tandem": 334, "tanenbaum": 0, "tanenbaum87": [0, 322], "tank": 230, "tanzer": 0, "tanzer95": 0, "tap": [16, 42, 43], "tap_output": 19, "tap_report": 19, "tar": [23, 327], "target": [10, 13, 14, 18, 19, 21, 35, 138, 169, 170, 281, 285, 287, 288, 327, 328, 329, 335], "task": [19, 32, 64, 317, 318, 322, 327, 334, 338], "tau": [23, 60], "tbz2": 23, "tea": 334, "teach": 324, "tech": [0, 56], "technic": [0, 56, 142], "techniqu": [5, 41, 326, 329], "tecnologia": 0, "tedium": 56, "tell": [19, 333], "temperatur": 321, "templat": [19, 20, 25, 41, 76, 179, 318, 327, 330, 333, 338], "template1": 124, "tempor": 72, "temporari": [19, 94, 281, 334, 335], "temporarili": [17, 19, 56], "temporary_nam": 335, "tend": 324, "term": [4, 5, 8, 9, 12, 19, 20, 23, 31, 38, 41, 42, 43, 45, 47, 48, 54, 56, 59, 67, 69, 71, 74, 75, 83, 84, 87, 89, 90, 92, 94, 97, 106, 108, 109, 110, 112, 113, 118, 119, 124, 131, 138, 144, 145, 149, 155, 160, 162, 164, 167, 169, 170, 171, 173, 174, 175, 176, 180, 183, 187, 192, 193, 194, 198, 199, 200, 203, 204, 205, 206, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 229, 231, 232, 235, 239, 243, 246, 250, 255, 256, 260, 264, 282, 285, 290, 291, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 317, 320, 324, 325, 328, 330, 331, 332, 333, 334, 335, 336, 338], "term1": 19, "term2": 19, "term_expans": [19, 27, 41, 67, 68, 193, 194, 195, 203, 205, 285, 323, 329, 333, 336], "term_io": [42, 43, 71], "term_posit": 285, "termin": [10, 15, 18, 20, 23, 24, 41, 73, 76, 121, 124, 126, 128, 141, 143, 146, 147, 151, 152, 154, 157, 160, 162, 163, 167, 179, 188, 211, 218, 219, 221, 294, 296, 317, 318, 320, 321, 329, 331, 334, 335, 338], "terminfo": 15, "termp": [47, 272], "ters": 26, "test": [2, 16, 17, 20, 21, 22, 27, 34, 41, 42, 43, 71, 99, 104, 110, 124, 137, 162, 200, 233, 234, 240, 317, 318, 321, 323, 326, 327, 330, 331, 333, 334, 335, 336], "test123": [19, 23], "test_fil": [44, 51, 96], "test_foo": 19, "test_goal": 19, "test_id": 19, "test_identifi": 19, "test_set_1": 19, "test_set_2": 19, "test_solution_gener": 19, "test_solution_generator_2": 19, "test_util": 19, "tester": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 18, 19, 23, 24, 25, 41, 44, 45, 46, 47, 48, 50, 51, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 327, 335], "tester_debug": 19, "tester_wip": 19, "testse": 19, "tex": 22, "texinfo": [15, 18, 22], "texliv": 22, "text": [13, 18, 19, 41, 42, 43, 48, 74, 75, 89, 96, 131, 138, 167, 221, 314, 317, 322, 325, 327, 330, 331, 334, 336], "text_encod": 187, "text_encoding_support": 230, "text_input_assert": 19, "text_output_assert": 19, "text_stream": 216, "textmat": 13, "textual": [317, 331, 336], "tgoal": 318, "tgz": 23, "than": [13, 19, 23, 25, 69, 88, 98, 99, 100, 215, 312, 318, 320, 326, 328, 329, 330, 331, 332, 333, 335, 338], "thank": [25, 51, 99, 334], "thei": [5, 9, 10, 19, 23, 41, 60, 67, 68, 85, 90, 95, 100, 157, 159, 161, 203, 239, 283, 285, 286, 287, 312, 317, 320, 322, 323, 326, 327, 328, 330, 331, 332, 333, 335, 338], "them": [5, 8, 9, 10, 13, 15, 18, 19, 20, 22, 23, 24, 27, 30, 38, 44, 50, 56, 59, 60, 67, 76, 81, 83, 86, 92, 99, 128, 152, 154, 208, 286, 287, 308, 312, 317, 318, 320, 322, 323, 324, 327, 329, 331, 333, 334, 335, 338], "theme": 18, "themselv": [5, 19, 23, 24, 34, 41, 333, 335], "theofrasto": 1, "theoret": 9, "theori": [5, 9, 100, 319, 326], "therefor": [14, 17, 23, 41, 60, 86, 126, 128, 142, 144, 147, 314, 315, 318, 319, 322, 324, 328, 333, 335, 336, 338], "thesi": [0, 5], "thew": 58, "thi": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 32, 34, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 112, 113, 115, 118, 121, 122, 124, 126, 127, 128, 130, 131, 138, 142, 144, 145, 146, 147, 155, 158, 159, 160, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 253, 254, 255, 256, 257, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "thing": [5, 76, 112, 192], "think": 331, "third": [15, 16, 19, 22, 23, 30, 42, 43, 44, 86, 219, 318, 320, 324, 326, 327, 329, 333, 334, 335], "thoma": 9, "those": [5, 13, 19, 22, 24, 27, 28, 54, 56, 60, 67, 129, 131, 137, 281, 284, 317, 318, 319, 320, 324, 327, 329, 330, 331, 332, 333, 335], "though": 56, "thought": 19, "thread": [19, 41, 42, 43, 56, 61, 62, 88, 94, 136, 139, 157, 163, 164, 192, 230, 254, 256, 257, 276, 290, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 318, 325, 330, 333, 335], "threaded_cal": [276, 289, 294, 296, 306, 307, 309, 310, 338], "threaded_cancel": [276, 289, 295, 306, 309, 310, 338], "threaded_engin": [265, 276, 298, 299, 304], "threaded_engine_cr": [265, 276, 297, 299, 301, 302, 304, 305, 338], "threaded_engine_destroi": [265, 276, 297, 298, 304, 338], "threaded_engine_fetch": [265, 276, 303, 338], "threaded_engine_next": [265, 276, 298, 302, 305, 338], "threaded_engine_next_reifi": [265, 276, 298, 301, 305, 338], "threaded_engine_post": [265, 276, 300, 338], "threaded_engine_self": [265, 276, 297, 298, 299], "threaded_engine_yield": [265, 276, 301, 302, 338], "threaded_exit": [276, 289, 295, 296, 307, 309, 310, 338], "threaded_ignor": [276, 289, 294, 295, 296, 306, 309, 310, 338], "threaded_notifi": [276, 289, 311, 338], "threaded_onc": [276, 289, 294, 295, 296, 306, 307, 310, 338], "threaded_peek": [276, 289, 295, 306, 307, 309, 338], "threaded_wait": [276, 289, 308, 338], "three": [5, 74, 75, 105, 287, 315, 316, 317, 322, 330, 331, 333, 335, 336], "through": [9, 36, 42, 43, 56, 322, 324, 325, 328, 329, 331, 333, 335], "throw": [5, 8, 19, 41, 44, 97, 129, 137, 175, 179, 180, 187, 189, 190, 192, 205, 206, 216, 229, 230, 237, 238, 243, 244, 294, 301, 318, 320, 321, 330, 334, 338], "thrown": [110, 118, 175, 238, 288, 317, 318, 320, 321, 328, 331, 336], "thu": [10, 15, 19, 23, 24, 27, 28, 41, 44, 61, 62, 67, 68, 80, 81, 86, 88, 90, 99, 100, 109, 110, 113, 144, 159, 160, 161, 162, 171, 173, 174, 175, 179, 187, 190, 192, 198, 199, 200, 203, 204, 206, 213, 214, 215, 216, 218, 219, 229, 230, 235, 237, 238, 241, 243, 244, 283, 312, 315, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "ti": 317, "tick": [19, 25], "tight": 318, "tile": 13, "time": [3, 5, 6, 9, 10, 12, 13, 16, 23, 24, 25, 31, 34, 41, 42, 43, 52, 56, 70, 84, 95, 98, 101, 108, 109, 113, 118, 142, 160, 161, 162, 173, 180, 183, 193, 194, 218, 219, 220, 233, 234, 240, 256, 281, 286, 287, 315, 317, 318, 322, 324, 328, 331, 332, 333, 335, 338], "time_out": 19, "time_stamp": 98, "timed_cal": 19, "timeout": [16, 42, 43, 71], "timestamp": [98, 105, 335], "titl": [9, 13, 17, 19, 69, 103, 105, 318], "tmp": [19, 335], "todai": [135, 324], "todo": 19, "togeth": [13, 19, 30, 73, 86, 179, 321, 324, 327, 334, 338], "toggl": [19, 322], "toi": [19, 318], "tokei": 9, "token": [8, 17, 23, 41, 42, 43, 167, 208, 209, 210, 211, 218, 219, 221, 222, 223, 225, 318, 325, 333], "toler": [19, 254], "tolerance_equ": 19, "too": [13, 60, 335], "tool": [7, 8, 11, 13, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 41, 42, 43, 44, 56, 68, 84, 281, 287, 288, 318, 320, 323, 327, 329, 330, 332, 333, 334, 335, 337], "toolkit": 23, "tools_doclet": 14, "tooltip": 13, "top": [5, 10, 12, 13, 15, 18, 19, 20, 21, 23, 25, 41, 67, 162, 279, 280, 283, 284, 286, 287, 318, 328, 329, 330, 331, 332, 333, 335], "top_goal": 318, "top_next": 162, "top_to_bottom": 13, "topic": [320, 335], "toplevel_print_opt": 19, "tort": 5, "total": [19, 317, 331], "tour": [13, 22], "toward": 0, "towel": 135, "toychr": [42, 43, 104], "toychrdb": 106, "tpdf": 13, "tr": 0, "tr44": 99, "trace": [12, 19, 41, 42, 43, 320, 322, 325, 330, 331, 334, 337], "trace_0": 320, "trace_ev": [318, 332], "tracer": [12, 322], "track": [100, 322, 332], "tracker": [16, 17, 42, 43], "trade": 34, "tradit": [19, 318, 324, 330, 333, 335], "tradition": 112, "trail": 19, "train": [31, 42, 43], "tran": [30, 324, 332], "transform": [5, 19, 41, 44, 323], "transit": [253, 274], "translat": [8, 10, 12, 19, 69, 131, 194, 215, 234, 256, 317, 318, 323, 329, 330, 332, 333, 334], "transpar": [20, 41, 213, 322, 333], "transpos": 160, "transpose_ugraph": 160, "travers": [24, 326], "trealla": [12, 15, 19, 23, 50, 55, 60, 95], "treat": [324, 338], "tree": [5, 17, 19, 44, 54, 100, 162, 279, 280, 283, 284], "trend": 19, "trevor": 9, "tri": [19, 38, 44, 67, 279, 280, 283, 284, 323, 324, 335], "triangl": 13, "triangular": 287, "tricki": [333, 334, 335, 338], "trigger": [8, 18, 19, 179, 321, 329, 333, 335], "trim": 84, "trio": 287, "triska": 333, "trivial": [20, 97, 335], "trivial_goal_fail": 335, "troubl": 335, "troubleshoot": [31, 42, 43], "trouss": 0, "true": [5, 13, 19, 20, 23, 25, 27, 41, 44, 48, 51, 68, 74, 75, 84, 97, 129, 130, 137, 141, 149, 184, 196, 197, 200, 205, 207, 213, 218, 219, 228, 255, 287, 294, 318, 320, 323, 330, 332, 333, 334, 335, 338], "truli": 34, "trust": 23, "try": [9, 10, 13, 15, 19, 20, 23, 24, 73, 187, 206, 229, 243, 244, 312, 314, 317, 318, 321, 322, 323, 324, 326, 327, 329, 330, 333, 334, 335, 338], "tsv": [42, 43, 71], "tsvg": 13, "tty": 23, "tune": 13, "tupl": [41, 97, 315, 318, 322, 330], "turn": [9, 10, 11, 12, 18, 19, 20, 24, 25, 50, 55, 60, 80, 86, 95, 110, 155, 169, 170, 221, 280, 284, 287, 292, 317, 318, 320, 321, 322, 328, 329, 331, 332, 333, 334, 335, 336, 337], "turquois": 13, "tutor": [15, 16, 19, 20, 21, 22, 23, 42, 43], "tutori": [42, 43], "tv": 96, "two": [5, 8, 11, 13, 19, 23, 24, 25, 30, 56, 57, 67, 69, 73, 74, 75, 92, 95, 99, 100, 144, 173, 179, 193, 194, 217, 246, 260, 264, 312, 314, 315, 316, 317, 318, 320, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338], "txmt": 13, "txt": [4, 6, 9, 10, 12, 13, 14, 15, 17, 19, 22, 24, 25, 51, 86, 103, 105, 106, 138, 209, 327, 334], "type": [4, 5, 12, 13, 18, 19, 23, 24, 41, 42, 43, 47, 59, 69, 71, 81, 83, 84, 85, 86, 92, 96, 145, 146, 163, 180, 187, 211, 218, 219, 243, 246, 255, 260, 264, 279, 280, 282, 283, 284, 295, 296, 297, 298, 306, 309, 310, 314, 318, 320, 322, 324, 325, 327, 330, 331, 333, 334, 335, 338], "type1": 97, "type2": 97, "type3": 97, "type_error": [44, 97, 109, 110, 112, 113, 118, 119, 155, 165, 169, 170, 171, 173, 174, 175, 176, 179, 182, 183, 187, 189, 190, 192, 198, 199, 200, 204, 205, 206, 213, 214, 215, 216, 217, 218, 219, 220, 229, 230, 231, 232, 235, 237, 238, 241, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 270, 271, 272, 274, 275, 277, 279, 280, 283, 284, 285, 290, 291, 292, 293, 294, 295, 298, 306, 307, 309, 310, 320, 321, 333], "types_frequ": 44, "typic": [17, 19, 23, 27, 41, 78, 97, 144, 159, 161, 317, 320, 331, 332, 333, 334, 335], "typo": [10, 18, 26, 320, 321], "u": [17, 19, 36, 44, 56, 103, 131, 160, 162, 215, 312, 314, 315, 317, 318, 320, 321, 322, 324, 328, 329, 331, 333, 335, 336, 338], "u4kh": 19, "ubuntu": [15, 23], "uc": 131, "ucb": 56, "ucd": 99, "ucl": 56, "uga": 0, "ugraph": 160, "uk": 6, "ul": 69, "ulid": [42, 43, 70, 71, 101], "ultim": 334, "ultimate_quest": 334, "uml": [13, 320], "unambigu": 333, "unavoid": 333, "unbound": [48, 56, 246, 264, 317, 321, 322, 330, 331, 333, 336], "unbounded_arithmet": 130, "uncaught": [98, 314], "unclassifi": [20, 321], "uncom": 8, "uncompress": 23, "uncondit": 318, "uncondition": 19, "uncontrol": 334, "uncov": [13, 19], "undeclar": 41, "undefin": [48, 190, 330, 333, 335], "undefined_pred": 335, "under": [4, 5, 19, 23, 41, 233, 234, 314, 320, 330, 333, 335], "underestim": 9, "underflow": 190, "underli": [23, 338], "underscor": [23, 41, 99, 335], "underscore_vari": 335, "understand": [9, 13, 22, 320, 321, 329, 330, 333, 335, 336], "undon": 318, "unexpect": [19, 24, 59, 92, 200, 318, 335, 338], "unexpectedli": 41, "unfortun": 317, "unicod": [44, 74, 75, 86, 97, 99, 131, 335], "unicode_": 99, "unicode_ag": 99, "unicode_alphabet": 99, "unicode_ascii_hex_digit": 99, "unicode_bidi_class": 99, "unicode_bidi_control": 99, "unicode_canon": 99, "unicode_cas": 99, "unicode_case_ignor": 99, "unicode_changes_when_casefold": 99, "unicode_changes_when_casemap": 99, "unicode_changes_when_lowercas": 99, "unicode_changes_when_nfkc_casefold": 99, "unicode_changes_when_titlecas": 99, "unicode_changes_when_uppercas": 99, "unicode_circl": 99, "unicode_combining_class": 99, "unicode_compat": 99, "unicode_dash": 99, "unicode_data": [42, 43, 71, 86], "unicode_default_ignor": 99, "unicode_deprec": 99, "unicode_diacrit": 99, "unicode_east_asian_width": 99, "unicode_expands_on_nfc": 99, "unicode_expands_on_nfd": 99, "unicode_expands_on_nfkc": 99, "unicode_expands_on_nfkd": 99, "unicode_extend": 99, "unicode_fc_nfkc": 99, "unicode_fin": 99, "unicode_font": 99, "unicode_fract": 99, "unicode_full_composition_exclus": 99, "unicode_grapheme_bas": 99, "unicode_grapheme_extend": 99, "unicode_grapheme_link": 99, "unicode_hex_digit": 99, "unicode_hyphen": 99, "unicode_id_continu": 99, "unicode_id_start": 99, "unicode_ideograph": 99, "unicode_ids_binary_oper": 99, "unicode_ids_trinary_oper": 99, "unicode_initi": 99, "unicode_isol": 99, "unicode_join_control": 99, "unicode_joining_group": 99, "unicode_joining_typ": 99, "unicode_line_break": 99, "unicode_logical_order_except": 99, "unicode_lowercas": 99, "unicode_math": 99, "unicode_medi": 99, "unicode_name_alia": 99, "unicode_narrow": 99, "unicode_nfc_qc_mayb": 99, "unicode_nfc_qc_no": 99, "unicode_nfd_qc_no": 99, "unicode_nfkc_cf": 99, "unicode_nfkc_qc_mayb": 99, "unicode_nfkc_qc_no": 99, "unicode_nfkd_qc_no": 99, "unicode_nobreak": 99, "unicode_noncharacter_code_point": 99, "unicode_numeric_typ": 99, "unicode_numerical_valu": 99, "unicode_other_alphabet": 99, "unicode_other_default_ignor": 99, "unicode_other_grapheme_extend": 99, "unicode_other_id_continu": 99, "unicode_other_id_start": 99, "unicode_other_lowercas": 99, "unicode_other_math": 99, "unicode_other_uppercas": 99, "unicode_pattern_syntax": 99, "unicode_pattern_white_spac": 99, "unicode_quotation_mark": 99, "unicode_rad": 99, "unicode_range_alphabet": 99, "unicode_script_categori": 99, "unicode_smal": 99, "unicode_soft_dot": 99, "unicode_squar": 99, "unicode_sterm": 99, "unicode_sub": 99, "unicode_sup": 99, "unicode_terminal_punctu": 99, "unicode_unified_ideograph": 99, "unicode_uppercas": 99, "unicode_variation_selector": 99, "unicode_vert": 99, "unicode_white_spac": 99, "unicode_wid": 99, "unicode_xid_continu": 99, "unicode_xid_start": 99, "unif": [19, 20, 24, 41, 92, 124, 215, 233, 234, 240, 318, 330, 331, 332, 333, 335, 338], "unifi": [19, 41, 56, 188, 193, 194, 233, 234, 240, 241, 304, 310, 311, 318, 330, 331, 332, 333], "unification_count": 318, "uninstal": 23, "uninstanti": [244, 320], "uninstantiation_error": [175, 179, 187, 189, 190, 192, 205, 206, 216, 229, 230, 237, 238, 241, 243, 295, 309, 333], "union": [100, 333], "union_find": [42, 43, 71], "unionfind": 100, "unionfind0": 100, "unionfind1": 100, "unionfind2": 100, "unionfind3": 100, "uniqu": [9, 19, 22, 23, 41, 62, 86, 92, 94, 98, 101, 281, 298, 318, 323, 331, 333, 334], "unique_expand": 323, "unit": [4, 8, 19, 36, 41, 79, 80, 86, 91, 97, 110, 314, 317, 318, 321, 324, 327], "univers": [0, 5, 97, 98, 99, 101, 334], "universally_unique_identifi": 101, "universiteit": 1, "unix": 98, "unknown": [19, 20, 23, 112, 155, 201, 292, 327, 330, 331, 333, 334, 335], "unknown_ent": [155, 292, 331, 332, 335], "unknown_pred": [329, 335], "unleash": 318, "unless": [23, 100, 280, 284, 329, 333, 335], "unlik": [12, 318, 323, 329, 330, 333], "unlimit": 322, "unload": 23, "unmatched_direct": 335, "unnecessari": [320, 326], "unpin": 23, "unpredict": [41, 281], "unqualifi": 19, "unquot": 23, "unrecover": 322, "unrel": [312, 317, 324], "unreli": 23, "unrestrict": 333, "unsign": 23, "unsound": 20, "unstabl": 9, "unsupport": 335, "unsur": 327, "until": [13, 41, 67, 193, 203, 294, 300, 301, 302, 305, 306, 311, 318, 323, 328, 329, 334, 338], "untouch": 333, "unus": [10, 56], "unwant": 24, "unzip": 23, "up": [5, 19, 20, 23, 31, 42, 43, 158, 315, 318, 320, 327, 333, 334, 335, 338], "updat": [9, 13, 14, 19, 23, 27, 32, 54, 63, 82, 88, 90, 92, 99, 128, 157, 163, 317, 327, 330, 331, 333, 335, 337, 338], "update_svg_diagram": 23, "upgrad": [22, 23, 31, 42, 43, 327], "upload": 23, "upn": [16, 42, 43], "upn_metr": 9, "upon": [11, 14, 215, 233, 318, 323, 334, 335], "upper": [13, 23, 174], "upper_limit": 225, "urandom": [70, 98, 101], "uri": 0, "url": [0, 9, 13, 15, 16, 19, 42, 43, 45, 46, 99, 105, 320, 333], "url_line_refer": 13, "url_prefix": 13, "us": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 35, 39, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 69, 70, 73, 74, 75, 76, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 108, 109, 110, 112, 113, 118, 119, 121, 122, 124, 126, 127, 131, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 187, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 228, 229, 230, 231, 232, 235, 237, 238, 239, 240, 241, 242, 243, 244, 254, 255, 256, 257, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 292, 294, 295, 302, 305, 307, 309, 312, 314, 315, 316, 317, 319, 320, 322, 324, 325, 326, 327, 330, 331, 332, 334, 335, 336, 337], "usa": 9, "usabl": [19, 31, 42, 43, 68, 99, 142, 333], "usag": [4, 6, 13, 14, 16, 42, 43, 71, 86, 121, 318, 329, 330, 331, 333, 334, 335, 338], "use_modul": [10, 24, 25, 28, 41, 121, 136, 139, 150, 161, 162, 163, 165, 169, 170, 176, 183, 220, 231, 232, 317, 329, 330, 331, 333, 335], "use_module_direct": 163, "use_module_directive_resourc": 163, "use_module_directive_resource_list": 163, "use_module_directive_resource_sequ": 163, "user": [9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 25, 26, 27, 30, 32, 34, 41, 42, 43, 44, 51, 54, 63, 69, 76, 81, 83, 84, 86, 96, 97, 109, 110, 112, 113, 118, 119, 130, 147, 149, 155, 158, 160, 162, 166, 167, 172, 178, 179, 183, 187, 190, 192, 193, 194, 201, 206, 208, 209, 210, 211, 216, 220, 222, 223, 225, 226, 229, 230, 237, 238, 243, 244, 250, 255, 261, 262, 280, 281, 282, 284, 286, 287, 288, 290, 291, 292, 295, 296, 297, 298, 306, 309, 310, 314, 315, 317, 318, 320, 321, 322, 324, 327, 328, 329, 330, 332, 334, 336, 338], "user_defined_typ": 163, "user_error": [19, 223, 318, 334], "user_input": [226, 334], "user_manag": 19, "user_output": [210, 334], "userman": [11, 12, 18], "usernam": 19, "useropt": 84, "userprofil": 335, "uses_direct": 163, "uses_directive_resourc": 163, "uses_directive_resource_list": 163, "uses_directive_resource_sequ": 163, "usual": [9, 12, 13, 14, 18, 19, 20, 23, 26, 27, 28, 41, 51, 60, 68, 73, 84, 96, 112, 142, 160, 281, 285, 287, 305, 314, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338], "utc": [98, 161], "utf": [19, 131], "util": [13, 16, 22, 23, 42, 43, 46, 52, 53, 56, 58, 73, 76, 77, 84, 86, 99, 314, 324, 327, 331, 333], "uuid": [42, 43, 70, 71, 98, 281], "uuid_nul": 101, "uuid_v1": 101, "uuid_v4": 101, "v": [0, 9, 13, 18, 19, 46, 54, 70, 98, 335], "v1": [23, 171, 235, 318], "v2": [19, 23, 171, 235, 318], "valid": [13, 19, 20, 23, 41, 44, 69, 84, 97, 110, 118, 124, 138, 155, 162, 165, 182, 183, 187, 209, 220, 237, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 270, 271, 272, 274, 275, 277, 280, 282, 284, 285, 287, 290, 291, 292, 293, 317, 318, 320, 321, 331, 333, 334, 335, 336], "valid_init_opt": 333, "valid_opt": 84, "valu": [9, 13, 17, 18, 19, 20, 23, 24, 41, 44, 48, 51, 54, 56, 59, 69, 73, 74, 75, 82, 83, 84, 88, 90, 96, 97, 99, 109, 110, 118, 140, 141, 155, 158, 179, 187, 190, 192, 209, 215, 216, 229, 230, 243, 255, 261, 279, 280, 281, 283, 284, 285, 286, 287, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 320, 321, 323, 324, 327, 330, 331, 332, 333, 334, 335], "value1": 320, "value2": 320, "van": 56, "var": [44, 145, 163, 206, 244, 333, 334], "vari": [327, 332, 333], "variabl": [5, 6, 13, 17, 19, 20, 23, 32, 41, 54, 56, 74, 75, 80, 82, 91, 92, 109, 110, 112, 113, 118, 119, 123, 155, 159, 160, 161, 162, 163, 165, 169, 170, 171, 173, 174, 176, 180, 182, 183, 193, 194, 198, 199, 200, 204, 206, 213, 214, 215, 217, 218, 219, 220, 231, 232, 235, 241, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 270, 271, 272, 274, 275, 277, 279, 280, 283, 284, 285, 290, 291, 292, 293, 294, 295, 296, 298, 299, 301, 302, 303, 306, 307, 309, 310, 317, 318, 320, 322, 327, 330, 331, 333, 335, 336], "variable1": 285, "variable_nam": 285, "variablenam": 285, "variant": [19, 41, 99, 199, 287, 295, 306, 309, 310, 333, 335], "variat": 334, "varieti": 326, "variou": 5, "vc16": 19, "vee": 13, "vehicl": [256, 331, 335], "vehicle_lgt": 331, "vein": 324, "vendor": 329, "verb": [141, 320, 333], "verb_phras": 333, "verbos": [10, 19, 23, 333, 334], "verdi": 5, "verdi_neruda": [2, 42, 43], "veri": [5, 56, 317, 322, 324, 327, 336], "verif": 322, "verifi": [19, 23, 27, 41, 44, 321, 322, 333, 335], "verlag": 0, "versatil": 19, "version": [1, 5, 6, 7, 13, 15, 16, 18, 19, 22, 24, 25, 31, 42, 43, 56, 71, 82, 86, 91, 99, 140, 163, 317, 320, 321, 324, 326, 327, 331, 332, 333, 336, 338], "version_data": 335, "versu": [42, 43, 149, 325, 333], "vertex1": 100, "vertex2": 100, "vertic": 100, "via": [9, 12, 13, 19, 20, 23, 41, 44, 81, 317, 324, 326, 329, 330, 331, 336], "victor": [5, 65], "vidal": 103, "view": [5, 42, 43, 319, 325, 333], "viewer": 19, "viewpoint": [281, 335], "violet": 92, "virtual": [16, 34, 41, 42, 43, 47, 97, 325, 326, 330, 331, 332], "viru": 32, "visibl": [41, 76, 182, 183, 220, 320, 329, 330, 333, 338], "visit": [5, 37, 91], "visual": [9, 13], "vitor": 54, "vivomind": 99, "vm": 332, "vocabulari": 9, "void": [69, 73], "vol": 0, "volum": [9, 105], "voronkov": 103, "vpn": 23, "vscode": [13, 318], "vscodium": [13, 318], "w": [0, 96, 149, 211, 223, 318, 333, 334], "w3c": 163, "wa": [1, 5, 9, 19, 30, 41, 73, 99, 110, 169, 170, 223, 322, 323, 324, 330, 331, 333, 334, 338], "wai": [5, 19, 41, 42, 43, 96, 255, 312, 314, 315, 317, 320, 322, 323, 324, 325, 326, 329, 330, 331, 333, 335, 336], "wait": [19, 308, 310, 311, 335, 338], "walk": 326, "wall": [19, 70, 98, 101], "want": [8, 10, 12, 13, 17, 18, 19, 22, 23, 24, 32, 44, 54, 57, 60, 68, 69, 73, 76, 80, 82, 84, 86, 92, 127, 171, 235, 279, 280, 312, 314, 315, 317, 318, 320, 321, 322, 323, 328, 329, 331, 333, 334, 335, 336, 338], "warn": [8, 9, 10, 15, 16, 18, 22, 24, 26, 31, 35, 42, 43, 60, 130, 155, 221, 280, 282, 284, 287, 292, 317, 325, 329, 331, 332, 333, 334], "warrant": 13, "warranti": 5, "watch": 322, "water_jug": 277, "we": [5, 10, 11, 13, 14, 17, 18, 19, 23, 27, 41, 44, 68, 69, 76, 81, 86, 87, 92, 97, 99, 112, 127, 171, 235, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338], "weaker": 19, "web": [1, 3, 4, 5, 6, 11, 19, 21, 22, 23, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106], "webpag": 23, "webperso": 56, "websit": [13, 15, 22, 42, 43, 71, 332, 335], "wednesdai": 24, "weight": [5, 100, 215, 318], "welcom": [5, 23, 99], "well": [5, 41, 323, 324, 329, 330, 335], "welsch": 0, "welsch89": 0, "went": 5, "were": [19, 91, 100, 109, 286, 287, 317, 318, 335], "werti": 19, "weslei": 0, "wg17": 333, "wget": [22, 23], "what": [5, 13, 19, 31, 41, 42, 43, 217, 314, 319, 320, 322, 324, 333, 335, 337, 338], "when": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 31, 41, 42, 43, 44, 48, 50, 51, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 73, 74, 75, 80, 81, 84, 85, 86, 88, 90, 92, 94, 95, 97, 98, 99, 101, 105, 108, 109, 110, 113, 118, 119, 124, 127, 128, 129, 130, 131, 137, 138, 142, 144, 154, 157, 158, 159, 160, 161, 162, 165, 166, 167, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 183, 187, 190, 192, 193, 194, 198, 199, 201, 203, 206, 208, 213, 215, 216, 217, 218, 219, 220, 221, 223, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 254, 255, 256, 257, 264, 279, 280, 281, 283, 284, 285, 286, 287, 288, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "whenev": [10, 23, 34, 41, 100, 118, 254, 256, 257, 312, 315, 318, 320, 321, 322, 332, 333, 335, 338], "where": [9, 13, 17, 19, 20, 23, 27, 41, 44, 48, 54, 64, 67, 69, 73, 74, 75, 82, 83, 84, 109, 113, 119, 127, 130, 131, 159, 160, 161, 162, 180, 255, 277, 287, 293, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "whether": [5, 100, 204], "which": [5, 8, 9, 13, 15, 17, 19, 22, 23, 24, 25, 28, 31, 36, 41, 42, 43, 56, 57, 59, 63, 68, 79, 81, 83, 88, 92, 99, 100, 105, 138, 143, 144, 167, 180, 213, 215, 221, 255, 279, 280, 283, 284, 307, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338], "whichev": 333, "while": [19, 20, 26, 41, 60, 67, 112, 285, 287, 317, 318, 319, 321, 324, 328, 329, 330, 331, 332, 333, 335, 337, 338], "white": [13, 323, 330], "white_spac": 64, "whole": [4, 51, 96, 324], "whom": 331, "whose": [13, 19, 20, 41, 56, 68, 69, 74, 75, 173, 215, 240, 323, 326, 329, 330, 332, 333, 335, 338], "why": [19, 31, 42, 43, 59, 312, 329, 330], "wide": [53, 60, 320, 327, 333, 335], "wider": 329, "widget": 19, "width": [119, 333, 335], "wielemak": [19, 54], "wiki": [18, 100, 101], "wikipedia": [56, 100, 101], "window": [15, 18, 19, 23, 32, 63, 70, 98, 101, 105, 318, 320, 327, 335], "windsurf": 13, "windyroad": 19, "wip": 17, "wish": [328, 333], "within": [13, 19, 28, 41, 73, 98, 108, 109, 110, 113, 118, 119, 142, 149, 155, 158, 166, 172, 193, 194, 203, 216, 218, 219, 239, 281, 300, 304, 305, 308, 311, 317, 318, 321, 323, 324, 328, 329, 330, 331, 333, 335, 336, 337, 338], "without": [5, 9, 10, 13, 19, 20, 23, 25, 26, 41, 54, 68, 81, 82, 88, 90, 147, 178, 238, 281, 286, 287, 310, 312, 317, 318, 324, 326, 329, 330, 331, 332, 333, 334, 335, 338], "word": [19, 23, 41, 112, 121, 256, 322, 328, 330, 334, 335], "wordplai": 5, "work": [9, 10, 13, 16, 18, 20, 22, 23, 24, 31, 42, 43, 44, 48, 63, 71, 72, 73, 82, 83, 86, 91, 92, 106, 126, 128, 138, 193, 194, 279, 280, 281, 283, 284, 314, 316, 317, 318, 324, 327, 329, 330, 331, 333, 334, 335], "workaround": [12, 13, 17, 19, 20, 23, 27, 28, 38, 99, 327, 330, 333], "worker": [317, 338], "worker_1": [297, 298, 299, 301, 302, 303, 304], "workflow": [16, 17, 41, 42, 43, 67, 325], "workshop": [0, 9], "world": [41, 46, 69, 109, 113, 118, 119, 328, 330, 333, 335], "world_1": 68, "worri": [318, 333, 335, 338], "wors": [329, 330], "worst": 19, "worth": [13, 19, 335], "worthless": 30, "would": [5, 8, 9, 13, 17, 19, 23, 24, 25, 34, 76, 84, 99, 130, 142, 180, 217, 287, 312, 318, 320, 321, 328, 329, 330, 333, 334, 335, 338], "wrap": [9, 10, 15, 19, 20, 24, 27, 28, 41, 105, 113, 142, 157, 203, 213, 217, 239, 281, 292, 317, 323, 330, 332, 334, 335], "wrapper": [16, 22, 23, 25, 42, 43, 138, 323, 329, 331, 338], "writabl": 216, "write": [5, 8, 12, 16, 23, 38, 42, 43, 44, 51, 63, 68, 76, 94, 96, 106, 108, 110, 113, 127, 131, 135, 149, 160, 162, 166, 169, 170, 171, 172, 203, 209, 213, 233, 234, 235, 240, 297, 312, 314, 315, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338], "write_canon": 38, "write_depth": 19, "write_fil": [51, 96], "write_log_entri": [333, 338], "write_max_depth": 318, "write_opt": 187, "write_stream": 157, "write_term": [203, 318, 334], "write_to_file_hook": 68, "write_to_stream_hook": [68, 323], "writeq": [8, 166, 172, 233, 234, 240, 297, 315, 318, 322, 323, 333], "written": [5, 19, 41, 46, 51, 56, 68, 69, 91, 92, 96, 110, 171, 235, 279, 280, 318, 333, 335], "wrong": [35, 318], "www": [0, 5, 9, 13, 18, 19, 22, 23, 45, 46, 48, 51, 74, 86, 96, 99, 103, 106], "x": [4, 5, 13, 18, 19, 23, 24, 31, 38, 42, 43, 56, 69, 113, 118, 137, 143, 159, 160, 161, 162, 169, 170, 178, 183, 213, 254, 298, 305, 314, 315, 317, 318, 321, 322, 323, 333, 338], "x1": 318, "x7": 318, "x86_64": 23, "x86_64_nt": 19, "xalan": 18, "xampprocki": 9, "xdg": [15, 335], "xdg_config_hom": 335, "xep": 18, "xerox": 0, "xfx": [19, 149, 323, 333], "xfy": 328, "xhtml": [19, 69], "xhtml11": 69, "xml": [6, 16, 18, 23, 31, 42, 43, 320], "xml_doc": [18, 23, 320], "xml_parser": [2, 42, 43], "xmlgraphic": 18, "xpce": 25, "xref_cal": 13, "xref_diagram": [13, 275], "xref_rel": 13, "xsb": [12, 15, 19, 23, 32, 50, 55, 91, 95, 335], "xsd": 320, "xsl": [18, 19, 320], "xslt": [18, 19, 22, 38, 320], "xsltproc": [18, 19, 22], "xterm": 15, "xunit": [16, 42, 43], "xunit_net_v2": 19, "xunit_net_v2_output": 19, "xunit_net_v2_report": 19, "xunit_output": 19, "xunit_report": 19, "xv_mx": 19, "xvm": [12, 15, 19, 23, 50, 55, 60, 73, 91, 95, 105], "xxx": 51, "xy": 159, "xyx": 11, "xyz": [11, 19], "xyz_condit": 19, "xyz_reset": 19, "y": [0, 4, 19, 24, 46, 51, 56, 70, 98, 113, 137, 159, 162, 213, 254, 321, 333], "yap": [12, 13, 19, 23, 25, 45, 50, 55, 60, 73, 95, 105, 334, 335], "yap64": 19, "yap_profil": 25, "ye": [10, 11, 19, 23, 24, 28, 33, 35, 36, 37, 39, 44, 46, 48, 51, 54, 59, 63, 68, 70, 74, 75, 76, 81, 82, 83, 87, 92, 96, 97, 98, 100, 101, 113, 118, 213, 281, 312, 314, 315, 317, 318, 320, 322, 323, 326, 333, 334, 335, 338], "year": [9, 98, 103, 105, 142, 320, 324], "yellow": [13, 19, 92, 323, 331], "yet": [19, 26, 327, 335], "yield": 41, "york": 0, "you": [4, 5, 6, 8, 12, 13, 14, 15, 18, 19, 23, 24, 25, 28, 29, 32, 35, 36, 39, 54, 57, 58, 60, 68, 69, 73, 76, 80, 82, 84, 92, 95, 97, 98, 99, 166, 172, 201, 279, 280, 284, 314, 317, 318, 320, 323, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338], "youngster": 5, "your": [5, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 29, 32, 35, 36, 38, 42, 43, 50, 55, 56, 57, 60, 67, 68, 85, 86, 93, 97, 99, 287, 314, 318, 320, 323, 325, 327, 329, 330, 331, 333, 334], "yyi": 51, "yyyi": 19, "yz": 18, "z": [19, 113, 159, 162, 318, 333], "zap": 318, "zed": 13, "zeke": 96, "zero": [19, 31, 42, 43, 44, 48, 99, 163, 173, 178, 256, 318, 320, 321, 332, 333, 338], "zero_divisor": 190, "zero_or_error": [163, 333], "zero_or_mor": [108, 109, 110, 112, 113, 118, 119, 146, 163, 166, 171, 172, 173, 174, 175, 176, 182, 183, 201, 209, 210, 211, 217, 218, 219, 220, 226, 231, 235, 250, 252, 253, 259, 260, 261, 262, 263, 270, 271, 272, 274, 275, 277, 281, 285, 288, 290, 291, 293, 297, 306, 312, 314, 333], "zero_or_more_or_error": [163, 333], "zero_or_on": [145, 163, 178, 188, 198, 199, 200, 203, 208, 213, 214, 215, 222, 223, 225, 233, 234, 239, 240, 279, 280, 282, 283, 284, 287, 294, 300, 301, 304, 305, 310, 333], "zero_or_one_or_error": [163, 333], "zip": 23, "zipper": [42, 43, 71], "zir0": 19, "zoom": 13, "zoom_doclet": 14, "zoom_url_suffix": 13, "zzz": 51, "\u03c9": 41}, "titles": ["Bibliography", "<code class=\"docutils literal notranslate\"><span class=\"pre\">flags</span></code>", "Contributions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">iso8601</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pddl_parser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">verdi_neruda</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">xml_parser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">asdf</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">assertions</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">code_metrics</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dead_code_scanner</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">debug_messages</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">debugger</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">diagrams</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">doclet</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">help</span></code>", "Developer Tools", "<code class=\"docutils literal notranslate\"><span class=\"pre\">issue_creator</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lgtdoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lgtunit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">linter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">make</span></code>", "Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">packs</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ports_profiler</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">profiler</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tutor</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">wrapper</span></code>", "Compatibility", "Deployment", "General", "FAQ", "Installation", "Licensing", "Performance", "Portability", "Programming", "Support", "Troubleshooting", "Usability", "Index", "Glossary", "The Logtalk Handbook", "The Logtalk Handbook", "<code class=\"docutils literal notranslate\"><span class=\"pre\">arbitrary</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">assignvars</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">base64</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">basic_types</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cbor</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">core</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">coroutining</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">csv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dates</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dependents</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dictionaries</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dif</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">edcg</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">events</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">expand_library_alias_paths</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">expecteds</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">format</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">genint</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gensym</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">git</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grammars</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">heaps</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hierarchies</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hook_flows</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hook_objects</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">html</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ids</span></code>", "Libraries", "<code class=\"docutils literal notranslate\"><span class=\"pre\">intervals</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">java</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">json</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">json_lines</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">listing</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logging</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">loops</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">meta</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">meta_compiler</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mutations</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">nested_dictionaries</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">optionals</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">options</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">os</span></code>", "Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">queues</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">random</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reader</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">recorded_database</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">redis</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sets</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">statistics</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">term_io</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">timeout</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tsv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">types</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ulid</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unicode_data</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">union_find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">uuid</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">zippers</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fcube</span></code>", "Ports", "<code class=\"docutils literal notranslate\"><span class=\"pre\">metagol</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toychr</span></code>", "Calling predicates in <em>this</em>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">(&#64;)/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">(^^)/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">(&lt;&lt;)/2</span></code>", "Context switching calls", "<code class=\"docutils literal notranslate\"><span class=\"pre\">[]/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">{}/1</span></code>", "Calling external predicates", "Control constructs", "Message delegation", "Message sending", "<code class=\"docutils literal notranslate\"><span class=\"pre\">(::)/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">(::)/1</span></code>", "Calling imported and inherited predicates", "<code class=\"docutils literal notranslate\"><span class=\"pre\">alias/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">built_in/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">category/1-4</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">coinductive/1</span></code>", "Conditional compilation directives", "<code class=\"docutils literal notranslate\"><span class=\"pre\">discontiguous/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dynamic/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dynamic/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">elif/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">encoding/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">end_category/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">end_object/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">end_protocol/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">endif/0</span></code>", "Entity directives", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">include/1</span></code>", "Directives", "<code class=\"docutils literal notranslate\"><span class=\"pre\">info/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">info/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">initialization/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">meta_non_terminal/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">meta_predicate/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mode/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mode_non_terminal/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multifile/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">object/1-5</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">op/3</span></code>", "Predicate directives", "<code class=\"docutils literal notranslate\"><span class=\"pre\">private/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">protected/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">protocol/1-2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">public/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">set_logtalk_flag/2</span></code>", "Source file directives", "<code class=\"docutils literal notranslate\"><span class=\"pre\">synchronized/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">use_module/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">use_module/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">uses/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">uses/2</span></code>", "Grammar", "Reference Manual", "<code class=\"docutils literal notranslate\"><span class=\"pre\">abolish/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">after/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ask_question/5</span></code>", "Question asking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">asserta/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">assertz/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">bagof/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">before/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">call//1-N</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">call/1-N</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">catch/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">clause/2</span></code>", "Coinduction hooks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">coinductive_success_hook/1-2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">consistency_error/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">context/1</span></code>", "Execution context", "<code class=\"docutils literal notranslate\"><span class=\"pre\">current_op/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">current_predicate/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">!/0</span></code>", "Database", "Definite clause grammar rules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">domain_error/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">eos//0</span></code>", "Error handling", "<code class=\"docutils literal notranslate\"><span class=\"pre\">evaluation_error/1</span></code>", "Event handling", "<code class=\"docutils literal notranslate\"><span class=\"pre\">existence_error/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">expand_goal/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">expand_term/2</span></code>", "Term and goal expansion", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fail/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">false/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">findall/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">findall/4</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">forall/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">forward/1</span></code>", "Message forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goal_expansion/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ignore/1</span></code>", "Built-in methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">instantiation_error/0</span></code>", "Logic and control", "<code class=\"docutils literal notranslate\"><span class=\"pre\">message_hook/4</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">message_prefix_file/6</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">message_prefix_stream/4</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">message_tokens//2</span></code>", "Meta-calls", "<code class=\"docutils literal notranslate\"><span class=\"pre\">(\\+)/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">once/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parameter/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">permission_error/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">phrase//1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">phrase/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">phrase/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">predicate_property/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">print_message/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">print_message_token/4</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">print_message_tokens/3</span></code>", "Message printing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">question_hook/6</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">question_prompt_stream/4</span></code>", "Reflection", "<code class=\"docutils literal notranslate\"><span class=\"pre\">repeat/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">representation_error/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">resource_error/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">retract/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">retractall/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">self/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sender/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">setof/3</span></code>", "All solutions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">syntax_error/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">system_error/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">term_expansion/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">throw/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">true/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">type_error/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">uninstantiation_error/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">abolish_category/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">abolish_events/5</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">abolish_object/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">abolish_protocol/1</span></code>", "Abolishing objects, categories and protocols", "<code class=\"docutils literal notranslate\"><span class=\"pre\">category_property/2</span></code>", "Compiling and loading source files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">complements_object/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conforms_to_protocol/2-3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_category/4</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_logtalk_flag/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_object/4</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_protocol/3</span></code>", "Creating new objects, categories and protocols", "<code class=\"docutils literal notranslate\"><span class=\"pre\">current_category/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">current_event/5</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">current_logtalk_flag/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">current_object/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">current_protocol/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">define_events/5</span></code>", "Multi-threading engines", "Objects, categories, and protocols relations", "Enumerating objects, categories and protocols", "Enumerating objects, categories and protocols properties", "Event handling", "<code class=\"docutils literal notranslate\"><span class=\"pre\">extends_category/2-3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">extends_object/2-3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">extends_protocol/2-3</span></code>", "Flags", "<code class=\"docutils literal notranslate\"><span class=\"pre\">implements_protocol/2-3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">imports_category/2-3</span></code>", "Built-in predicates", "<code class=\"docutils literal notranslate\"><span class=\"pre\">instantiates_class/2-3</span></code>", "Linter", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_compile/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_compile/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_library_path/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_linter_hook/7</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_load/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_load/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_load_context/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_make/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_make/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_make_target_action/1</span></code>", "Multi-threading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">object_property/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">protocol_property/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">set_logtalk_flag/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">specializes_class/2-3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_call/1-2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_cancel/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine_create/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine_destroy/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine_fetch/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine_next/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine_next_reified/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine_post/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine_self/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine_yield/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_exit/1-2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_ignore/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_notify/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_once/1-2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_peek/1-2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_wait/1</span></code>", "Dynamic object attributes", "Tutorial", "List predicates", "Profiling programs", "A reflective class-based system", "Categories", "Debugging", "Declarative object-oriented programming", "Documenting", "Error handling", "Event-driven programming", "Term and goal expansion", "Main features", "User Manual", "Inheritance", "Installing Logtalk", "Messages", "Prolog integration and migration", "Nomenclature", "Objects", "Performance", "Predicates", "Printing messages and asking questions", "Writing and running applications", "Protocols", "Reflection", "Multi-threading programming"], "titleterms": {"": 33, "0": [122, 127, 130, 132, 133, 134, 135, 158, 184, 188, 196, 197, 206, 228, 238, 242, 286], "1": [39, 101, 108, 109, 112, 113, 119, 123, 124, 126, 128, 129, 131, 137, 138, 140, 142, 143, 144, 147, 148, 151, 152, 153, 154, 157, 159, 161, 165, 169, 170, 173, 174, 178, 180, 183, 190, 201, 204, 213, 214, 217, 229, 230, 231, 232, 233, 234, 237, 240, 241, 244, 245, 247, 248, 259, 262, 263, 279, 283, 287, 288, 294, 295, 296, 297, 299, 300, 304, 305, 306, 307, 308, 309, 310, 311], "2": [30, 110, 118, 121, 141, 145, 146, 153, 155, 160, 162, 176, 178, 187, 192, 193, 194, 200, 203, 211, 215, 218, 220, 239, 243, 250, 252, 253, 261, 270, 271, 272, 274, 275, 277, 280, 281, 284, 285, 290, 291, 292, 293, 295, 301, 302, 303, 306, 309, 310, 321], "3": [30, 149, 166, 171, 172, 175, 179, 182, 198, 216, 219, 221, 223, 235, 253, 255, 257, 270, 271, 272, 274, 275, 277, 293, 298], "4": [101, 123, 199, 208, 210, 222, 226, 254, 256], "5": [148, 167, 246, 260, 264], "6": [209, 225], "7": 282, "A": 316, "On": 23, "One": 338, "The": [32, 42, 43, 317, 331, 336], "abolish": [165, 249, 317, 322, 331, 336], "abolish_categori": 245, "abolish_ev": 246, "abolish_object": 247, "abolish_protocol": 248, "about": 34, "access": 331, "accumul": 56, "acknowledg": 99, "across": 35, "activ": [318, 322], "ad": 8, "adapt": [68, 327], "add": 22, "addit": 56, "after": [32, 68, 166], "alia": [121, 333], "alias": [317, 331], "all": [22, 30, 236, 318, 333], "allur": 19, "also": [59, 83], "altern": 12, "alwai": 321, "an": [39, 68, 317, 328, 331, 336], "analysi": [9, 10], "ani": 68, "annot": 19, "api": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 23, 24, 26, 27, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106], "appli": [9, 68], "applic": [13, 29, 33, 35, 36, 317, 329, 331, 334, 335, 336], "ar": [28, 30, 32, 34, 35, 37, 39, 321], "arbitrari": 44, "argument": 56, "asdf": 7, "ask": [168, 334], "ask_quest": 167, "assert": [8, 333], "asserta": 169, "assertz": 170, "assignvar": 45, "asynchron": 338, "attribut": 312, "author": 99, "autom": [14, 19], "automat": [8, 19, 332], "avail": 9, "avoid": 335, "backend": [25, 28, 68, 335], "bagof": 171, "base": [28, 30, 38, 316, 324], "base64": 46, "basic_typ": 47, "batch": 335, "befor": [68, 172], "behavior": 337, "best": 23, "between": 324, "bibliographi": 0, "bind": 34, "black": 337, "both": [36, 324, 329], "box": [318, 337], "breakpoint": 318, "broadcast": 328, "brows": 38, "browser": 38, "bug": 19, "built": [205, 276, 317, 321, 331, 332, 333, 336, 338], "built_in": 122, "bypass": 323, "c": 330, "call": [8, 38, 68, 107, 111, 114, 120, 173, 174, 212, 317, 318, 321, 328, 329, 332, 333, 338], "callback": 69, "can": [28, 29, 33, 36], "catch": 175, "categori": [36, 123, 163, 249, 258, 266, 267, 268, 312, 317, 333], "category_properti": 250, "caveat": 10, "cbor": 48, "check": [18, 19, 20, 97, 98, 321], "chocolatei": [13, 22], "circular": 332, "class": [36, 316, 324, 326, 331], "claus": [68, 163, 176, 186, 318, 321, 333], "cleanup": 19, "code": [8, 9, 10, 18, 19, 24, 25, 34, 329, 332, 335], "code_metr": 9, "coinduct": [124, 177, 333], "coinductive_success_hook": 178, "combin": 33, "command": 318, "comment": [320, 335], "commerci": 33, "common": [22, 335], "commun": 322, "compar": 34, "compat": [28, 324], "compil": [24, 25, 28, 30, 33, 34, 35, 38, 39, 68, 125, 163, 251, 318, 321, 323, 327, 329, 332, 335], "complement": 163, "complements_object": 252, "complex": 9, "compon": [36, 324], "composit": 326, "comput": 327, "concern": 322, "concurr": 338, "condit": [125, 163, 318, 335], "conforms_to_protocol": 253, "consider": [23, 332], "consistency_error": 179, "constraint": 28, "construct": 115, "consult": 37, "content": [42, 43, 68, 69], "context": [8, 111, 180, 181, 318, 323, 333], "contribut": 2, "control": [115, 207, 333], "convent": 335, "convert": [8, 329], "core": 49, "core_messag": 317, "coroutin": 50, "count": 318, "coupl": 9, "coverag": 19, "creat": [13, 19, 29, 258, 317, 331, 336], "create_categori": 254, "create_logtalk_flag": 255, "create_object": 256, "create_protocol": 257, "credit": [54, 65, 86, 91, 92], "crucial": 34, "csv": 51, "curli": 82, "current": 27, "current_categori": 259, "current_ev": 260, "current_logtalk_flag": 261, "current_object": 262, "current_op": 182, "current_pred": 183, "current_protocol": 263, "curv": 324, "custom": [13, 27, 69, 318], "cyclomat": 9, "data": [19, 24], "databas": [185, 333], "date": 52, "dead_code_scann": 10, "deal": 329, "debug": [19, 318, 323, 332], "debug_messag": 11, "debugg": [12, 318], "declar": [56, 317, 319, 321, 331, 333], "decod": [46, 48, 74, 75], "default": [44, 68, 323], "defin": [9, 19, 36, 44, 68, 97, 312, 314, 316, 317, 318, 322, 323, 331, 333, 334, 335, 336], "define_ev": 264, "definit": [163, 186, 322, 326, 333], "deleg": [116, 328], "depend": [22, 23, 34, 53], "deploy": 29, "deprec": 321, "depth": 318, "describ": 320, "descript": [99, 108, 109, 110, 112, 113, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 270, 271, 272, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311], "determinist": 19, "develop": [16, 22, 23], "diagram": [13, 320], "dialect": 19, "dictionari": 54, "dif": 55, "direct": [39, 125, 136, 139, 150, 156, 163, 317, 320, 321, 329, 331, 333, 336], "discontigu": [126, 333], "distribut": [33, 327], "do": 30, "doclet": 14, "document": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 26, 27, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 317, 320, 331, 333, 336], "doe": [30, 34, 38], "domain_error": 187, "driven": [322, 324], "duplic": 321, "dynam": [34, 127, 128, 312, 317, 331, 333, 336], "e": 38, "edcg": 56, "element": [13, 69, 321], "elif": 129, "els": 130, "enabl": 338, "encapsul": 329, "encod": [46, 48, 74, 75, 131, 335], "encrypt": 23, "end_categori": 132, "end_object": 133, "end_protocol": 134, "endif": 135, "engin": [265, 338], "ensure_load": 39, "entiti": [38, 68, 136, 163, 320, 321], "enumer": [267, 268], "environ": 23, "eo": 188, "equival": 39, "error": [8, 32, 38, 108, 109, 110, 112, 113, 118, 119, 155, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 270, 271, 272, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 321, 333, 335], "evaluation_error": 190, "event": [57, 191, 269, 315, 318, 322, 324, 328], "exampl": [97, 108, 109, 110, 112, 113, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 270, 271, 272, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 327], "except": [320, 321], "exclud": [9, 10], "execut": [19, 181, 318, 333], "exist": [317, 331, 336], "existence_error": 192, "expand": [68, 323, 336], "expand_go": 193, "expand_library_alias_path": 58, "expand_term": 194, "expans": [30, 68, 195, 318, 323, 329, 332], "expect": [59, 321], "experiment": 15, "export": 19, "express": [163, 333], "extend": [20, 163], "extends_categori": 270, "extends_object": 271, "extends_protocol": 272, "extern": 114, "factor": 34, "fail": [19, 196, 321], "failur": 8, "fals": [197, 321], "faq": 31, "fcube": 103, "featur": [15, 324, 335], "file": [8, 10, 13, 19, 20, 24, 38, 39, 68, 99, 156, 163, 251, 317, 318, 320, 323, 327, 329, 331, 334, 335, 336], "final": 33, "find": [317, 322, 331, 333, 336], "findal": [198, 199], "firefox": 38, "flag": [1, 22, 163, 273, 335], "flaki": 19, "foral": 200, "foreign": 333, "format": [19, 60, 320], "forward": [201, 202, 336], "fragment": 69, "from": [8, 9, 10, 328], "full": 22, "function": [22, 39], "g": 38, "gecko": 38, "gener": [18, 19, 24, 30, 34, 44, 69, 98, 101, 322, 328, 332], "genint": 61, "gensym": 62, "get": 32, "git": 63, "glossari": 41, "goal": [19, 68, 163, 195, 321, 323, 338], "goal_expans": 203, "good": 34, "grammar": [64, 68, 163, 186, 323, 333], "graph": 13, "guidelin": 335, "halstead": 9, "handbook": [42, 43], "handl": [23, 189, 191, 269, 321, 322, 333], "handler": 322, "hardwar": 327, "heap": 65, "help": [15, 19, 20, 21, 23], "hierarchi": [36, 66, 324, 326], "high": 324, "hit": 318, "homebrew": [13, 22], "hook": [177, 323], "hook_flow": 67, "hook_object": 68, "hot": 317, "how": 34, "html": [38, 69], "i": [28, 29, 30, 32, 34, 36, 39], "id": 70, "identifi": 163, "ignor": 204, "implement": [30, 34, 163, 324, 326, 336], "implements_protocol": 274, "import": [120, 163, 312, 317, 328, 332], "imports_categori": 275, "includ": 138, "independ": 68, "index": 40, "info": [140, 141], "inform": 8, "inherit": [120, 324, 326, 328, 332], "initi": [142, 331], "inlin": [320, 332], "input": 19, "instal": [13, 22, 23, 32, 327], "instanc": 331, "instanti": 163, "instantiates_class": 277, "instantiation_error": 206, "integr": [10, 14, 32, 324, 329], "intercept": 334, "interfac": 324, "interpret": [24, 34], "interv": 72, "introduct": 56, "iso": 324, "iso8601": 3, "issu": [6, 12, 15, 17, 19, 23, 24, 44, 73, 74, 75, 80, 85, 90, 91, 95, 99], "issue_cr": 17, "java": [73, 330], "json": 74, "json_lin": 75, "kind": 34, "known": [6, 12, 15, 17, 19, 23, 24, 44, 73, 74, 75, 80, 85, 90, 91, 95, 99], "lambda": [163, 321, 333], "languag": 13, "latest": 32, "learn": 324, "level": [318, 324], "lgtdoc": 18, "lgtunit": 19, "librari": [71, 86, 327, 335], "licens": [33, 99], "limit": [19, 27], "line": 8, "link": 13, "lint": [20, 335], "linter": [18, 20, 278, 335], "list": [76, 314], "load": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 25, 26, 27, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 251, 317, 323, 329, 331, 335, 336], "loader": 335, "local": [19, 321, 326, 332], "log": [77, 318], "logic": [207, 324, 333], "logtalk": [28, 29, 30, 32, 33, 34, 35, 36, 38, 42, 43, 321, 324, 327, 329, 331, 335], "logtalk_compil": [279, 280], "logtalk_library_path": 281, "logtalk_linter_hook": 282, "logtalk_load": [283, 284], "logtalk_load_context": 285, "logtalk_mak": [286, 287], "logtalk_make_target_act": 288, "lookup": 326, "loop": 78, "maco": [13, 22], "macport": [13, 22], "main": [19, 20, 324], "make": [10, 14, 21, 39, 338], "manual": [164, 325], "mechan": [318, 329], "memori": 19, "messag": [8, 19, 34, 116, 117, 202, 224, 315, 318, 321, 328, 332, 334], "message_hook": 208, "message_prefix_fil": 209, "message_prefix_stream": 210, "message_token": 211, "meta": [34, 79, 167, 171, 173, 174, 198, 199, 200, 204, 212, 213, 214, 217, 218, 219, 225, 235, 294, 295, 298, 307, 309, 318, 332, 333, 334], "meta_compil": 80, "meta_non_termin": 143, "meta_pred": 144, "metagol": 105, "method": [205, 321, 333], "metric": 9, "migrat": 329, "minim": 19, "miss": 321, "misspel": 321, "mix": 36, "mock": 19, "mode": [108, 109, 110, 112, 113, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 270, 271, 272, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 318, 332, 333], "mode_non_termin": 146, "model": 318, "modul": [9, 10, 13, 20, 24, 28, 30, 34, 68, 163, 328, 329, 332, 333], "monitor": [315, 322, 336], "most": [34, 324], "multi": [265, 289, 317, 324, 331, 334, 335, 336, 338], "multifil": [147, 329, 333], "multipl": [23, 324, 326], "mutat": 81, "my": [35, 36], "n": [173, 174], "name": [163, 333, 335], "need": 30, "nested_dictionari": 82, "new": [9, 44, 97, 258, 317, 322, 331, 336], "nomenclatur": 330, "non": [19, 38, 173, 217, 333], "note": [13, 86], "notif": 338, "null": 101, "number": [30, 108, 109, 110, 112, 113, 118, 119, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 270, 271, 272, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311], "o": 85, "object": [19, 28, 34, 68, 148, 163, 249, 258, 266, 267, 268, 312, 314, 317, 319, 323, 324, 328, 329, 331, 333, 338], "object_properti": 290, "onc": 214, "onli": 335, "ons": 22, "op": 149, "oper": [15, 22, 35, 327, 328, 333], "optim": [332, 335], "option": [38, 83, 84, 335], "order": [322, 326, 332], "orient": [319, 324], "other": [13, 68, 86, 321, 332, 335], "output": [19, 68, 334], "overhead": 332, "overview": [22, 86, 327], "pack": 23, "packag": 28, "parallel": 335, "paramet": [215, 331], "parametr": [19, 317, 324, 331], "pars": 333, "parti": 9, "pass": [56, 335], "patch": 317, "path": 329, "pddl_parser": 4, "perform": [34, 322, 324, 328, 332, 335, 338], "permission_error": 216, "phrase": [217, 218, 219], "pin": 23, "pl": 99, "plain": [9, 10, 13, 20, 24, 34, 68, 329, 333], "point": 318, "port": [24, 104, 318], "portabl": [23, 35, 60, 321, 335], "ports_profil": 24, "powershel": 22, "practic": 23, "pre": 44, "predic": [19, 38, 56, 68, 107, 114, 120, 150, 163, 167, 171, 174, 198, 199, 200, 204, 213, 214, 218, 219, 225, 235, 276, 294, 295, 298, 307, 309, 314, 317, 318, 320, 321, 324, 326, 328, 329, 332, 333, 338], "predicate_properti": 220, "prefix": 334, "prevent": 68, "print": [24, 68, 224, 318, 334], "print_messag": 221, "print_message_token": [222, 223], "privat": [151, 324, 326], "procedur": 318, "process": [320, 335], "profession": 37, "profil": [24, 25, 315, 318], "program": [36, 315, 318, 319, 322, 324, 338], "prolog": [9, 10, 13, 20, 23, 24, 25, 28, 30, 33, 34, 35, 39, 68, 321, 323, 324, 327, 329, 330, 333, 335], "proof": [108, 109, 110, 112, 113, 118, 119, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 270, 271, 272, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311], "properti": [163, 268, 317, 331, 333, 336], "proprietari": 329, "protect": [152, 324, 326], "protocol": [36, 153, 163, 249, 258, 266, 267, 268, 314, 326, 336], "protocol_properti": 291, "prototyp": [36, 324, 326, 331], "prove": 338, "provid": 36, "proxi": 331, "pseudo": 331, "public": [154, 324, 326], "python": [22, 330], "question": [168, 334], "question_hook": 225, "question_prompt_stream": 226, "queue": 87, "quickcheck": 19, "rais": 321, "random": 88, "read": 335, "reader": 89, "recorded_databas": 90, "redefin": [326, 333], "redefinit": 321, "redhat": 22, "redi": 91, "redirect": 8, "refer": [164, 332], "reflect": [36, 227, 316, 333, 337], "registri": 23, "relat": [163, 266], "relationship": [317, 331, 336], "reload": 335, "remov": 318, "render": 38, "repeat": 228, "report": [19, 24, 38], "represent": [48, 74, 75, 82], "representation_error": 229, "reproduc": 44, "requir": [13, 15, 17, 18, 22, 23, 28, 99, 327], "reserv": 333, "resource_error": 230, "restor": 68, "result": [19, 38, 68], "retract": [231, 333], "retractal": 232, "rule": [68, 186, 323, 333], "run": [14, 19, 28, 335], "runtim": [317, 321, 327, 331, 336], "same": [28, 36], "scan": 10, "scope": [44, 163, 324, 333], "script": 32, "search": 329, "secur": 23, "see": [59, 83], "select": [19, 318, 326], "self": [233, 328], "semant": 322, "send": [34, 117, 321, 328], "sender": 234, "separ": 324, "sequenc": 44, "servic": 37, "set": [92, 335], "set_logtalk_flag": [155, 292], "setof": 235, "setup": 19, "shortcut": [32, 39], "should": 36, "show": 38, "shrinker": 44, "sign": 23, "simplif": 332, "singl": 23, "singleton": 321, "size": [44, 332], "skip": 19, "smalltalk": 330, "smooth": 324, "softwar": 327, "solut": [236, 333], "sourc": [8, 18, 24, 25, 38, 39, 156, 163, 251, 318, 323, 327, 329, 332, 335], "special": [163, 326], "specializes_class": 293, "specif": 23, "standalon": 29, "standard": [324, 333], "start": [32, 335], "static": 34, "statist": 93, "storag": 23, "stream": [68, 334], "structur": 337, "style": 335, "success": 38, "summari": [99, 312, 314, 315, 316], "support": [13, 15, 25, 36, 37, 324, 329, 338], "suppress": [8, 19, 68], "suspici": 321, "switch": [111, 318], "synchron": [157, 333, 338], "syntax": 56, "syntax_error": 237, "system": [15, 22, 35, 316, 324, 327], "system_error": 238, "tap": 19, "templat": [121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 167, 171, 173, 174, 198, 199, 200, 204, 213, 214, 217, 218, 219, 225, 235, 294, 295, 298, 307, 309], "term": [30, 44, 68, 82, 163, 195, 318, 321, 323, 329], "term_expans": 239, "term_io": 94, "termin": [173, 217, 333], "test": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 18, 19, 23, 24, 25, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106], "text": [320, 335], "them": 68, "thi": [107, 240], "third": 9, "thread": [158, 265, 289, 294, 317, 324, 331, 334, 336, 338], "threaded_cal": 295, "threaded_cancel": 296, "threaded_engin": 297, "threaded_engine_cr": 298, "threaded_engine_destroi": 299, "threaded_engine_fetch": 300, "threaded_engine_next": 301, "threaded_engine_next_reifi": 302, "threaded_engine_post": 303, "threaded_engine_self": 304, "threaded_engine_yield": 305, "threaded_exit": 306, "threaded_ignor": 307, "threaded_notifi": 308, "threaded_onc": 309, "threaded_peek": 310, "threaded_wait": 311, "through": 338, "throw": [241, 333], "time": [19, 28], "timeout": [19, 95], "token": 334, "tool": [9, 10, 12, 14, 16, 22], "toychr": 106, "trace": 318, "tracker": 19, "train": 37, "transpar": 337, "trigger": 318, "trivial": 321, "troubleshoot": 38, "true": [242, 321], "tsv": 96, "tutor": 26, "tutori": 313, "type": [44, 97, 98, 321], "type_error": 243, "ubuntu": 22, "ulid": 98, "unicode_arabic_shap": 99, "unicode_bidi_mirror": 99, "unicode_block": 99, "unicode_case_fold": 99, "unicode_categori": 99, "unicode_cjk_rad": 99, "unicode_composition_exclus": 99, "unicode_core_properti": 99, "unicode_data": 99, "unicode_decomposition_typ": 99, "unicode_derived_ag": 99, "unicode_derived_bidi_class": 99, "unicode_derived_combining_class": 99, "unicode_derived_core_properti": 99, "unicode_derived_decomposition_typ": 99, "unicode_derived_east_asian_width": 99, "unicode_derived_joining_group": 99, "unicode_derived_joining_typ": 99, "unicode_derived_line_break": 99, "unicode_derived_normalization_prop": 99, "unicode_derived_numeric_typ": 99, "unicode_derived_numeric_valu": 99, "unicode_hangul_syllable_typ": 99, "unicode_indic_matra_categori": 99, "unicode_indic_syllabic_categori": 99, "unicode_jamo": 99, "unicode_nam": 99, "unicode_name_alias": 99, "unicode_prop_list": 99, "unicode_range_script": 99, "unicode_script": 99, "unicode_script_extens": 99, "unicode_special_cas": 99, "unicode_unihan_vari": 99, "unicode_vers": 99, "uninstantiation_error": 244, "union": 326, "union_find": 100, "unknown": 321, "unsupport": 329, "up": 32, "upgrad": 32, "upn": 9, "url": 23, "us": [28, 30, 33, 34, 36, 38, 68, 161, 162, 318, 321, 323, 328, 329, 333, 338], "usabl": 39, "usag": [9, 10, 11, 12, 15, 17, 19, 23, 26, 44, 50, 51, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 73, 76, 78, 79, 80, 81, 82, 83, 84, 87, 88, 90, 92, 96, 99, 100], "use_modul": [159, 160, 321], "user": [19, 68, 323, 325, 331, 333, 335], "util": 19, "uuid": 101, "variabl": 321, "verdi_neruda": 5, "version": [23, 30, 32, 101, 335], "versu": 326, "view": [320, 337], "virtual": [23, 323], "wai": 338, "warn": [19, 20, 21, 23, 38, 321, 335], "websit": 99, "what": [28, 33, 34, 36], "when": [32, 34, 38], "which": 34, "why": 30, "window": [13, 22], "work": [19, 32, 38, 69], "workflow": [27, 68, 323], "wrap": 68, "wrapper": 27, "write": [19, 318, 335], "x": 30, "xml": [19, 38], "xml_parser": 6, "xunit": 19, "your": [8, 335], "zero": 38, "zipper": 102}})