Search.setIndex({"docnames": ["bibliography", "contributions/flags", "contributions/index", "contributions/iso8601", "contributions/pddl_parser", "contributions/verdi_neruda", "contributions/xml_parser", "devtools/asdf", "devtools/assertions", "devtools/code_metrics", "devtools/dead_code_scanner", "devtools/debug_messages", "devtools/debugger", "devtools/diagrams", "devtools/doclet", "devtools/help", "devtools/index", "devtools/issue_creator", "devtools/lgtdoc", "devtools/lgtunit", "devtools/linter", "devtools/make", "devtools/overview", "devtools/packs", "devtools/ports_profiler", "devtools/profiler", "devtools/tutor", "devtools/wrapper", "faq/compatibility", "faq/deployment", "faq/general", "faq/index", "faq/installation", "faq/licensing", "faq/performance", "faq/portability", "faq/programming", "faq/support", "faq/troubleshooting", "faq/usability", "genindex", "glossary", "index", "index_latexpdf", "libraries/arbitrary", "libraries/assignvars", "libraries/base64", "libraries/basic_types", "libraries/cbor", "libraries/core", "libraries/coroutining", "libraries/csv", "libraries/dates", "libraries/dependents", "libraries/dictionaries", "libraries/dif", "libraries/edcg", "libraries/events", "libraries/expand_library_alias_paths", "libraries/expecteds", "libraries/format", "libraries/genint", "libraries/gensym", "libraries/git", "libraries/grammars", "libraries/heaps", "libraries/hierarchies", "libraries/hook_flows", "libraries/hook_objects", "libraries/html", "libraries/ids", "libraries/index", "libraries/intervals", "libraries/java", "libraries/json", "libraries/listing", "libraries/logging", "libraries/loops", "libraries/meta", "libraries/meta_compiler", "libraries/mutations", "libraries/nested_dictionaries", "libraries/optionals", "libraries/options", "libraries/os", "libraries/overview", "libraries/queues", "libraries/random", "libraries/reader", "libraries/recorded_database", "libraries/redis", "libraries/sets", "libraries/statistics", "libraries/term_io", "libraries/timeout", "libraries/tsv", "libraries/types", "libraries/ulid", "libraries/unicode_data", "libraries/union_find", "libraries/uuid", "libraries/zippers", "ports/fcube", "ports/index", "ports/metagol", "ports/toychr", "refman/control/call_in_this", "refman/control/call_in_this_1", "refman/control/call_super_1", "refman/control/context_switch_2", "refman/control/context_switching_calls", "refman/control/delegate_message_1", "refman/control/external_call_1", "refman/control/external_calls", "refman/control/index", "refman/control/message_delegation", "refman/control/message_sending", "refman/control/send_to_object_2", "refman/control/send_to_self_1", "refman/control/super_calls", "refman/directives/alias_2", "refman/directives/built_in_0", "refman/directives/category_1_4", "refman/directives/coinductive_1", "refman/directives/conditional_compilation_directives", "refman/directives/discontiguous_1", "refman/directives/dynamic_0", "refman/directives/dynamic_1", "refman/directives/elif_1", "refman/directives/else_0", "refman/directives/encoding_1", "refman/directives/end_category_0", "refman/directives/end_object_0", "refman/directives/end_protocol_0", "refman/directives/endif_0", "refman/directives/entity_directives", "refman/directives/if_1", "refman/directives/include_1", "refman/directives/index", "refman/directives/info_1", "refman/directives/info_2", "refman/directives/initialization_1", "refman/directives/meta_non_terminal_1", "refman/directives/meta_predicate_1", "refman/directives/mode_2", "refman/directives/multifile_1", "refman/directives/object_1_5", "refman/directives/op_3", "refman/directives/predicate_directives", "refman/directives/private_1", "refman/directives/protected_1", "refman/directives/protocol_1_2", "refman/directives/public_1", "refman/directives/set_logtalk_flag_2", "refman/directives/source_file_directives", "refman/directives/synchronized_1", "refman/directives/threaded_0", "refman/directives/use_module_1", "refman/directives/use_module_2", "refman/directives/uses_1", "refman/directives/uses_2", "refman/grammar", "refman/index", "refman/methods/abolish_1", "refman/methods/after_3", "refman/methods/ask_question_5", "refman/methods/asking_methods", "refman/methods/asserta_1", "refman/methods/assertz_1", "refman/methods/bagof_3", "refman/methods/before_3", "refman/methods/call_1", "refman/methods/call_N", "refman/methods/catch_3", "refman/methods/clause_2", "refman/methods/coinduction_methods", "refman/methods/coinductive_success_hook_1_2", "refman/methods/consistency_error_3", "refman/methods/context_1", "refman/methods/context_methods", "refman/methods/current_op_3", "refman/methods/current_predicate_1", "refman/methods/cut_0", "refman/methods/database_methods", "refman/methods/dcg_methods", "refman/methods/domain_error_2", "refman/methods/eos_0", "refman/methods/error_handling_methods", "refman/methods/evaluation_error_1", "refman/methods/event_methods", "refman/methods/existence_error_2", "refman/methods/expand_goal_2", "refman/methods/expand_term_2", "refman/methods/expansion_methods", "refman/methods/fail_0", "refman/methods/false_0", "refman/methods/findall_3", "refman/methods/findall_4", "refman/methods/forall_2", "refman/methods/forward_1", "refman/methods/forwarding_methods", "refman/methods/goal_expansion_2", "refman/methods/ignore_1", "refman/methods/index", "refman/methods/instantiation_error_0", "refman/methods/logic_and_control_methods", "refman/methods/message_hook_4", "refman/methods/message_prefix_stream_4", "refman/methods/message_tokens_2", "refman/methods/meta_call_methods", "refman/methods/not_1", "refman/methods/once_1", "refman/methods/parameter_2", "refman/methods/permission_error_3", "refman/methods/phrase_1", "refman/methods/phrase_2", "refman/methods/phrase_3", "refman/methods/predicate_property_2", "refman/methods/print_message_3", "refman/methods/print_message_token_4", "refman/methods/print_message_tokens_3", "refman/methods/printing_methods", "refman/methods/question_hook_6", "refman/methods/question_prompt_stream_4", "refman/methods/reflection_methods", "refman/methods/repeat_0", "refman/methods/representation_error_1", "refman/methods/resource_error_1", "refman/methods/retract_1", "refman/methods/retractall_1", "refman/methods/self_1", "refman/methods/sender_1", "refman/methods/setof_3", "refman/methods/solution_methods", "refman/methods/syntax_error_1", "refman/methods/system_error_0", "refman/methods/term_expansion_2", "refman/methods/this_1", "refman/methods/throw_1", "refman/methods/true_0", "refman/methods/type_error_2", "refman/methods/uninstantiation_error_1", "refman/predicates/abolish_category_1", "refman/predicates/abolish_events_5", "refman/predicates/abolish_object_1", "refman/predicates/abolish_protocol_1", "refman/predicates/abolishing_entity_predicates", "refman/predicates/category_property_2", "refman/predicates/compiling_predicates", "refman/predicates/complements_object_2", "refman/predicates/conforms_to_protocol_2_3", "refman/predicates/create_category_4", "refman/predicates/create_logtalk_flag_3", "refman/predicates/create_object_4", "refman/predicates/create_protocol_3", "refman/predicates/creating_entity_predicates", "refman/predicates/current_category_1", "refman/predicates/current_event_5", "refman/predicates/current_logtalk_flag_2", "refman/predicates/current_object_1", "refman/predicates/current_protocol_1", "refman/predicates/define_events_5", "refman/predicates/engine_predicates", "refman/predicates/entity_relation_predicates", "refman/predicates/enumerating_entity_predicates", "refman/predicates/enumerating_entity_property_predicates", "refman/predicates/event_handling_predicates", "refman/predicates/extends_category_2_3", "refman/predicates/extends_object_2_3", "refman/predicates/extends_protocol_2_3", "refman/predicates/flag_predicates", "refman/predicates/implements_protocol_2_3", "refman/predicates/imports_category_2_3", "refman/predicates/index", "refman/predicates/instantiates_class_2_3", "refman/predicates/linter_predicates", "refman/predicates/logtalk_compile_1", "refman/predicates/logtalk_compile_2", "refman/predicates/logtalk_library_path_2", "refman/predicates/logtalk_linter_hook_7", "refman/predicates/logtalk_load_1", "refman/predicates/logtalk_load_2", "refman/predicates/logtalk_load_context_2", "refman/predicates/logtalk_make_0", "refman/predicates/logtalk_make_1", "refman/predicates/logtalk_make_target_action_1", "refman/predicates/multi_threading_predicates", "refman/predicates/object_property_2", "refman/predicates/protocol_property_2", "refman/predicates/set_logtalk_flag_2", "refman/predicates/specializes_class_2_3", "refman/predicates/threaded_1", "refman/predicates/threaded_call_1_2", "refman/predicates/threaded_cancel_1", "refman/predicates/threaded_engine_1", "refman/predicates/threaded_engine_create_3", "refman/predicates/threaded_engine_destroy_1", "refman/predicates/threaded_engine_fetch_1", "refman/predicates/threaded_engine_next_2", "refman/predicates/threaded_engine_next_reified_2", "refman/predicates/threaded_engine_post_2", "refman/predicates/threaded_engine_self_1", "refman/predicates/threaded_engine_yield_1", "refman/predicates/threaded_exit_1_2", "refman/predicates/threaded_ignore_1", "refman/predicates/threaded_notify_1", "refman/predicates/threaded_once_1_2", "refman/predicates/threaded_peek_1_2", "refman/predicates/threaded_wait_1", "tutorial/attributes", "tutorial/index", "tutorial/lists", "tutorial/profiling", "tutorial/reflection", "userman/categories", "userman/debugging", "userman/declarative", "userman/documenting", "userman/errors", "userman/events", "userman/expansion", "userman/features", "userman/index", "userman/inheritance", "userman/installing", "userman/messages", "userman/migration", "userman/nomenclature", "userman/objects", "userman/performance", "userman/predicates", "userman/printing", "userman/programming", "userman/protocols", "userman/reflection", "userman/threads"], "filenames": ["bibliography.rst", "contributions/flags.rst", "contributions/index.rst", "contributions/iso8601.rst", "contributions/pddl_parser.rst", "contributions/verdi_neruda.rst", "contributions/xml_parser.rst", "devtools/asdf.rst", "devtools/assertions.rst", "devtools/code_metrics.rst", "devtools/dead_code_scanner.rst", "devtools/debug_messages.rst", "devtools/debugger.rst", "devtools/diagrams.rst", "devtools/doclet.rst", "devtools/help.rst", "devtools/index.rst", "devtools/issue_creator.rst", "devtools/lgtdoc.rst", "devtools/lgtunit.rst", "devtools/linter.rst", "devtools/make.rst", "devtools/overview.rst", "devtools/packs.rst", "devtools/ports_profiler.rst", "devtools/profiler.rst", "devtools/tutor.rst", "devtools/wrapper.rst", "faq/compatibility.rst", "faq/deployment.rst", "faq/general.rst", "faq/index.rst", "faq/installation.rst", "faq/licensing.rst", "faq/performance.rst", "faq/portability.rst", "faq/programming.rst", "faq/support.rst", "faq/troubleshooting.rst", "faq/usability.rst", "genindex.rst", "glossary.rst", "index.rst", "index_latexpdf.rst", "libraries/arbitrary.rst", "libraries/assignvars.rst", "libraries/base64.rst", "libraries/basic_types.rst", "libraries/cbor.rst", "libraries/core.rst", "libraries/coroutining.rst", "libraries/csv.rst", "libraries/dates.rst", "libraries/dependents.rst", "libraries/dictionaries.rst", "libraries/dif.rst", "libraries/edcg.rst", "libraries/events.rst", "libraries/expand_library_alias_paths.rst", "libraries/expecteds.rst", "libraries/format.rst", "libraries/genint.rst", "libraries/gensym.rst", "libraries/git.rst", "libraries/grammars.rst", "libraries/heaps.rst", "libraries/hierarchies.rst", "libraries/hook_flows.rst", "libraries/hook_objects.rst", "libraries/html.rst", "libraries/ids.rst", "libraries/index.rst", "libraries/intervals.rst", "libraries/java.rst", "libraries/json.rst", "libraries/listing.rst", "libraries/logging.rst", "libraries/loops.rst", "libraries/meta.rst", "libraries/meta_compiler.rst", "libraries/mutations.rst", "libraries/nested_dictionaries.rst", "libraries/optionals.rst", "libraries/options.rst", "libraries/os.rst", "libraries/overview.rst", "libraries/queues.rst", "libraries/random.rst", "libraries/reader.rst", "libraries/recorded_database.rst", "libraries/redis.rst", "libraries/sets.rst", "libraries/statistics.rst", "libraries/term_io.rst", "libraries/timeout.rst", "libraries/tsv.rst", "libraries/types.rst", "libraries/ulid.rst", "libraries/unicode_data.rst", "libraries/union_find.rst", "libraries/uuid.rst", "libraries/zippers.rst", "ports/fcube.rst", "ports/index.rst", "ports/metagol.rst", "ports/toychr.rst", "refman/control/call_in_this.rst", "refman/control/call_in_this_1.rst", "refman/control/call_super_1.rst", "refman/control/context_switch_2.rst", "refman/control/context_switching_calls.rst", "refman/control/delegate_message_1.rst", "refman/control/external_call_1.rst", "refman/control/external_calls.rst", "refman/control/index.rst", "refman/control/message_delegation.rst", "refman/control/message_sending.rst", "refman/control/send_to_object_2.rst", "refman/control/send_to_self_1.rst", "refman/control/super_calls.rst", "refman/directives/alias_2.rst", "refman/directives/built_in_0.rst", "refman/directives/category_1_4.rst", "refman/directives/coinductive_1.rst", "refman/directives/conditional_compilation_directives.rst", "refman/directives/discontiguous_1.rst", "refman/directives/dynamic_0.rst", "refman/directives/dynamic_1.rst", "refman/directives/elif_1.rst", "refman/directives/else_0.rst", "refman/directives/encoding_1.rst", "refman/directives/end_category_0.rst", "refman/directives/end_object_0.rst", "refman/directives/end_protocol_0.rst", "refman/directives/endif_0.rst", "refman/directives/entity_directives.rst", "refman/directives/if_1.rst", "refman/directives/include_1.rst", "refman/directives/index.rst", "refman/directives/info_1.rst", "refman/directives/info_2.rst", "refman/directives/initialization_1.rst", "refman/directives/meta_non_terminal_1.rst", "refman/directives/meta_predicate_1.rst", "refman/directives/mode_2.rst", "refman/directives/multifile_1.rst", "refman/directives/object_1_5.rst", "refman/directives/op_3.rst", "refman/directives/predicate_directives.rst", "refman/directives/private_1.rst", "refman/directives/protected_1.rst", "refman/directives/protocol_1_2.rst", "refman/directives/public_1.rst", "refman/directives/set_logtalk_flag_2.rst", "refman/directives/source_file_directives.rst", "refman/directives/synchronized_1.rst", "refman/directives/threaded_0.rst", "refman/directives/use_module_1.rst", "refman/directives/use_module_2.rst", "refman/directives/uses_1.rst", "refman/directives/uses_2.rst", "refman/grammar.rst", "refman/index.rst", "refman/methods/abolish_1.rst", "refman/methods/after_3.rst", "refman/methods/ask_question_5.rst", "refman/methods/asking_methods.rst", "refman/methods/asserta_1.rst", "refman/methods/assertz_1.rst", "refman/methods/bagof_3.rst", "refman/methods/before_3.rst", "refman/methods/call_1.rst", "refman/methods/call_N.rst", "refman/methods/catch_3.rst", "refman/methods/clause_2.rst", "refman/methods/coinduction_methods.rst", "refman/methods/coinductive_success_hook_1_2.rst", "refman/methods/consistency_error_3.rst", "refman/methods/context_1.rst", "refman/methods/context_methods.rst", "refman/methods/current_op_3.rst", "refman/methods/current_predicate_1.rst", "refman/methods/cut_0.rst", "refman/methods/database_methods.rst", "refman/methods/dcg_methods.rst", "refman/methods/domain_error_2.rst", "refman/methods/eos_0.rst", "refman/methods/error_handling_methods.rst", "refman/methods/evaluation_error_1.rst", "refman/methods/event_methods.rst", "refman/methods/existence_error_2.rst", "refman/methods/expand_goal_2.rst", "refman/methods/expand_term_2.rst", "refman/methods/expansion_methods.rst", "refman/methods/fail_0.rst", "refman/methods/false_0.rst", "refman/methods/findall_3.rst", "refman/methods/findall_4.rst", "refman/methods/forall_2.rst", "refman/methods/forward_1.rst", "refman/methods/forwarding_methods.rst", "refman/methods/goal_expansion_2.rst", "refman/methods/ignore_1.rst", "refman/methods/index.rst", "refman/methods/instantiation_error_0.rst", "refman/methods/logic_and_control_methods.rst", "refman/methods/message_hook_4.rst", "refman/methods/message_prefix_stream_4.rst", "refman/methods/message_tokens_2.rst", "refman/methods/meta_call_methods.rst", "refman/methods/not_1.rst", "refman/methods/once_1.rst", "refman/methods/parameter_2.rst", "refman/methods/permission_error_3.rst", "refman/methods/phrase_1.rst", "refman/methods/phrase_2.rst", "refman/methods/phrase_3.rst", "refman/methods/predicate_property_2.rst", "refman/methods/print_message_3.rst", "refman/methods/print_message_token_4.rst", "refman/methods/print_message_tokens_3.rst", "refman/methods/printing_methods.rst", "refman/methods/question_hook_6.rst", "refman/methods/question_prompt_stream_4.rst", "refman/methods/reflection_methods.rst", "refman/methods/repeat_0.rst", "refman/methods/representation_error_1.rst", "refman/methods/resource_error_1.rst", "refman/methods/retract_1.rst", "refman/methods/retractall_1.rst", "refman/methods/self_1.rst", "refman/methods/sender_1.rst", "refman/methods/setof_3.rst", "refman/methods/solution_methods.rst", "refman/methods/syntax_error_1.rst", "refman/methods/system_error_0.rst", "refman/methods/term_expansion_2.rst", "refman/methods/this_1.rst", "refman/methods/throw_1.rst", "refman/methods/true_0.rst", "refman/methods/type_error_2.rst", "refman/methods/uninstantiation_error_1.rst", "refman/predicates/abolish_category_1.rst", "refman/predicates/abolish_events_5.rst", "refman/predicates/abolish_object_1.rst", "refman/predicates/abolish_protocol_1.rst", "refman/predicates/abolishing_entity_predicates.rst", "refman/predicates/category_property_2.rst", "refman/predicates/compiling_predicates.rst", "refman/predicates/complements_object_2.rst", "refman/predicates/conforms_to_protocol_2_3.rst", "refman/predicates/create_category_4.rst", "refman/predicates/create_logtalk_flag_3.rst", "refman/predicates/create_object_4.rst", "refman/predicates/create_protocol_3.rst", "refman/predicates/creating_entity_predicates.rst", "refman/predicates/current_category_1.rst", "refman/predicates/current_event_5.rst", "refman/predicates/current_logtalk_flag_2.rst", "refman/predicates/current_object_1.rst", "refman/predicates/current_protocol_1.rst", "refman/predicates/define_events_5.rst", "refman/predicates/engine_predicates.rst", "refman/predicates/entity_relation_predicates.rst", "refman/predicates/enumerating_entity_predicates.rst", "refman/predicates/enumerating_entity_property_predicates.rst", "refman/predicates/event_handling_predicates.rst", "refman/predicates/extends_category_2_3.rst", "refman/predicates/extends_object_2_3.rst", "refman/predicates/extends_protocol_2_3.rst", "refman/predicates/flag_predicates.rst", "refman/predicates/implements_protocol_2_3.rst", "refman/predicates/imports_category_2_3.rst", "refman/predicates/index.rst", "refman/predicates/instantiates_class_2_3.rst", "refman/predicates/linter_predicates.rst", "refman/predicates/logtalk_compile_1.rst", "refman/predicates/logtalk_compile_2.rst", "refman/predicates/logtalk_library_path_2.rst", "refman/predicates/logtalk_linter_hook_7.rst", "refman/predicates/logtalk_load_1.rst", "refman/predicates/logtalk_load_2.rst", "refman/predicates/logtalk_load_context_2.rst", "refman/predicates/logtalk_make_0.rst", "refman/predicates/logtalk_make_1.rst", "refman/predicates/logtalk_make_target_action_1.rst", "refman/predicates/multi_threading_predicates.rst", "refman/predicates/object_property_2.rst", "refman/predicates/protocol_property_2.rst", "refman/predicates/set_logtalk_flag_2.rst", "refman/predicates/specializes_class_2_3.rst", "refman/predicates/threaded_1.rst", "refman/predicates/threaded_call_1_2.rst", "refman/predicates/threaded_cancel_1.rst", "refman/predicates/threaded_engine_1.rst", "refman/predicates/threaded_engine_create_3.rst", "refman/predicates/threaded_engine_destroy_1.rst", "refman/predicates/threaded_engine_fetch_1.rst", "refman/predicates/threaded_engine_next_2.rst", "refman/predicates/threaded_engine_next_reified_2.rst", "refman/predicates/threaded_engine_post_2.rst", "refman/predicates/threaded_engine_self_1.rst", "refman/predicates/threaded_engine_yield_1.rst", "refman/predicates/threaded_exit_1_2.rst", "refman/predicates/threaded_ignore_1.rst", "refman/predicates/threaded_notify_1.rst", "refman/predicates/threaded_once_1_2.rst", "refman/predicates/threaded_peek_1_2.rst", "refman/predicates/threaded_wait_1.rst", "tutorial/attributes.rst", "tutorial/index.rst", "tutorial/lists.rst", "tutorial/profiling.rst", "tutorial/reflection.rst", "userman/categories.rst", "userman/debugging.rst", "userman/declarative.rst", "userman/documenting.rst", "userman/errors.rst", "userman/events.rst", "userman/expansion.rst", "userman/features.rst", "userman/index.rst", "userman/inheritance.rst", "userman/installing.rst", "userman/messages.rst", "userman/migration.rst", "userman/nomenclature.rst", "userman/objects.rst", "userman/performance.rst", "userman/predicates.rst", "userman/printing.rst", "userman/programming.rst", "userman/protocols.rst", "userman/reflection.rst", "userman/threads.rst"], "titles": ["Bibliography", "<code class=\"docutils literal notranslate\"><span class=\"pre\">flags</span></code>", "Contributions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">iso8601</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pddl_parser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">verdi_neruda</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">xml_parser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">asdf</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">assertions</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">code_metrics</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dead_code_scanner</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">debug_messages</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">debugger</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">diagrams</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">doclet</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">help</span></code>", "Developer Tools", "<code class=\"docutils literal notranslate\"><span class=\"pre\">issue_creator</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lgtdoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lgtunit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">linter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">make</span></code>", "Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">packs</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ports_profiler</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">profiler</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tutor</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">wrapper</span></code>", "Compatibility", "Deployment", "General", "FAQ", "Installation", "Licensing", "Performance", "Portability", "Programming", "Support", "Troubleshooting", "Usability", "Index", "Glossary", "The Logtalk Handbook", "The Logtalk Handbook", "<code class=\"docutils literal notranslate\"><span class=\"pre\">arbitrary</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">assignvars</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">base64</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">basic_types</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cbor</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">core</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">coroutining</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">csv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dates</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dependents</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dictionaries</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dif</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">edcg</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">events</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">expand_library_alias_paths</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">expecteds</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">format</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">genint</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gensym</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">git</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grammars</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">heaps</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hierarchies</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hook_flows</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hook_objects</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">html</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ids</span></code>", "Libraries", "<code class=\"docutils literal notranslate\"><span class=\"pre\">intervals</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">java</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">json</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">listing</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logging</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">loops</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">meta</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">meta_compiler</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mutations</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">nested_dictionaries</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">optionals</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">options</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">os</span></code>", "Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">queues</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">random</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reader</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">recorded_database</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">redis</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sets</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">statistics</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">term_io</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">timeout</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tsv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">types</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ulid</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unicode_data</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">union_find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">uuid</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">zippers</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fcube</span></code>", "Ports", "<code class=\"docutils literal notranslate\"><span class=\"pre\">metagol</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toychr</span></code>", "Calling predicates in <em>this</em>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">(&#64;)/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">(^^)/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">(&lt;&lt;)/2</span></code>", "Context switching calls", "<code class=\"docutils literal notranslate\"><span class=\"pre\">[]/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">{}/1</span></code>", "Calling external predicates", "Control constructs", "Message delegation", "Message sending", "<code class=\"docutils literal notranslate\"><span class=\"pre\">(::)/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">(::)/1</span></code>", "Calling imported and inherited predicates", "<code class=\"docutils literal notranslate\"><span class=\"pre\">alias/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">built_in/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">category/1-4</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">coinductive/1</span></code>", "Conditional compilation directives", "<code class=\"docutils literal notranslate\"><span class=\"pre\">discontiguous/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dynamic/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dynamic/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">elif/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">encoding/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">end_category/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">end_object/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">end_protocol/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">endif/0</span></code>", "Entity directives", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">include/1</span></code>", "Directives", "<code class=\"docutils literal notranslate\"><span class=\"pre\">info/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">info/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">initialization/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">meta_non_terminal/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">meta_predicate/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mode/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multifile/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">object/1-5</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">op/3</span></code>", "Predicate directives", "<code class=\"docutils literal notranslate\"><span class=\"pre\">private/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">protected/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">protocol/1-2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">public/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">set_logtalk_flag/2</span></code>", "Source file directives", "<code class=\"docutils literal notranslate\"><span class=\"pre\">synchronized/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">use_module/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">use_module/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">uses/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">uses/2</span></code>", "Grammar", "Reference Manual", "<code class=\"docutils literal notranslate\"><span class=\"pre\">abolish/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">after/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ask_question/5</span></code>", "Question asking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">asserta/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">assertz/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">bagof/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">before/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">call//1-N</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">call/1-N</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">catch/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">clause/2</span></code>", "Coinduction hooks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">coinductive_success_hook/1-2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">consistency_error/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">context/1</span></code>", "Execution context", "<code class=\"docutils literal notranslate\"><span class=\"pre\">current_op/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">current_predicate/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">!/0</span></code>", "Database", "Definite clause grammar rules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">domain_error/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">eos//0</span></code>", "Error handling", "<code class=\"docutils literal notranslate\"><span class=\"pre\">evaluation_error/1</span></code>", "Event handling", "<code class=\"docutils literal notranslate\"><span class=\"pre\">existence_error/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">expand_goal/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">expand_term/2</span></code>", "Term and goal expansion", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fail/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">false/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">findall/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">findall/4</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">forall/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">forward/1</span></code>", "Message forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goal_expansion/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ignore/1</span></code>", "Built-in methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">instantiation_error/0</span></code>", "Logic and control", "<code class=\"docutils literal notranslate\"><span class=\"pre\">message_hook/4</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">message_prefix_stream/4</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">message_tokens//2</span></code>", "Meta-calls", "<code class=\"docutils literal notranslate\"><span class=\"pre\">(\\+)/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">once/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parameter/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">permission_error/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">phrase//1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">phrase/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">phrase/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">predicate_property/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">print_message/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">print_message_token/4</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">print_message_tokens/3</span></code>", "Message printing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">question_hook/6</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">question_prompt_stream/4</span></code>", "Reflection", "<code class=\"docutils literal notranslate\"><span class=\"pre\">repeat/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">representation_error/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">resource_error/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">retract/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">retractall/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">self/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sender/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">setof/3</span></code>", "All solutions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">syntax_error/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">system_error/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">term_expansion/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">throw/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">true/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">type_error/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">uninstantiation_error/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">abolish_category/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">abolish_events/5</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">abolish_object/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">abolish_protocol/1</span></code>", "Abolishing objects, categories and protocols", "<code class=\"docutils literal notranslate\"><span class=\"pre\">category_property/2</span></code>", "Compiling and loading source files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">complements_object/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conforms_to_protocol/2-3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_category/4</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_logtalk_flag/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_object/4</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_protocol/3</span></code>", "Creating new objects, categories and protocols", "<code class=\"docutils literal notranslate\"><span class=\"pre\">current_category/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">current_event/5</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">current_logtalk_flag/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">current_object/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">current_protocol/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">define_events/5</span></code>", "Multi-threading engines", "Objects, categories, and protocols relations", "Enumerating objects, categories and protocols", "Enumerating objects, categories and protocols properties", "Event handling", "<code class=\"docutils literal notranslate\"><span class=\"pre\">extends_category/2-3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">extends_object/2-3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">extends_protocol/2-3</span></code>", "Flags", "<code class=\"docutils literal notranslate\"><span class=\"pre\">implements_protocol/2-3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">imports_category/2-3</span></code>", "Built-in predicates", "<code class=\"docutils literal notranslate\"><span class=\"pre\">instantiates_class/2-3</span></code>", "Linter", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_compile/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_compile/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_library_path/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_linter_hook/7</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_load/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_load/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_load_context/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_make/0</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_make/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">logtalk_make_target_action/1</span></code>", "Multi-threading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">object_property/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">protocol_property/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">set_logtalk_flag/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">specializes_class/2-3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_call/1-2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_cancel/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine_create/3</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine_destroy/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine_fetch/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine_next/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine_next_reified/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine_post/2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine_self/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_engine_yield/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_exit/1-2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_ignore/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_notify/1</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_once/1-2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_peek/1-2</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">threaded_wait/1</span></code>", "Dynamic object attributes", "Tutorial", "List predicates", "Profiling programs", "A reflective class-based system", "Categories", "Debugging", "Declarative object-oriented programming", "Documenting", "Error handling", "Event-driven programming", "Term and goal expansion", "Main features", "User Manual", "Inheritance", "Installing Logtalk", "Messages", "Prolog integration and migration", "Nomenclature", "Objects", "Performance", "Predicates", "Printing messages and asking questions", "Writing and running applications", "Protocols", "Reflection", "Multi-threading programming"], "terms": {"alexiev93": 0, "mutabl": [0, 316, 326, 327, 330], "object": [0, 3, 5, 8, 9, 10, 11, 13, 14, 16, 20, 23, 24, 25, 26, 27, 30, 31, 35, 36, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 69, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 104, 105, 107, 108, 109, 111, 112, 117, 118, 120, 121, 122, 127, 132, 135, 137, 138, 139, 141, 145, 147, 149, 150, 152, 153, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 177, 180, 181, 182, 185, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 249, 250, 251, 253, 254, 257, 259, 261, 268, 271, 272, 273, 274, 278, 279, 282, 284, 287, 290, 292, 303, 304, 305, 306, 307, 308, 310, 312, 313, 315, 317, 318, 319, 322, 323, 324, 327, 329, 331, 332, 333, 334], "state": [0, 17, 19, 56, 87, 315, 316, 321, 326, 327, 328, 330], "orient": [0, 5, 9, 41, 42, 43, 111, 312, 319, 322, 323, 325, 327, 328, 330, 332, 335], "logic": [0, 5, 41, 42, 43, 45, 102, 104, 162, 203, 316, 317, 322, 323, 327, 328, 329, 332], "program": [0, 5, 9, 19, 20, 31, 34, 41, 42, 43, 53, 56, 96, 102, 104, 107, 111, 156, 310, 311, 314, 318, 322, 323, 324, 325, 327, 328, 330, 331, 332, 333, 334], "A": [0, 5, 7, 9, 10, 12, 13, 17, 19, 23, 27, 36, 41, 42, 43, 44, 51, 54, 56, 70, 81, 83, 85, 95, 100, 104, 118, 120, 136, 149, 150, 152, 155, 158, 160, 167, 168, 177, 178, 214, 291, 295, 309, 310, 312, 314, 315, 316, 318, 319, 320, 321, 323, 326, 327, 328, 329, 330, 331, 332, 333, 335], "survei": 0, "alexiev": 0, "v": [0, 9, 13, 18, 19, 46, 54, 70, 97, 332], "technic": [0, 56, 141], "report": [0, 10, 16, 17, 20, 22, 23, 26, 31, 42, 43, 56, 98, 128, 136, 157, 159, 178, 218, 278, 284, 314, 318, 324, 328, 329, 330, 331, 332], "tr": 0, "93": [0, 19, 74], "15": [0, 5, 99, 104, 130, 251, 318], "depart": 0, "comput": [0, 5, 9, 19, 23, 41, 104, 278, 284, 298, 299, 312, 319, 321, 328, 330, 331, 332, 334, 335], "scienc": [0, 9, 104, 319], "univers": [0, 5, 96, 97, 98, 100, 331], "alberta": 0, "canada": 0, "belli_et_al_92": 0, "prolog": [0, 4, 5, 6, 12, 15, 16, 19, 22, 27, 29, 31, 32, 38, 41, 42, 43, 44, 45, 50, 52, 54, 55, 56, 60, 61, 62, 63, 67, 73, 74, 84, 85, 87, 88, 89, 90, 94, 96, 97, 98, 104, 105, 112, 123, 125, 126, 127, 129, 130, 136, 137, 141, 143, 145, 155, 156, 157, 158, 160, 161, 163, 167, 168, 171, 172, 173, 174, 181, 182, 194, 195, 210, 215, 216, 217, 225, 226, 228, 229, 238, 239, 251, 252, 253, 254, 276, 277, 278, 279, 280, 281, 282, 283, 284, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 314, 315, 316, 317, 319, 322, 323, 325, 328, 329, 331, 333, 335], "rational": [0, 325], "case": [0, 9, 10, 12, 13, 17, 18, 19, 20, 23, 24, 25, 27, 28, 41, 44, 50, 54, 55, 56, 60, 67, 68, 69, 81, 82, 96, 98, 99, 112, 126, 130, 137, 145, 156, 157, 158, 159, 160, 167, 168, 173, 176, 212, 215, 216, 230, 231, 236, 237, 276, 277, 280, 281, 284, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "studi": 0, "belli": 0, "f": [0, 5, 19, 72, 81, 99, 100, 112, 315, 320, 326], "jack": 0, "o": [0, 3, 13, 19, 23, 42, 43, 48, 54, 65, 70, 71, 74, 85, 91, 96, 98, 141, 240, 284, 315, 320, 321, 330, 331], "naish": 0, "l": [0, 3, 8, 19, 23, 48, 54, 56, 74, 158, 159, 160, 176, 279, 311, 315, 321, 330], "92": 0, "2": [0, 1, 4, 5, 8, 9, 10, 13, 15, 18, 19, 20, 23, 24, 25, 27, 28, 31, 33, 38, 39, 41, 42, 43, 44, 46, 48, 50, 51, 54, 55, 56, 58, 60, 67, 68, 69, 74, 75, 80, 81, 83, 85, 86, 91, 95, 96, 97, 98, 99, 100, 104, 105, 107, 108, 110, 111, 112, 114, 116, 118, 123, 125, 126, 127, 130, 133, 135, 136, 138, 139, 141, 142, 143, 145, 147, 148, 149, 150, 152, 154, 155, 156, 157, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 193, 196, 197, 199, 203, 204, 206, 207, 210, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 241, 242, 244, 245, 248, 251, 252, 253, 254, 256, 259, 260, 261, 262, 263, 265, 270, 273, 276, 280, 283, 284, 286, 291, 293, 295, 297, 302, 304, 309, 311, 312, 314, 315, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "electr": 0, "electron": 0, "engin": [0, 9, 34, 41, 42, 43, 156, 162, 190, 213, 227, 273, 294, 295, 296, 297, 298, 299, 300, 301, 302, 312, 321, 322, 323, 332], "paderborn": 0, "germani": 0, "url": [0, 9, 13, 15, 16, 19, 42, 43, 45, 46, 98, 104, 317, 330], "http": [0, 5, 6, 7, 9, 13, 17, 18, 19, 22, 23, 45, 46, 48, 51, 56, 63, 74, 85, 90, 95, 97, 98, 99, 100, 102, 104, 105], "lee": 0, "github": [0, 5, 7, 9, 13, 17, 18, 19, 22, 23, 56, 90, 97, 98, 104], "io": [0, 17, 19, 22, 48, 90, 93], "paper": [0, 9, 102, 104], "oolp": 0, "index": [0, 6, 9, 18, 19, 22, 23, 24, 34, 42, 85, 317, 319, 321, 324, 328, 329, 330, 332], "html": [0, 1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 26, 27, 31, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 317, 324], "block89": 0, "an": [0, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 23, 24, 26, 27, 28, 31, 32, 41, 42, 43, 44, 45, 48, 53, 54, 56, 59, 60, 63, 67, 69, 70, 72, 73, 75, 81, 82, 83, 86, 87, 94, 96, 97, 98, 99, 102, 104, 107, 108, 109, 111, 112, 117, 120, 121, 123, 125, 126, 127, 128, 129, 136, 137, 140, 141, 142, 143, 145, 147, 150, 152, 153, 156, 157, 158, 159, 160, 163, 167, 168, 169, 171, 172, 173, 174, 177, 178, 180, 181, 182, 185, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 210, 211, 212, 213, 215, 216, 217, 225, 226, 227, 228, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 250, 252, 253, 258, 267, 268, 269, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 309, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 332, 334, 335], "extend": [0, 7, 9, 13, 14, 16, 19, 24, 27, 41, 42, 43, 44, 51, 56, 59, 69, 75, 87, 95, 96, 99, 104, 108, 112, 120, 122, 146, 151, 158, 160, 165, 251, 253, 254, 267, 268, 269, 283, 284, 314, 315, 317, 321, 323, 325, 326, 327, 328, 330, 331, 332, 333], "frame": [0, 321], "languag": [0, 5, 7, 9, 16, 19, 23, 30, 34, 41, 42, 43, 68, 77, 107, 111, 217, 247, 280, 283, 284, 287, 288, 316, 317, 319, 320, 321, 323, 325, 326, 327, 328, 330, 332, 333], "block": [0, 32, 69, 291, 297, 298, 299, 302, 303, 307, 317, 320, 327, 330, 335], "p": [0, 17, 18, 19, 22, 23, 51, 62, 69, 75, 83, 85, 95, 97, 159, 177, 315, 317, 318, 320, 321, 332], "chan": 0, "n": [0, 8, 19, 41, 51, 56, 63, 70, 112, 134, 141, 142, 143, 178, 184, 186, 202, 203, 209, 210, 211, 214, 215, 216, 284, 315, 329, 330, 331, 332, 335], "c": [0, 4, 5, 18, 19, 23, 36, 42, 43, 48, 51, 54, 59, 68, 70, 74, 81, 85, 95, 99, 100, 158, 160, 186, 314, 315, 320, 321, 322, 330, 331], "proceed": [0, 9, 323], "ooplsla": 0, "89": 0, "10": [0, 9, 13, 19, 23, 102, 104, 212, 330, 335], "151": 0, "157": 0, "acm": [0, 9], "bobrow_et_al_88": [0, 323], "common": [0, 10, 13, 16, 17, 18, 19, 20, 23, 27, 30, 34, 41, 42, 43, 44, 50, 60, 63, 64, 67, 78, 91, 96, 98, 136, 155, 157, 158, 159, 160, 192, 212, 214, 215, 216, 230, 231, 237, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 335], "lisp": 0, "system": [0, 5, 9, 10, 12, 13, 16, 18, 19, 20, 23, 24, 27, 30, 31, 32, 36, 41, 42, 43, 44, 50, 52, 53, 55, 60, 63, 70, 75, 84, 85, 87, 90, 94, 96, 97, 98, 100, 104, 163, 167, 168, 171, 172, 174, 210, 215, 216, 226, 228, 229, 235, 252, 278, 310, 312, 314, 315, 317, 319, 320, 322, 326, 327, 328, 329, 330, 331, 332, 333, 335], "specif": [0, 9, 11, 13, 16, 19, 22, 24, 30, 41, 42, 43, 46, 67, 68, 74, 85, 98, 130, 136, 144, 150, 152, 158, 161, 210, 252, 315, 316, 317, 319, 320, 321, 323, 324, 326, 328, 329, 330, 331, 332, 334], "bobrow": 0, "d": [0, 5, 9, 23, 46, 70, 81, 99, 100, 141, 284, 315, 320, 330], "g": [0, 9, 10, 12, 13, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 31, 32, 33, 41, 42, 43, 46, 56, 59, 63, 67, 68, 69, 77, 78, 83, 85, 96, 97, 99, 100, 102, 112, 152, 155, 177, 210, 227, 278, 314, 315, 316, 317, 318, 320, 324, 326, 327, 328, 329, 330, 331, 332, 335], "michiel": 0, "gabriel": 0, "r": [0, 19, 54, 147, 315, 320, 330], "keen": 0, "": [0, 4, 5, 6, 10, 12, 13, 17, 18, 19, 20, 23, 24, 26, 27, 31, 41, 42, 43, 44, 46, 54, 56, 60, 62, 63, 67, 68, 69, 70, 73, 97, 98, 99, 107, 123, 137, 158, 251, 253, 254, 309, 311, 314, 315, 317, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333], "e": [0, 5, 9, 10, 12, 13, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 31, 32, 33, 41, 42, 43, 48, 51, 56, 59, 63, 67, 68, 69, 74, 77, 78, 81, 83, 85, 94, 96, 97, 99, 100, 109, 112, 117, 123, 142, 143, 145, 152, 155, 210, 227, 251, 278, 283, 284, 309, 314, 315, 316, 317, 318, 320, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335], "kiczal": 0, "moon": 0, "sigplan": 0, "notic": [0, 5, 12, 19, 74, 80, 85, 89, 317, 324, 330, 332], "23": [0, 23, 80, 95, 97, 315, 328, 331], "bratko90": 0, "artifici": [0, 102], "intellig": [0, 102], "bratko": 0, "i": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 35, 38, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 55, 56, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 73, 74, 75, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 107, 108, 109, 111, 112, 117, 118, 120, 121, 123, 125, 126, 127, 128, 129, 130, 136, 137, 139, 140, 141, 142, 143, 145, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 267, 268, 269, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "addison": 0, "weslei": 0, "2\u00ba": 0, "edit": [0, 12, 13, 17, 19, 23, 26, 38, 68, 90, 317, 321, 324, 332], "1990": 0, "champaux92": [0, 332], "compar": [0, 5, 13, 19, 20, 31, 42, 43, 50, 54, 55, 60, 81, 147, 251, 314, 315, 317, 321, 326, 328, 329, 333, 335], "analysi": [0, 16, 20, 42, 43, 323, 332], "method": [0, 5, 20, 34, 36, 41, 42, 43, 51, 73, 96, 107, 108, 117, 118, 142, 143, 149, 158, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 251, 253, 254, 261, 282, 309, 313, 314, 317, 319, 320, 321, 322, 325, 326, 327, 328, 332, 334, 335], "champaux": 0, "faur": 0, "journal": [0, 9, 104], "vol": 0, "5": [0, 5, 15, 19, 23, 24, 69, 70, 74, 91, 95, 97, 98, 99, 100, 132, 134, 135, 138, 147, 160, 164, 166, 170, 203, 206, 207, 208, 218, 219, 220, 222, 223, 266, 273, 311, 312, 315, 319, 320, 326, 328, 329, 331, 335], "1": [0, 1, 4, 5, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 28, 31, 41, 42, 43, 44, 48, 50, 54, 55, 56, 57, 58, 59, 63, 68, 69, 71, 74, 75, 80, 81, 82, 83, 86, 87, 89, 90, 91, 94, 95, 96, 97, 98, 104, 105, 106, 109, 113, 114, 115, 116, 117, 119, 120, 124, 126, 129, 131, 132, 133, 134, 135, 138, 140, 147, 148, 153, 154, 156, 158, 160, 165, 173, 174, 175, 177, 179, 180, 183, 184, 185, 186, 187, 190, 200, 201, 203, 204, 209, 212, 213, 215, 216, 217, 222, 224, 235, 236, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 262, 264, 267, 268, 269, 271, 272, 273, 274, 277, 278, 281, 282, 283, 286, 287, 288, 289, 290, 295, 298, 299, 300, 309, 311, 312, 314, 315, 317, 318, 319, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "1992": 0, "clocksin87": 0, "clocksin": 0, "w": [0, 95, 147, 208, 220, 315, 330, 331], "mellish": 0, "springer": [0, 102], "verlag": 0, "new": [0, 5, 16, 19, 22, 23, 26, 32, 41, 42, 43, 54, 68, 69, 71, 81, 86, 91, 99, 107, 160, 162, 167, 168, 207, 242, 244, 245, 251, 252, 253, 254, 261, 273, 292, 295, 303, 304, 306, 307, 309, 311, 315, 318, 321, 322, 323, 324, 325, 327, 330, 332, 335], "york": 0, "1987": 0, "cointe87": [0, 313, 328], "metaclass": [0, 41, 146, 314, 316, 327, 328, 333], "ar": [0, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 31, 36, 41, 42, 43, 44, 48, 49, 50, 51, 54, 55, 56, 58, 60, 61, 62, 63, 64, 67, 68, 69, 70, 73, 74, 75, 79, 80, 81, 82, 85, 87, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 108, 109, 111, 117, 118, 120, 121, 123, 126, 127, 137, 141, 142, 143, 150, 155, 156, 157, 158, 159, 160, 161, 163, 167, 168, 169, 171, 173, 174, 176, 177, 178, 180, 181, 191, 192, 198, 201, 207, 216, 217, 218, 228, 229, 232, 234, 236, 243, 247, 253, 256, 257, 259, 260, 261, 276, 277, 280, 281, 282, 283, 284, 285, 287, 288, 291, 292, 298, 299, 308, 309, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "first": [0, 5, 11, 12, 19, 20, 23, 26, 30, 32, 34, 36, 38, 41, 44, 51, 54, 63, 68, 73, 74, 81, 83, 87, 90, 91, 95, 98, 108, 117, 118, 123, 130, 140, 143, 158, 167, 191, 192, 201, 215, 216, 230, 231, 237, 243, 261, 267, 268, 269, 274, 276, 277, 279, 280, 281, 284, 290, 304, 306, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "class": [0, 13, 18, 31, 41, 42, 43, 66, 69, 73, 82, 108, 120, 146, 185, 253, 274, 282, 290, 310, 314, 316, 317, 322, 327, 330, 332], "objvlisp": 0, "model": [0, 13, 24, 42, 43, 82, 319, 322, 323, 329], "coint": 0, "87": [0, 19], "156": 0, "167": 0, "cordes91": 0, "The": [0, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 34, 38, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 107, 108, 109, 111, 117, 118, 123, 125, 127, 128, 129, 130, 136, 137, 139, 140, 141, 144, 153, 155, 156, 157, 158, 159, 160, 161, 165, 167, 168, 169, 172, 174, 176, 178, 185, 190, 191, 192, 196, 201, 207, 208, 210, 212, 213, 217, 218, 228, 229, 232, 236, 240, 242, 243, 244, 245, 247, 250, 251, 252, 253, 254, 257, 261, 267, 268, 269, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 329, 330, 331, 332, 334, 335], "liter": [0, 9], "paradigm": [0, 316, 321], "cord": 0, "brown": 0, "m": [0, 80, 97, 315, 317, 330, 335], "ieee": [0, 9], "june": 0, "1991": 0, "52": [0, 9, 97, 100], "61": [0, 19, 70, 104], "covington94": 0, "iso": [0, 3, 30, 35, 38, 42, 43, 98, 130, 161, 173, 182, 194, 195, 210, 225, 238, 239, 317, 318, 322, 324, 325, 326, 327, 330, 332], "summari": [0, 19, 42, 43, 71, 310], "draft": [0, 330], "propos": [0, 59, 85], "standard": [0, 8, 9, 10, 13, 18, 19, 20, 23, 24, 30, 35, 38, 42, 43, 44, 59, 60, 69, 74, 85, 89, 96, 98, 112, 136, 143, 147, 155, 158, 160, 161, 173, 182, 194, 195, 210, 225, 232, 238, 239, 315, 317, 318, 319, 320, 322, 324, 325, 326, 327, 331, 332, 335], "covington": 0, "ftp": 0, "ai": 0, "uga": 0, "edu": [0, 105], "pub": 0, "cox86": [0, 314, 321], "evolutionari": 0, "approach": [0, 326, 327, 330], "cox": 0, "brad": 0, "j": [0, 9, 13, 97, 104, 315], "publish": [0, 4, 9, 13, 19, 23, 74, 98, 102, 319, 321, 324], "compani": [0, 23], "don": [0, 13, 19, 23, 25, 35, 44, 56, 67, 69, 74, 83, 96, 98, 315, 317, 319, 326, 327, 330, 332], "mill": 0, "ontario": 0, "davison89": 0, "polka": 0, "parlog": 0, "davison": 0, "ph": 0, "thesi": [0, 5], "imperi": 0, "colleg": 0, "london": 0, "1989": 0, "davison92": 0, "base": [0, 4, 9, 19, 23, 31, 36, 41, 42, 43, 44, 72, 74, 80, 81, 85, 88, 104, 252, 282, 310, 314, 315, 316, 317, 319, 322, 326, 327, 328, 330, 331, 332], "tech": [0, 56], "3": [0, 4, 5, 11, 13, 19, 20, 23, 24, 31, 41, 42, 43, 44, 51, 54, 56, 57, 60, 63, 74, 78, 80, 81, 83, 85, 86, 90, 91, 95, 96, 97, 98, 100, 102, 117, 125, 126, 127, 135, 136, 137, 138, 143, 145, 148, 149, 150, 152, 154, 158, 160, 165, 171, 181, 184, 185, 186, 187, 188, 189, 190, 197, 198, 203, 204, 206, 207, 208, 210, 214, 215, 217, 219, 221, 222, 223, 224, 226, 227, 233, 234, 235, 238, 240, 241, 242, 243, 244, 245, 247, 249, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 270, 273, 279, 287, 288, 289, 294, 296, 298, 299, 301, 302, 311, 312, 314, 315, 317, 318, 319, 320, 321, 323, 327, 328, 329, 330, 331, 332, 333, 335], "dept": 0, "melbourn": 0, "australia": 0, "catalogu": 0, "nla": 0, "gov": 0, "au": 0, "record": [0, 10, 51, 89, 330], "772526": 0, "davison93": 0, "deduct": 0, "featur": [0, 13, 16, 19, 30, 34, 35, 42, 43, 96, 99, 112, 251, 253, 254, 314, 315, 317, 318, 320, 322, 324, 326, 327, 329, 330, 335], "bebop": 0, "6": [0, 15, 19, 23, 24, 80, 85, 91, 98, 99, 100, 147, 165, 166, 203, 206, 207, 208, 218, 219, 220, 223, 315, 330, 331, 335], "1273317": 0, "delzanno97": 0, "linear": [0, 9], "delzanno": 0, "pisa": 0, "itali": 0, "opac": 0, "bncf": 0, "firenz": 0, "sbn": 0, "prod": 0, "resourc": [0, 9, 13, 23, 33, 98, 158, 227, 314, 316, 317, 319, 328, 330, 332, 333], "uri": 0, "bve0136144": 0, "dony90": 0, "except": [0, 8, 18, 19, 20, 22, 24, 34, 38, 41, 42, 43, 44, 59, 69, 94, 96, 97, 98, 109, 117, 161, 173, 188, 235, 238, 285, 291, 292, 298, 299, 303, 304, 306, 307, 311, 315, 320, 321, 322, 323, 327, 330, 332, 335], "handl": [0, 7, 13, 16, 19, 41, 42, 43, 44, 51, 53, 57, 59, 82, 89, 95, 105, 109, 117, 162, 164, 170, 203, 273, 309, 314, 315, 317, 320, 322, 326, 331, 332, 335], "toward": 0, "synthesi": 0, "doni": 0, "90": [0, 56], "322": 0, "330": 0, "fornarino_et_al_89": [0, 321], "origin": [0, 9, 19, 23, 24, 27, 41, 51, 56, 65, 82, 90, 98, 99, 104, 105, 111, 143, 177, 314, 318, 320, 325, 327, 328, 330, 332, 333], "relat": [0, 3, 9, 13, 19, 24, 34, 36, 41, 42, 43, 44, 56, 60, 68, 72, 162, 201, 236, 250, 251, 253, 254, 267, 268, 269, 271, 272, 273, 274, 276, 277, 280, 281, 282, 290, 309, 313, 314, 315, 316, 317, 319, 321, 323, 325, 327, 328, 329, 331, 332, 333, 334, 335], "manag": [0, 7, 13, 15, 19, 23, 83, 87, 328, 335], "fornarino": 0, "pinna": 0, "trouss": 0, "b": [0, 5, 9, 12, 17, 19, 23, 26, 45, 46, 48, 51, 54, 55, 63, 68, 74, 81, 87, 94, 95, 99, 100, 158, 160, 186, 315, 320, 330, 335], "4th": 0, "portugues": 0, "confer": [0, 9], "lectur": 0, "note": [0, 2, 9, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 32, 41, 42, 43, 52, 54, 67, 68, 69, 71, 75, 79, 81, 83, 87, 96, 97, 103, 111, 127, 141, 155, 157, 158, 164, 167, 168, 169, 170, 171, 199, 210, 232, 251, 253, 254, 276, 277, 280, 281, 282, 302, 312, 313, 314, 315, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "390": 0, "13": [0, 96, 320], "26": [0, 3, 19], "fromherz93": [0, 321], "ol": [0, 69, 321], "layer": [0, 41, 73], "fromherz": 0, "parcftp": 0, "xerox": 0, "com": [0, 5, 7, 9, 13, 17, 18, 19, 22, 23, 45, 56, 63, 90, 97, 98, 104], "fukunaga86": 0, "experi": [0, 13, 23, 41, 157, 159, 314, 321, 328, 330], "fukunaga": 0, "k": [0, 9, 97], "hiros": 0, "86": [0, 46, 70, 97], "21": [0, 9, 30, 44, 104], "11": [0, 1, 9, 19, 23, 99, 139, 317, 335], "224": 0, "231": 0, "goldberg83": [0, 314, 321], "smalltalk": [0, 36, 42, 43, 53, 108, 314, 321, 322, 325, 334], "80": [0, 36, 314, 321], "its": [0, 5, 9, 10, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 27, 36, 41, 44, 56, 59, 60, 64, 73, 75, 80, 82, 83, 85, 87, 107, 112, 120, 126, 137, 145, 147, 157, 158, 172, 177, 185, 190, 199, 201, 202, 204, 211, 212, 213, 225, 230, 231, 236, 237, 240, 241, 252, 282, 283, 284, 291, 292, 293, 294, 295, 303, 306, 307, 313, 314, 315, 316, 317, 319, 320, 321, 323, 325, 326, 327, 328, 330, 331, 332, 333, 335], "implement": [0, 9, 10, 13, 15, 19, 23, 25, 31, 36, 38, 41, 42, 43, 44, 45, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 65, 66, 67, 68, 72, 73, 75, 77, 78, 79, 81, 82, 85, 86, 87, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 105, 120, 122, 123, 146, 157, 158, 159, 160, 164, 165, 167, 168, 170, 186, 198, 199, 201, 212, 236, 237, 250, 251, 253, 254, 271, 284, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335], "goldberg": 0, "robson": 0, "seri": [0, 9], "joy_et_al_00": [0, 321], "java": [0, 42, 43, 71, 82, 321, 322], "second": [0, 5, 9, 11, 19, 24, 30, 34, 44, 63, 69, 73, 74, 97, 100, 109, 123, 140, 143, 158, 160, 191, 192, 201, 212, 215, 216, 238, 267, 268, 269, 274, 277, 278, 281, 284, 290, 312, 315, 316, 318, 319, 320, 323, 326, 328, 330, 331, 332, 333, 335], "joi": 0, "steel": 0, "gosl": 0, "bracha": 0, "2000": [0, 139, 317], "iso95": [0, 318, 321, 324, 330], "iec": [0, 330], "di": 0, "13211": 0, "part": [0, 11, 13, 15, 19, 20, 41, 60, 68, 85, 280, 283, 284, 325, 328, 330, 331, 332, 335], "gener": [0, 5, 6, 8, 11, 13, 14, 15, 16, 17, 20, 22, 23, 25, 27, 31, 38, 39, 41, 42, 43, 46, 48, 59, 61, 62, 68, 70, 71, 74, 80, 85, 87, 90, 94, 98, 99, 108, 123, 127, 130, 153, 158, 177, 185, 188, 190, 198, 204, 207, 213, 226, 227, 234, 235, 240, 241, 251, 253, 254, 278, 284, 291, 293, 295, 303, 307, 309, 311, 312, 314, 315, 316, 317, 318, 320, 321, 322, 326, 327, 328, 330, 331, 332, 333, 335], "core": [0, 19, 42, 43, 71, 161, 206, 207, 208, 210, 218, 279, 315, 317, 318, 321, 324, 327, 330, 331, 335], "joint": 0, "committe": 0, "jtc": 0, "www": [0, 5, 9, 13, 18, 19, 22, 23, 45, 46, 48, 51, 56, 74, 85, 95, 98, 102, 105], "org": [0, 9, 13, 18, 19, 22, 23, 45, 46, 48, 51, 74, 95, 98, 99, 100, 104], "21413": 0, "knuth84": 0, "knuth": 0, "mai": [0, 6, 9, 10, 12, 13, 17, 18, 19, 20, 23, 24, 25, 28, 32, 35, 36, 38, 41, 44, 56, 63, 68, 69, 73, 82, 84, 90, 98, 108, 109, 118, 120, 137, 142, 144, 158, 160, 167, 168, 171, 172, 174, 192, 201, 215, 216, 228, 229, 236, 251, 253, 254, 278, 280, 281, 283, 284, 305, 308, 309, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "84": 0, "27": [0, 1, 332], "97": [0, 74, 100], "111": [0, 46, 48, 70, 74], "lieberman86": [0, 321], "us": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 35, 39, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 69, 70, 73, 74, 75, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 107, 108, 109, 111, 112, 117, 118, 120, 121, 123, 125, 126, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 185, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 225, 226, 227, 228, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 251, 252, 253, 254, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 291, 292, 299, 302, 304, 306, 309, 311, 312, 313, 314, 316, 317, 319, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 334], "prototyp": [0, 13, 27, 31, 41, 42, 43, 66, 108, 120, 146, 185, 249, 253, 268, 282, 313, 314, 316, 322, 327, 330, 332, 333], "share": [0, 12, 19, 20, 22, 23, 41, 155, 282, 314, 315, 316, 317, 321, 326, 327, 328, 330, 333, 335], "behaviour": 0, "lieberman": 0, "h": [0, 18, 19, 23, 46, 48, 63, 74, 97, 159, 315, 330], "189": 0, "214": [0, 19], "maes87": [0, 313, 321], "concept": [0, 23, 36, 314, 316, 320, 321, 327, 328], "reflect": [0, 13, 18, 27, 31, 41, 42, 43, 66, 137, 158, 160, 162, 203, 310, 317, 319, 321, 322, 323, 326, 327, 328, 329, 332], "mae": 0, "mccabe92": [0, 321, 323], "mccabe": [0, 9], "prentic": 0, "hall": 0, "moon86": [0, 314, 319], "flavor": [0, 314], "8": [0, 15, 19, 23, 24, 46, 70, 81, 82, 97, 99, 100, 102, 130, 315, 328, 335], "moss94": [0, 323], "power": [0, 19, 319, 326], "moss": 0, "intern": [0, 4, 9, 12, 13, 19, 25, 44, 56, 74, 83, 87, 282, 315, 319, 325, 326, 327, 328, 329, 330, 335], "1994": [0, 9], "moura94": [0, 313, 319, 328], "logtalk": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 31, 37, 39, 41, 44, 46, 49, 53, 54, 56, 58, 63, 65, 68, 73, 82, 85, 90, 93, 96, 98, 102, 104, 105, 108, 112, 127, 129, 130, 137, 141, 143, 147, 156, 158, 160, 161, 165, 172, 178, 192, 206, 207, 208, 210, 217, 218, 219, 220, 222, 223, 251, 252, 253, 254, 258, 259, 276, 277, 278, 280, 281, 282, 283, 284, 287, 309, 311, 313, 314, 315, 316, 317, 319, 320, 322, 323, 325, 327, 329, 330, 331, 333, 334, 335], "programa\u00e7\u00e3o": 0, "orientada": 0, "para": 0, "objecto": 0, "em": 0, "moura": [0, 1, 5, 23, 54, 63, 65, 98, 139, 253, 317, 331], "costa": [0, 54], "2\u00aa": 0, "confer\u00eancia": 0, "exposi\u00e7\u00e3o": 0, "portuguesa": 0, "de": [0, 18, 19, 60, 98, 315, 321, 324, 326, 330, 331, 332], "tecnologia": 0, "por": 0, "3i": 0, "consultor": 0, "lisboa": 0, "moura99": 0, "port": [0, 12, 13, 15, 16, 22, 23, 27, 42, 43, 56, 68, 85, 89, 90, 102, 104, 105, 321, 322, 324, 326, 329, 330, 331], "22": [0, 253, 330], "compil": [0, 4, 6, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 22, 23, 26, 27, 29, 31, 32, 41, 42, 43, 45, 50, 55, 56, 58, 60, 61, 62, 67, 73, 75, 78, 79, 84, 85, 87, 94, 98, 105, 107, 108, 109, 112, 117, 123, 125, 126, 127, 128, 129, 130, 134, 136, 138, 141, 143, 145, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 168, 170, 171, 172, 174, 176, 177, 178, 181, 191, 192, 201, 210, 212, 215, 216, 217, 228, 229, 230, 231, 236, 237, 251, 252, 253, 254, 258, 273, 276, 277, 280, 281, 282, 283, 284, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 317, 319, 321, 322, 323, 325, 327, 328, 330, 331, 333, 334, 335], "relev": [0, 13, 18, 19, 20, 33, 41, 73, 123, 317, 327, 331, 332], "alp": 0, "newslett": 0, "12": [0, 19, 312, 335], "1999": [0, 30, 321], "moura00": 0, "document": [0, 2, 5, 16, 17, 31, 36, 39, 41, 42, 43, 71, 103, 139, 140, 144, 207, 284, 311, 315, 322, 324, 326, 329, 332], "dmi": 0, "beira": 0, "interior": 0, "portug": 0, "razek92": [0, 321], "combin": [0, 13, 31, 41, 42, 43, 67, 284, 320, 321, 324, 325, 327, 330, 335], "razek": 0, "comun": 0, "66": [0, 97, 330], "70": [0, 70, 97], "rumbaugh87": [0, 321], "semant": [0, 20, 27, 41, 42, 43, 67, 75, 109, 112, 117, 157, 210, 317, 318, 320, 322, 325, 326, 327, 330, 332, 335], "construct": [0, 5, 9, 13, 19, 20, 23, 24, 28, 41, 42, 43, 59, 67, 68, 75, 82, 83, 107, 108, 109, 111, 112, 117, 118, 136, 142, 143, 162, 164, 170, 171, 172, 199, 201, 210, 226, 236, 279, 314, 315, 318, 319, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333], "rumbaugh": 0, "466": 0, "481": 0, "rumbaugh88": [0, 321], "control": [0, 9, 11, 19, 20, 24, 28, 41, 42, 43, 57, 68, 75, 80, 107, 108, 109, 111, 112, 117, 118, 123, 136, 162, 164, 170, 172, 199, 201, 203, 210, 236, 309, 312, 314, 315, 317, 318, 319, 320, 323, 325, 326, 327, 328, 329, 331, 332, 333, 335], "propag": 0, "oper": [0, 9, 10, 13, 16, 18, 19, 20, 23, 25, 27, 28, 31, 41, 42, 43, 52, 56, 63, 68, 70, 84, 91, 97, 99, 100, 102, 104, 109, 112, 117, 125, 126, 127, 141, 143, 145, 147, 149, 150, 152, 158, 160, 161, 180, 185, 190, 213, 278, 311, 312, 313, 314, 315, 317, 319, 321, 322, 323, 326, 327, 328, 329, 332, 333, 334, 335], "attribut": [0, 38, 42, 43, 69, 122, 146, 167, 168, 310, 314, 330, 331], "88": 0, "285": 0, "296": 0, "schachte95": 0, "effici": [0, 20, 102, 318, 321, 323, 328, 329, 332], "schacht": 0, "saab": 0, "formal": [0, 23], "pratic": 0, "applic": [0, 10, 12, 14, 16, 18, 19, 23, 27, 31, 41, 42, 43, 50, 55, 56, 58, 60, 61, 62, 68, 73, 82, 83, 84, 87, 89, 93, 98, 108, 109, 129, 141, 155, 158, 251, 253, 254, 278, 284, 314, 315, 317, 318, 319, 321, 322, 323, 324, 327, 328, 329, 330, 331, 333, 334, 335], "elsevi": 0, "north": 0, "holland": 0, "amsterdam": 0, "1995": [0, 98, 321], "sicstus95": [0, 321], "sicstu": [0, 12, 13, 15, 19, 23, 25, 45, 50, 55, 60, 90, 94, 104, 321, 331, 332], "manual": [0, 11, 12, 15, 17, 18, 19, 23, 27, 32, 34, 42, 43, 56, 104, 108, 117, 118, 153, 191, 192, 217, 247, 252, 258, 277, 281, 287, 288, 289, 311, 318, 320, 324, 327, 331, 332], "sic": 0, "se": 0, "shan_et_al_93": [0, 323], "multipl": [0, 13, 15, 16, 17, 19, 20, 39, 41, 42, 43, 44, 67, 80, 83, 87, 112, 141, 157, 159, 160, 312, 316, 317, 319, 320, 322, 326, 327, 328, 329, 330, 331, 332, 335], "inherit": [0, 9, 10, 13, 25, 27, 34, 41, 42, 43, 75, 108, 114, 118, 120, 150, 162, 191, 192, 309, 313, 314, 316, 322, 326, 327, 328, 330, 332, 335], "essenti": [0, 19, 23, 34, 316, 328, 331], "oop": [0, 327], "panel": 0, "shan": 0, "y": [0, 4, 19, 24, 46, 51, 56, 70, 97, 112, 136, 157, 160, 210, 251, 318, 330], "cargil": 0, "t": [0, 5, 9, 13, 18, 19, 23, 25, 35, 44, 56, 59, 67, 68, 69, 74, 83, 96, 98, 142, 147, 158, 159, 160, 169, 176, 210, 232, 301, 315, 317, 319, 320, 326, 327, 328, 330, 331, 332], "cook": 0, "loomi": 0, "snyder": 0, "360": 0, "363": 0, "stefik_et_al_86": [0, 319], "integr": [0, 16, 19, 22, 28, 30, 31, 42, 43, 73, 85, 285, 319, 322, 324, 332, 335], "acess": 0, "multiparadigm": 0, "environ": [0, 6, 13, 16, 17, 19, 32, 42, 43, 90, 324, 331, 332], "stefik": 0, "kahn": 0, "softwar": [0, 4, 5, 9, 13, 23, 32, 41, 42, 43, 321, 322, 323, 331], "januari": [0, 30, 36, 97, 321], "1986": 0, "18": [0, 3, 9, 23], "stroustrup86": [0, 321], "stroustrup": 0, "taenzer89": [0, 323], "problem": [0, 4, 10, 13, 19, 23, 30, 32, 38, 276, 277, 280, 281, 315, 320, 321, 323, 326, 330, 332, 335], "reus": [0, 36, 41, 242, 244, 245, 309, 314, 316, 321, 323, 326, 328, 330, 333, 335], "taenzer": 0, "ganti": 0, "podar": 0, "ecoop": 0, "british": 0, "societi": [0, 9], "workshop": [0, 9], "cambridg": 0, "press": [0, 9], "tanzer95": 0, "remark": [0, 18, 84, 161, 317, 331], "associ": [0, 54, 147, 149, 150, 152, 158, 160, 247, 287, 288, 319, 321, 327, 328, 330, 331], "tanzer": 0, "februari": [0, 30, 321], "sig": [0, 23], "public": [0, 8, 11, 12, 13, 19, 23, 24, 30, 41, 42, 43, 44, 51, 61, 62, 74, 75, 83, 85, 95, 98, 99, 108, 117, 118, 137, 138, 145, 147, 148, 149, 150, 161, 163, 164, 165, 167, 168, 170, 174, 176, 177, 180, 181, 182, 194, 195, 199, 201, 206, 207, 208, 215, 216, 217, 218, 219, 220, 222, 223, 225, 228, 229, 236, 239, 250, 253, 254, 267, 268, 269, 271, 272, 274, 290, 309, 311, 312, 314, 315, 318, 319, 320, 322, 325, 326, 327, 328, 330, 331, 333], "tanenbaum87": [0, 319], "design": [0, 9, 13, 41, 316, 318, 320, 321, 327, 328, 330, 331, 332], "tanenbaum": 0, "welsch89": 0, "reason": [0, 9, 19, 41, 66, 102, 167, 168, 215, 216, 319, 326, 327, 330], "dynam": [0, 8, 9, 13, 19, 20, 23, 31, 41, 42, 43, 51, 75, 87, 89, 95, 118, 130, 135, 138, 148, 155, 158, 160, 161, 163, 167, 168, 174, 206, 207, 208, 219, 222, 223, 228, 229, 242, 244, 245, 251, 253, 254, 256, 259, 260, 278, 283, 284, 285, 310, 315, 316, 317, 318, 319, 320, 321, 324, 326, 327, 329, 331, 332, 335], "knowledg": [0, 319, 321, 330, 332], "welsch": 0, "barth": 0, "257": 0, "268": 0, "wa": [1, 5, 9, 19, 30, 41, 73, 98, 109, 167, 168, 220, 319, 321, 327, 328, 330, 331, 335], "develop": [1, 5, 7, 17, 19, 25, 26, 27, 30, 37, 38, 42, 43, 45, 68, 73, 83, 317, 320, 321, 323, 326, 327, 329, 330, 331, 332, 334, 335], "katholiek": 1, "universiteit": 1, "leuven": 1, "spdx": [1, 23, 317], "filecopyrighttext": 1, "2010": [1, 5, 102], "licens": [1, 4, 5, 6, 23, 31, 42, 43, 71, 105, 161, 236, 317, 321, 324], "identifi": [1, 19, 23, 41, 42, 43, 51, 70, 97, 98, 100, 109, 111, 112, 117, 127, 158, 160, 162, 212, 237, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 256, 257, 259, 260, 261, 267, 268, 269, 271, 272, 274, 282, 287, 288, 290, 292, 293, 303, 306, 307, 314, 315, 317, 326, 327, 328, 330, 331, 332, 333], "artist": [1, 4], "0": [1, 4, 5, 9, 11, 12, 13, 14, 15, 19, 21, 23, 24, 33, 44, 48, 56, 59, 64, 68, 70, 74, 75, 82, 83, 85, 90, 96, 97, 98, 100, 107, 108, 120, 122, 123, 124, 127, 128, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 151, 158, 163, 167, 168, 171, 172, 173, 174, 177, 184, 185, 187, 188, 190, 196, 197, 198, 202, 203, 205, 210, 211, 213, 214, 226, 227, 228, 229, 234, 238, 240, 241, 248, 253, 254, 273, 276, 277, 280, 281, 284, 285, 291, 292, 295, 304, 306, 309, 311, 314, 315, 317, 318, 320, 321, 323, 326, 327, 328, 329, 330, 331, 332, 333, 335], "contribut": [1, 6, 9, 19, 41, 42, 56, 98, 145, 314, 320, 324, 328, 330], "thi": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 32, 34, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 111, 112, 114, 117, 120, 121, 123, 125, 126, 127, 129, 130, 137, 141, 143, 144, 145, 153, 156, 157, 158, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 250, 251, 252, 253, 254, 271, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "file": [1, 2, 3, 4, 6, 9, 11, 12, 14, 15, 16, 18, 22, 23, 25, 26, 27, 29, 30, 31, 32, 35, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 112, 125, 126, 127, 128, 130, 136, 137, 138, 141, 147, 153, 157, 158, 159, 160, 162, 190, 191, 192, 201, 204, 213, 236, 241, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 311, 318, 321, 322, 325, 327, 329, 330, 331, 334, 335], "author": [1, 3, 5, 9, 17, 18, 23, 42, 43, 54, 63, 71, 91, 102, 104, 139, 161, 317, 321, 324, 328, 331], "theofrasto": 1, "mantad": 1, "suggest": [1, 20, 22, 26, 98, 326, 330, 332], "paulo": [1, 5, 23, 54, 63, 65, 98, 139, 253, 309, 317, 331], "version": [1, 5, 6, 7, 13, 15, 16, 18, 19, 24, 25, 31, 42, 43, 56, 71, 81, 85, 90, 98, 139, 161, 314, 317, 318, 321, 323, 324, 328, 329, 330, 333, 335], "date": [1, 3, 13, 18, 19, 23, 42, 43, 71, 134, 139, 141, 161, 317, 324, 332], "open": [1, 3, 4, 6, 9, 11, 13, 15, 19, 21, 22, 27, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 147, 204, 213, 241, 282, 309, 312, 314, 317, 318, 320, 321, 323, 324, 326, 328, 330, 332, 333], "doc": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 22, 23, 24, 26, 27, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 324], "library_index": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 23, 24, 26, 27, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105], "link": [1, 3, 4, 6, 11, 16, 18, 19, 21, 23, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 317, 328, 330, 332, 335], "web": [1, 3, 4, 5, 6, 11, 19, 21, 22, 23, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105], "browser": [1, 3, 4, 6, 11, 19, 21, 22, 31, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105], "To": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 18, 19, 21, 22, 23, 24, 25, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 111, 157, 159, 160, 163, 167, 168, 169, 171, 172, 174, 180, 181, 196, 197, 198, 202, 211, 215, 216, 217, 228, 229, 232, 289, 303, 307, 312, 314, 315, 319, 320, 323, 326, 328, 330, 332, 333, 335], "all": [1, 3, 4, 5, 6, 9, 10, 11, 13, 18, 19, 20, 23, 24, 27, 31, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 123, 125, 137, 153, 155, 157, 158, 160, 162, 169, 196, 197, 198, 203, 219, 229, 232, 237, 240, 243, 249, 250, 256, 257, 259, 260, 267, 268, 269, 271, 274, 283, 284, 285, 290, 291, 294, 296, 305, 308, 309, 311, 312, 313, 314, 317, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335], "entiti": [1, 3, 4, 6, 9, 10, 12, 13, 18, 19, 20, 24, 25, 31, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 108, 120, 121, 126, 127, 128, 130, 136, 137, 138, 139, 142, 143, 145, 147, 152, 153, 157, 158, 159, 160, 162, 208, 212, 247, 250, 251, 253, 254, 267, 268, 269, 271, 272, 274, 279, 282, 284, 287, 288, 289, 290, 309, 311, 314, 315, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "librari": [1, 3, 4, 6, 9, 10, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 137, 190, 240, 276, 277, 278, 280, 281, 282, 284, 315, 317, 318, 320, 322, 326, 327, 329, 330, 331, 334], "loader": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 38, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 158, 277, 278, 281, 315, 317, 320, 322, 324, 326, 327, 330], "lgt": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 147, 276, 277, 278, 280, 281, 311, 314, 320, 324, 328, 332, 333], "logtalk_load": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 38, 39, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 248, 273, 276, 277, 278, 283, 284, 311, 315, 320, 326, 327, 332], "predic": [1, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 111, 112, 114, 117, 118, 120, 123, 125, 126, 127, 128, 136, 137, 138, 140, 141, 143, 144, 145, 147, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 168, 170, 171, 173, 174, 176, 177, 178, 181, 185, 188, 190, 191, 192, 199, 201, 204, 206, 207, 212, 213, 217, 218, 219, 220, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 267, 268, 269, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 312, 313, 316, 319, 320, 322, 324, 327, 328, 331, 332, 333, 334], "tester": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 18, 19, 23, 24, 25, 41, 44, 45, 46, 47, 48, 50, 51, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 324, 332], "can": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 31, 32, 35, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 53, 54, 56, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 95, 96, 97, 98, 100, 103, 104, 109, 111, 118, 123, 126, 127, 130, 136, 137, 141, 143, 144, 147, 149, 150, 152, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 178, 182, 191, 192, 194, 195, 199, 201, 208, 212, 215, 216, 218, 225, 228, 229, 232, 235, 236, 239, 242, 244, 245, 252, 253, 276, 277, 278, 279, 280, 281, 282, 283, 284, 292, 304, 306, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "also": [2, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 34, 35, 41, 42, 43, 44, 46, 50, 51, 54, 55, 56, 60, 63, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 81, 83, 85, 87, 90, 91, 94, 96, 97, 98, 100, 102, 103, 105, 108, 118, 120, 127, 130, 142, 144, 145, 147, 158, 160, 163, 167, 168, 171, 172, 173, 174, 181, 182, 194, 195, 201, 212, 215, 216, 225, 228, 229, 236, 238, 239, 253, 276, 277, 278, 280, 281, 282, 283, 284, 295, 305, 308, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "found": [2, 5, 16, 19, 22, 23, 26, 27, 38, 41, 44, 46, 49, 71, 73, 74, 85, 98, 103, 108, 137, 157, 158, 161, 165, 218, 256, 259, 260, 276, 277, 280, 281, 304, 306, 314, 315, 317, 318, 320, 321, 323, 324, 326, 327, 328, 330, 331, 332, 335], "directori": [2, 4, 5, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 32, 38, 41, 44, 49, 60, 63, 71, 85, 96, 98, 103, 137, 276, 277, 278, 280, 281, 282, 311, 314, 317, 320, 324, 326, 327, 328, 332, 333], "md": [2, 14, 15, 16, 18, 19, 22, 23, 32, 71, 85, 103, 324], "flag": [2, 9, 10, 11, 12, 13, 16, 18, 19, 20, 23, 24, 25, 35, 41, 42, 43, 50, 55, 60, 68, 75, 79, 85, 94, 108, 109, 117, 130, 153, 156, 162, 164, 167, 168, 170, 185, 213, 218, 226, 252, 258, 273, 276, 277, 279, 280, 281, 282, 283, 284, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 315, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335], "api": [2, 16, 22, 41, 42, 43, 71, 85, 103, 137, 315, 317, 327, 328, 330, 332, 334, 335], "load": [2, 5, 16, 20, 21, 31, 34, 41, 42, 43, 71, 98, 103, 121, 128, 136, 141, 145, 147, 150, 152, 156, 157, 158, 159, 160, 162, 273, 276, 277, 278, 280, 281, 282, 283, 284, 289, 309, 311, 312, 315, 318, 319, 321, 322, 323, 325, 327, 329, 330, 331, 334], "test": [2, 16, 17, 20, 21, 22, 27, 34, 41, 42, 43, 71, 98, 103, 109, 123, 136, 160, 198, 230, 231, 237, 314, 315, 318, 320, 323, 324, 327, 328, 330, 331, 332, 333], "iso8601": [2, 42], "pddl_parser": [2, 42], "verdi_neruda": [2, 42], "xml_parser": [2, 42], "known": [2, 10, 13, 16, 41, 42, 43, 71, 111, 311, 315, 323, 327], "issu": [2, 9, 10, 13, 16, 20, 26, 42, 43, 71, 284, 315, 326, 330], "8601": [3, 317], "european": 3, "civil": 3, "calendar": [3, 52], "compliant": [3, 324, 327, 332], "time": [3, 5, 6, 9, 10, 12, 13, 16, 23, 24, 25, 31, 34, 41, 42, 43, 52, 56, 70, 83, 94, 97, 100, 107, 108, 112, 117, 141, 158, 159, 160, 171, 178, 181, 191, 192, 215, 216, 217, 230, 231, 237, 253, 278, 283, 284, 312, 314, 315, 319, 321, 325, 328, 329, 330, 332, 335], "clock": [3, 19, 100], "That": [3, 19, 311, 321, 332], "handler": [3, 22, 24, 57, 73, 111, 204, 241, 261, 312, 315, 318, 324, 333], "daniel": 3, "dudlei": 3, "creat": [3, 16, 17, 18, 20, 23, 31, 32, 41, 42, 43, 54, 56, 59, 73, 75, 81, 82, 86, 91, 93, 109, 126, 130, 137, 156, 162, 167, 168, 213, 242, 244, 245, 251, 252, 253, 254, 273, 295, 313, 317, 320, 321, 322, 324, 327, 330, 332, 335], "2004": 3, "02": 3, "modifi": [3, 4, 5, 23, 24, 27, 39, 56, 68, 137, 153, 163, 167, 168, 213, 228, 229, 242, 244, 245, 251, 252, 253, 254, 277, 281, 283, 284, 289, 314, 318, 319, 320, 321, 324, 326, 330, 332], "2014": 3, "09": 3, "get": [3, 5, 15, 19, 21, 23, 25, 26, 31, 42, 43, 63, 73, 83, 97, 100, 158, 159, 258, 298, 299, 309, 312, 325, 326, 327, 330, 332], "current": [3, 5, 9, 12, 13, 15, 16, 18, 19, 23, 24, 25, 30, 41, 42, 43, 48, 60, 63, 64, 67, 70, 73, 79, 89, 94, 97, 100, 104, 123, 137, 237, 256, 258, 259, 260, 276, 277, 278, 280, 281, 282, 288, 312, 315, 317, 318, 319, 321, 324, 326, 328, 330, 331, 332, 335], "pddl": 4, "parser": [4, 6, 9, 23, 315], "releas": [4, 5, 15, 23, 30, 32, 98, 321, 324, 332], "copyright": [4, 5, 6, 85, 161, 317, 324, 331], "2011": 4, "robert": [4, 9], "sasak": 4, "right": [4, 5, 13, 44, 56, 323], "reserv": [4, 5, 19, 42, 43, 322], "free": [4, 5, 41, 59, 82, 149, 169, 232, 317, 318, 319, 330, 335], "you": [4, 5, 6, 8, 12, 13, 14, 15, 18, 19, 23, 24, 25, 28, 29, 32, 35, 36, 39, 54, 57, 58, 60, 68, 69, 73, 75, 79, 81, 83, 91, 94, 96, 97, 98, 144, 164, 170, 199, 276, 277, 281, 311, 314, 315, 317, 320, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "redistribut": [4, 5], "under": [4, 5, 19, 23, 41, 230, 231, 311, 317, 327, 330, 332], "term": [4, 5, 8, 9, 12, 19, 20, 23, 31, 38, 41, 42, 43, 45, 47, 48, 54, 56, 59, 67, 69, 71, 74, 82, 83, 86, 88, 89, 91, 93, 96, 105, 107, 108, 109, 111, 112, 117, 118, 123, 130, 137, 143, 144, 147, 153, 158, 160, 162, 165, 167, 168, 169, 171, 172, 173, 174, 178, 181, 185, 190, 191, 192, 196, 197, 198, 201, 202, 203, 204, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 226, 228, 229, 232, 236, 240, 243, 247, 252, 253, 257, 261, 279, 282, 287, 288, 291, 292, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 311, 314, 317, 321, 322, 325, 327, 328, 329, 330, 331, 332, 333, 335], "perl": 4, "foundat": 4, "consult": [4, 5, 11, 12, 15, 18, 19, 21, 22, 31, 36, 38, 42, 43, 45, 54, 81, 86, 87, 91, 153, 311, 318, 328, 329, 332], "txt": [4, 6, 9, 10, 12, 13, 14, 15, 17, 19, 24, 25, 51, 85, 102, 104, 105, 137, 324], "detail": [4, 6, 9, 10, 12, 13, 14, 17, 18, 19, 22, 23, 28, 30, 33, 34, 39, 41, 46, 54, 60, 63, 80, 81, 84, 85, 86, 87, 91, 96, 104, 108, 117, 118, 207, 284, 314, 315, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "convert": [4, 6, 13, 16, 18, 19, 23, 30, 38, 42, 43, 44, 60, 68, 83, 98, 136, 150, 165, 167, 168, 192, 215, 216, 218, 315, 317, 320, 321, 322, 324, 330], "friendli": [4, 83], "syntax": [4, 8, 13, 19, 27, 38, 41, 42, 43, 71, 73, 74, 109, 111, 117, 125, 126, 127, 141, 143, 145, 147, 161, 212, 234, 314, 317, 318, 321, 323, 324, 325, 327, 328, 330, 332, 333], "For": [4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 29, 32, 36, 39, 41, 44, 45, 46, 48, 51, 54, 56, 59, 62, 63, 64, 68, 69, 73, 74, 75, 79, 80, 81, 82, 85, 86, 87, 89, 90, 91, 94, 95, 96, 97, 99, 100, 102, 104, 105, 107, 108, 136, 137, 153, 158, 160, 169, 171, 177, 185, 198, 204, 210, 213, 215, 216, 226, 232, 235, 240, 241, 252, 258, 271, 277, 279, 281, 282, 289, 302, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335], "exampl": [4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 36, 41, 42, 43, 44, 46, 48, 51, 54, 56, 59, 62, 63, 64, 67, 68, 69, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 95, 97, 99, 100, 102, 104, 105, 161, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "x": [4, 5, 13, 18, 19, 23, 24, 31, 38, 42, 43, 56, 69, 112, 117, 136, 142, 157, 158, 159, 160, 167, 168, 176, 181, 210, 251, 295, 302, 311, 312, 314, 315, 318, 319, 320, 330, 335], "sugar": 4, "op": [4, 19, 135, 138, 148, 149, 150, 152, 154, 158, 160, 180, 320, 325, 330, 332], "200": [4, 147], "fy": [4, 147, 325], "whole": [4, 51, 95, 321], "check": [4, 10, 12, 15, 16, 17, 21, 23, 32, 41, 42, 43, 44, 59, 60, 69, 71, 82, 83, 84, 91, 136, 153, 158, 160, 165, 177, 178, 186, 215, 216, 222, 249, 271, 272, 274, 278, 280, 283, 284, 285, 294, 301, 307, 315, 317, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 335], "usag": [4, 6, 13, 14, 16, 42, 43, 71, 85, 120, 315, 326, 327, 328, 330, 331, 332, 335], "output": [4, 5, 8, 9, 10, 13, 16, 18, 23, 24, 38, 41, 42, 43, 51, 56, 63, 69, 74, 95, 147, 204, 213, 218, 314, 315, 317, 319, 331, 332, 335], "provid": [4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 31, 34, 41, 42, 43, 44, 45, 46, 50, 51, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 107, 123, 136, 141, 150, 152, 156, 161, 167, 168, 174, 178, 191, 192, 198, 201, 212, 228, 229, 236, 278, 282, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "unit": [4, 8, 19, 36, 41, 78, 79, 85, 90, 96, 109, 311, 314, 315, 318, 321, 324], "collect": [4, 5, 9, 13, 18, 19, 20, 23, 41, 169, 196, 232, 291, 317, 330, 332, 335], "set": [4, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 22, 23, 25, 26, 27, 35, 36, 41, 42, 43, 51, 58, 60, 67, 68, 69, 71, 75, 79, 80, 83, 96, 98, 99, 102, 109, 120, 153, 156, 158, 160, 164, 167, 168, 169, 170, 218, 232, 252, 261, 276, 278, 280, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335], "from": [4, 5, 12, 13, 15, 16, 17, 18, 19, 20, 23, 24, 26, 27, 28, 32, 34, 41, 42, 43, 47, 50, 54, 55, 56, 59, 60, 68, 69, 73, 75, 81, 82, 83, 85, 87, 90, 91, 93, 94, 97, 98, 102, 104, 105, 107, 108, 112, 118, 123, 137, 141, 142, 147, 149, 150, 152, 153, 157, 158, 160, 161, 164, 167, 168, 170, 191, 192, 210, 237, 252, 253, 268, 276, 277, 279, 280, 281, 282, 297, 298, 299, 301, 302, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335], "plan": [4, 5], "competit": 4, "2008": 4, "In": [4, 5, 8, 9, 10, 12, 13, 15, 17, 18, 19, 20, 23, 24, 25, 27, 28, 34, 35, 36, 41, 44, 50, 55, 56, 60, 68, 69, 73, 87, 96, 98, 112, 130, 137, 145, 155, 158, 160, 167, 168, 173, 215, 216, 276, 277, 280, 281, 291, 305, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "order": [4, 5, 13, 19, 23, 25, 28, 36, 41, 42, 43, 54, 56, 61, 67, 91, 97, 102, 112, 141, 142, 143, 155, 160, 169, 171, 176, 196, 215, 216, 232, 251, 253, 254, 305, 309, 313, 314, 315, 320, 321, 322, 326, 327, 328, 330, 332, 333, 335], "run": [4, 5, 9, 12, 15, 16, 17, 20, 21, 22, 23, 27, 29, 31, 32, 38, 41, 42, 43, 60, 64, 73, 85, 87, 89, 90, 94, 104, 105, 129, 251, 253, 254, 278, 283, 284, 285, 303, 307, 311, 314, 317, 321, 322, 324, 326, 327, 328, 329, 330, 333, 334, 335], "type": [4, 5, 12, 13, 18, 19, 23, 24, 41, 42, 43, 47, 59, 69, 71, 80, 82, 83, 84, 85, 91, 95, 144, 161, 178, 185, 208, 215, 216, 240, 243, 252, 257, 261, 276, 277, 279, 280, 281, 292, 293, 294, 295, 303, 306, 307, 311, 315, 317, 319, 321, 322, 324, 327, 328, 330, 331, 332, 335], "Or": [4, 5, 11, 15, 19, 23, 68, 96, 328], "ani": [4, 5, 9, 10, 11, 12, 13, 19, 20, 23, 24, 27, 32, 41, 44, 45, 50, 54, 55, 56, 59, 60, 66, 67, 73, 75, 82, 85, 87, 99, 104, 108, 123, 130, 141, 145, 147, 152, 156, 167, 168, 178, 181, 201, 210, 236, 238, 278, 281, 282, 285, 303, 305, 309, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "some": [4, 5, 9, 10, 12, 13, 15, 19, 20, 22, 23, 24, 28, 32, 34, 35, 41, 44, 48, 52, 60, 67, 73, 74, 82, 84, 85, 91, 92, 94, 96, 98, 100, 102, 104, 109, 112, 123, 125, 126, 127, 129, 141, 143, 145, 147, 157, 158, 160, 226, 284, 309, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "fail": [4, 8, 16, 17, 20, 23, 24, 26, 35, 41, 42, 43, 44, 50, 74, 83, 96, 108, 117, 118, 128, 136, 169, 176, 182, 195, 198, 202, 203, 205, 210, 220, 225, 232, 239, 276, 277, 280, 281, 284, 291, 297, 298, 301, 302, 307, 315, 317, 319, 320, 325, 326, 327, 330, 332, 335], "due": [4, 9, 10, 13, 19, 20, 23, 24, 34, 41, 73, 82, 94, 109, 143, 284, 314, 315, 318, 320, 326, 329, 330, 332], "limit": [4, 5, 9, 13, 15, 16, 20, 42, 43, 94, 129, 172, 226, 315, 318, 323, 325, 326, 332], "maximum": [4, 19, 44, 65, 226, 315], "ariti": [4, 12, 24, 41, 51, 56, 107, 108, 111, 117, 118, 120, 123, 125, 127, 140, 145, 149, 150, 152, 155, 158, 160, 161, 163, 167, 168, 172, 174, 177, 181, 212, 226, 228, 229, 315, 317, 323, 326, 328, 330, 332], "verdi": 5, "neruda": 5, "meta": [5, 8, 10, 13, 19, 20, 25, 27, 31, 36, 41, 42, 43, 44, 71, 79, 94, 96, 104, 108, 109, 111, 117, 118, 142, 143, 155, 158, 160, 162, 173, 177, 191, 203, 313, 318, 320, 322, 325, 326, 327, 332], "interpret": [5, 9, 12, 15, 16, 18, 19, 25, 31, 41, 42, 43, 67, 69, 75, 81, 104, 137, 143, 158, 160, 171, 173, 276, 277, 280, 281, 283, 284, 309, 312, 315, 319, 323, 325, 326, 327, 328, 329, 330, 331, 332], "victor": [5, 65], "lagerkvist": [5, 65], "simplifi": [5, 17, 19, 23, 41, 44, 56, 81, 109, 117, 157, 158, 159, 160, 212, 314, 315, 318, 323, 326, 328, 329, 330, 331], "bsd": [5, 23, 70, 97, 100, 105], "content": [5, 13, 19, 23, 51, 56, 71, 88, 126, 137, 280, 281, 314, 317, 320, 324, 327, 328, 330, 332, 333, 334], "about": [5, 18, 19, 22, 23, 24, 31, 36, 41, 42, 43, 66, 85, 98, 102, 171, 279, 314, 315, 317, 318, 324, 327, 328, 329, 330, 332, 333, 334, 335], "site": 5, "instal": [5, 15, 16, 17, 18, 19, 31, 42, 43, 73, 278, 311, 317, 322, 332], "sourc": [5, 6, 9, 10, 12, 13, 14, 15, 16, 19, 20, 23, 26, 27, 30, 31, 35, 41, 42, 43, 44, 46, 56, 58, 67, 68, 74, 80, 85, 104, 112, 126, 128, 130, 136, 137, 138, 141, 147, 153, 157, 158, 159, 160, 162, 191, 192, 201, 236, 273, 276, 277, 280, 281, 282, 283, 284, 289, 314, 317, 318, 321, 322, 327, 328, 330, 333, 334], "binari": [5, 19, 44, 48, 54, 88], "form": [5, 19, 41, 56, 69, 83, 94, 161, 315, 317, 323, 329], "without": [5, 9, 10, 13, 19, 20, 23, 25, 26, 41, 54, 68, 80, 81, 87, 89, 145, 176, 235, 278, 283, 284, 307, 309, 314, 315, 321, 323, 326, 327, 328, 329, 330, 332, 335], "modif": [5, 105, 314, 316, 317, 319, 332, 335], "permit": 5, "follow": [5, 9, 10, 11, 13, 18, 19, 20, 22, 23, 24, 33, 45, 50, 51, 55, 56, 60, 68, 69, 74, 80, 99, 102, 104, 109, 128, 129, 136, 147, 153, 169, 177, 185, 188, 190, 191, 192, 196, 204, 213, 226, 227, 234, 235, 240, 241, 282, 284, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335], "condit": [5, 6, 10, 19, 23, 35, 42, 43, 61, 62, 98, 111, 128, 129, 134, 136, 138, 162, 251, 253, 254, 317, 319, 322, 325, 329, 330, 335], "met": 5, "code": [5, 11, 12, 13, 16, 20, 23, 26, 27, 30, 31, 35, 36, 41, 42, 43, 44, 46, 48, 54, 57, 59, 60, 64, 65, 68, 69, 70, 74, 79, 80, 81, 82, 85, 88, 89, 91, 93, 96, 97, 98, 100, 102, 104, 105, 125, 127, 128, 129, 130, 136, 141, 143, 145, 171, 177, 212, 226, 237, 276, 277, 280, 281, 282, 284, 309, 311, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 333, 334, 335], "must": [5, 10, 12, 13, 15, 17, 18, 19, 22, 23, 24, 25, 27, 29, 32, 41, 44, 51, 54, 56, 60, 64, 67, 74, 75, 83, 87, 89, 91, 95, 96, 97, 107, 117, 121, 123, 130, 137, 141, 145, 155, 156, 158, 160, 177, 201, 212, 251, 253, 261, 278, 279, 305, 308, 309, 311, 312, 313, 314, 315, 317, 319, 320, 323, 325, 326, 327, 328, 330, 331, 332, 333, 335], "retain": [5, 321, 332], "abov": [5, 13, 18, 19, 23, 26, 44, 56, 69, 102, 284, 309, 311, 315, 317, 323, 325, 328, 329, 330, 331, 332, 335], "list": [5, 9, 10, 13, 18, 19, 20, 22, 23, 25, 27, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 56, 59, 60, 64, 67, 69, 70, 71, 74, 80, 81, 82, 83, 85, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 109, 111, 117, 120, 136, 139, 140, 144, 146, 158, 160, 161, 167, 168, 169, 177, 181, 186, 192, 196, 197, 206, 207, 208, 215, 216, 217, 218, 219, 220, 222, 232, 236, 243, 244, 247, 251, 252, 253, 254, 261, 268, 271, 276, 277, 279, 280, 281, 282, 284, 287, 288, 295, 305, 308, 310, 314, 315, 317, 318, 320, 323, 324, 326, 327, 328, 330, 331, 332, 333, 335], "disclaim": 5, "reproduc": [5, 42, 43, 71], "other": [5, 7, 9, 10, 16, 19, 23, 25, 27, 32, 34, 37, 38, 41, 42, 43, 44, 46, 54, 60, 67, 69, 70, 71, 73, 80, 81, 86, 91, 97, 98, 100, 107, 108, 240, 283, 284, 309, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 335], "materi": [5, 100, 316], "distribut": [5, 6, 13, 15, 19, 23, 24, 29, 31, 36, 42, 43, 85, 104, 315, 319, 321, 322, 327, 329, 332], "BY": 5, "THE": 5, "holder": 5, "AS": 5, "AND": 5, "express": [5, 19, 20, 41, 42, 43, 69, 130, 162, 171, 172, 188, 278, 315, 316, 318, 320, 321, 327, 328, 331, 332], "OR": 5, "impli": [5, 9, 41, 118, 314, 319, 321, 326, 330, 332, 335], "warranti": 5, "includ": [5, 9, 10, 13, 18, 19, 20, 23, 24, 25, 27, 29, 30, 41, 51, 60, 70, 74, 85, 90, 96, 97, 98, 100, 102, 105, 112, 130, 135, 136, 138, 144, 154, 156, 158, 160, 161, 177, 178, 181, 185, 188, 190, 213, 217, 226, 227, 240, 282, 283, 284, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "BUT": 5, "NOT": 5, "TO": 5, "OF": 5, "merchant": 5, "fit": [5, 68, 98, 321], "FOR": 5, "particular": [5, 9, 13, 19, 34, 41, 85, 314, 318, 321, 326, 328, 330, 332, 333], "purpos": [5, 9, 19, 22, 41, 317, 326, 327, 330], "IN": 5, "NO": 5, "event": [5, 34, 36, 41, 42, 43, 53, 59, 71, 76, 153, 161, 162, 164, 170, 203, 243, 257, 261, 273, 310, 314, 320, 322, 326, 327, 328, 329, 330, 332, 333, 334], "shall": [5, 292, 293, 294, 295, 303, 306, 307, 312, 335], "contributor": [5, 324], "BE": 5, "liabl": 5, "direct": [5, 8, 9, 10, 14, 18, 19, 20, 24, 27, 28, 30, 31, 41, 42, 43, 50, 54, 55, 56, 60, 67, 68, 75, 81, 94, 98, 107, 112, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 167, 168, 174, 177, 180, 181, 185, 190, 191, 212, 217, 228, 229, 251, 253, 254, 271, 278, 282, 283, 284, 289, 309, 311, 312, 315, 319, 320, 321, 322, 323, 324, 325, 327, 332, 335], "indirect": [5, 330], "incident": 5, "special": [5, 9, 10, 13, 19, 20, 22, 23, 24, 26, 27, 34, 35, 41, 84, 108, 120, 146, 253, 290, 313, 314, 315, 317, 319, 320, 321, 326, 327, 328, 330, 332], "exemplari": 5, "consequenti": 5, "damag": 5, "procur": 5, "substitut": 5, "good": [5, 13, 19, 20, 31, 42, 43, 54, 81, 319, 326, 327, 330, 332], "servic": [5, 19, 23, 31, 42, 43], "loss": [5, 19], "data": [5, 13, 16, 20, 23, 41, 42, 43, 46, 48, 51, 63, 74, 75, 81, 89, 92, 95, 96, 98, 99, 104, 137, 149, 157, 158, 160, 236, 314, 315, 316, 317, 318, 321, 326, 327, 328, 329, 330, 331, 332, 333, 334], "profit": 5, "busi": 5, "interrupt": [5, 94], "howev": [5, 8, 13, 17, 19, 22, 23, 24, 25, 36, 48, 73, 98, 167, 168, 169, 232, 283, 284, 311, 313, 314, 315, 316, 318, 319, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 335], "caus": [5, 10, 19, 23, 27, 185, 190, 213, 240, 318, 319, 326, 332], "ON": 5, "theori": [5, 9, 99, 316, 323], "liabil": 5, "whether": [5, 99, 202], "contract": 5, "strict": 5, "tort": 5, "neglig": [5, 329], "otherwis": [5, 19, 23, 51, 79, 91, 214, 313, 314, 317, 325, 326, 328, 330, 331, 332, 333], "aris": 5, "wai": [5, 19, 41, 42, 43, 95, 252, 309, 311, 312, 314, 317, 319, 320, 321, 322, 323, 326, 327, 328, 330, 332, 333], "out": [5, 19, 56, 251, 253, 254, 314, 318, 321, 326, 330, 332], "even": [5, 19, 27, 34, 56, 202, 323, 324, 327, 330, 331, 332, 335], "IF": 5, "advis": [5, 19, 23, 26, 27, 35, 317, 324, 326, 330, 332], "possibl": [5, 10, 13, 17, 19, 20, 22, 23, 24, 28, 34, 35, 41, 44, 51, 63, 67, 69, 74, 97, 99, 120, 123, 158, 160, 177, 185, 188, 190, 213, 226, 227, 240, 251, 253, 254, 282, 309, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335], "SUCH": 5, "view": [5, 42, 43, 316, 322, 330], "conclus": 5, "contain": [5, 6, 8, 13, 18, 19, 20, 23, 25, 34, 38, 41, 54, 56, 59, 69, 74, 79, 85, 97, 102, 104, 105, 109, 117, 127, 128, 136, 137, 141, 145, 149, 150, 153, 156, 158, 160, 169, 171, 172, 178, 196, 197, 198, 210, 211, 212, 232, 237, 252, 282, 283, 284, 292, 304, 305, 306, 308, 309, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 332, 333, 335], "those": [5, 13, 19, 22, 24, 27, 28, 54, 56, 60, 67, 128, 130, 136, 278, 281, 314, 315, 316, 317, 321, 324, 326, 327, 328, 329, 330, 332], "should": [5, 9, 10, 13, 17, 19, 23, 24, 31, 34, 41, 42, 43, 44, 45, 46, 54, 63, 68, 80, 81, 83, 84, 86, 87, 89, 105, 108, 109, 118, 123, 125, 129, 137, 141, 157, 159, 160, 177, 178, 201, 236, 252, 278, 280, 302, 303, 307, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 327, 328, 330, 331, 332, 333, 335], "repres": [5, 8, 13, 19, 41, 44, 46, 48, 51, 69, 70, 74, 81, 83, 85, 91, 92, 95, 96, 98, 123, 130, 142, 143, 161, 165, 177, 218, 243, 250, 257, 261, 267, 268, 269, 271, 272, 274, 277, 281, 290, 312, 314, 315, 317, 318, 319, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 335], "offici": [5, 20, 23, 63, 98, 321, 324, 332], "polici": 5, "either": [5, 9, 10, 12, 13, 14, 15, 17, 19, 20, 22, 23, 24, 25, 27, 28, 41, 44, 54, 56, 59, 63, 64, 67, 69, 81, 85, 86, 90, 98, 112, 117, 128, 136, 137, 140, 158, 167, 168, 198, 201, 236, 252, 254, 256, 259, 260, 291, 309, 314, 315, 316, 317, 318, 321, 325, 326, 327, 328, 329, 330, 332, 333, 335], "more": [5, 9, 13, 18, 19, 20, 23, 24, 27, 34, 36, 41, 44, 45, 56, 57, 61, 62, 69, 83, 89, 98, 102, 108, 120, 158, 159, 160, 284, 298, 303, 307, 309, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335], "precis": [5, 319], "like": [5, 10, 20, 23, 24, 36, 41, 54, 56, 60, 78, 81, 309, 311, 318, 319, 321, 323, 324, 325, 326, 327, 328, 330, 332, 335], "pedant": 5, "point": [5, 9, 19, 23, 24, 26, 32, 41, 42, 43, 68, 96, 98, 99, 182, 191, 201, 225, 317, 320, 322, 324, 330, 332, 335], "annoi": 5, "peopl": [5, 321], "realli": [5, 327], "sinc": [5, 36, 39, 97, 283, 284, 317, 324, 332], "themselv": [5, 19, 23, 24, 34, 41, 330, 332], "aren": 5, "thei": [5, 9, 10, 19, 23, 41, 60, 67, 68, 84, 89, 94, 99, 155, 157, 159, 201, 236, 280, 282, 283, 284, 309, 314, 317, 319, 320, 323, 324, 325, 327, 328, 330, 332, 335], "written": [5, 19, 41, 46, 51, 56, 68, 69, 90, 95, 109, 169, 232, 276, 277, 315, 330, 332], "let": [5, 56, 309, 311], "just": [5, 19, 27, 51, 69, 309, 311, 315, 316, 317, 318, 319, 323, 325, 326, 327, 330, 332], "sai": [5, 19, 73, 312, 321], "veri": [5, 56, 314, 319, 321, 324, 333], "much": [5, 9, 19, 332], "pure": [5, 312, 317], "negat": [5, 315, 329], "finit": [5, 19, 44], "failur": [5, 16, 19, 24, 42, 43, 59, 136, 198, 284, 285, 291, 292, 304, 306, 315, 317, 318, 319, 335], "entir": [5, 332], "compat": [5, 18, 19, 23, 30, 31, 42, 43, 156, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 318, 320, 322, 323, 324, 325, 327, 330, 332, 335], "most": [5, 15, 17, 19, 20, 23, 30, 31, 39, 42, 43, 44, 56, 60, 67, 85, 91, 96, 97, 98, 130, 144, 155, 192, 212, 215, 216, 230, 231, 237, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 330, 332, 333, 335], "major": [5, 23, 317, 324, 330, 332], "name": [5, 8, 9, 10, 13, 14, 18, 19, 20, 22, 23, 24, 25, 27, 36, 41, 42, 43, 44, 51, 56, 61, 62, 63, 67, 68, 69, 83, 85, 95, 98, 102, 107, 108, 111, 117, 118, 120, 123, 125, 127, 130, 137, 140, 145, 149, 150, 152, 155, 157, 158, 159, 160, 162, 163, 167, 168, 174, 181, 228, 229, 240, 253, 276, 277, 278, 280, 281, 282, 294, 295, 296, 298, 299, 300, 301, 309, 311, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 331, 333, 335], "sadli": 5, "subtl": 5, "wordplai": 5, "acronym": 5, "help": [5, 10, 16, 22, 27, 34, 41, 42, 43, 44, 68, 89, 98, 278, 315, 317, 320, 321, 324, 326, 329, 330, 331], "soundex": 5, "algorithm": [5, 23, 41, 80, 99, 323, 327, 330, 335], "suit": [5, 19, 60], "top": [5, 10, 12, 13, 15, 18, 19, 20, 21, 23, 25, 41, 67, 160, 276, 277, 280, 281, 283, 284, 315, 325, 326, 327, 328, 329, 330, 332], "down": [5, 19], "bottom": 5, "up": [5, 19, 20, 23, 31, 42, 43, 156, 312, 315, 317, 324, 330, 332, 335], "how": [5, 19, 20, 26, 27, 29, 31, 41, 42, 43, 50, 55, 60, 67, 98, 130, 167, 168, 171, 177, 317, 318, 320, 324, 326, 327, 329, 330, 332], "resolut": [5, 327], "tree": [5, 17, 19, 44, 54, 99, 160, 276, 277, 280, 281], "search": [5, 15, 42, 43, 77, 323, 332], "rule": [5, 9, 20, 24, 41, 42, 43, 67, 85, 104, 105, 120, 125, 127, 140, 142, 144, 145, 149, 150, 152, 155, 162, 171, 173, 192, 203, 214, 215, 216, 278, 314, 315, 317, 322, 326, 328, 329, 331, 332, 333, 335], "affect": [5, 12, 19, 23, 41, 54, 153, 284, 319, 320, 323, 326, 329, 332], "perform": [5, 10, 19, 23, 24, 26, 30, 31, 41, 42, 43, 54, 68, 69, 81, 87, 89, 94, 96, 98, 108, 117, 118, 128, 129, 136, 141, 157, 159, 160, 176, 191, 192, 210, 215, 216, 284, 314, 315, 320, 322, 323, 324, 326, 328, 330, 333], "complet": [5, 13, 19, 141, 227, 284, 312, 314, 315, 317, 318, 324, 332], "famili": [5, 24, 315], "we": [5, 10, 11, 13, 14, 17, 18, 19, 23, 27, 41, 44, 68, 69, 75, 80, 85, 86, 91, 96, 98, 111, 126, 169, 232, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335], "find": [5, 10, 12, 13, 15, 19, 41, 42, 43, 98, 99, 130, 169, 196, 197, 232, 295, 301, 317, 318, 322, 323, 324, 326, 327, 332, 334, 335], "long": [5, 19, 35, 56, 67, 157, 158, 159, 160, 251, 253, 254, 314, 317, 320, 323, 326, 328, 330], "stand": [5, 146, 253, 321, 328], "champion": 5, "depth": [5, 9, 19, 44, 108, 117, 118, 323, 327], "slow": [5, 19], "orderli": 5, "brother": 5, "breadth": 5, "youngster": 5, "iter": 5, "deepen": 5, "best": [5, 13, 16, 19, 34, 36, 42, 43, 51, 91, 95, 125, 127, 141, 143, 145, 313, 314, 317, 321, 323, 328, 330, 332, 333], "framework": [5, 19, 321], "stone": 5, "throw": [5, 8, 19, 44, 96, 128, 136, 173, 177, 178, 185, 187, 188, 190, 203, 204, 213, 226, 227, 234, 235, 240, 241, 291, 298, 315, 317, 318, 327, 331, 335], "awai": [5, 318, 330], "With": [5, 9, 10, 19, 20, 23, 24, 39, 315, 318, 319, 326, 328, 329, 330, 332], "defin": [5, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 26, 27, 28, 31, 32, 35, 41, 42, 43, 51, 54, 56, 64, 67, 69, 71, 73, 79, 80, 81, 82, 83, 84, 87, 90, 92, 95, 97, 98, 105, 107, 108, 112, 117, 118, 120, 121, 123, 126, 130, 136, 137, 141, 145, 147, 157, 158, 159, 160, 161, 164, 170, 171, 176, 181, 192, 199, 201, 206, 207, 208, 213, 214, 215, 216, 219, 220, 222, 223, 236, 240, 247, 252, 256, 257, 259, 260, 261, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 295, 310, 312, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 329, 331, 334, 335], "greedi": [5, 99], "well": [5, 41, 320, 321, 326, 327, 332], "camp": 5, "semi": 5, "naiv": 5, "fixpoint": 5, "natur": [5, 316, 319, 321, 327, 330, 332], "goal": [5, 8, 10, 12, 13, 14, 16, 20, 22, 23, 24, 26, 39, 41, 42, 43, 56, 67, 79, 85, 94, 107, 109, 112, 117, 123, 128, 129, 136, 141, 142, 143, 147, 156, 162, 165, 167, 168, 169, 171, 172, 173, 177, 185, 188, 190, 191, 196, 197, 198, 201, 202, 203, 210, 211, 212, 213, 215, 216, 226, 227, 230, 231, 232, 234, 235, 237, 240, 253, 279, 282, 291, 292, 295, 298, 302, 303, 304, 306, 307, 311, 312, 314, 315, 317, 319, 322, 325, 326, 327, 328, 329, 330, 331, 332], "transform": [5, 19, 44, 320], "techniqu": [5, 323, 326], "call": [5, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 41, 42, 43, 44, 50, 54, 55, 60, 63, 69, 73, 75, 78, 79, 83, 87, 94, 96, 107, 108, 109, 111, 112, 114, 117, 118, 120, 123, 137, 141, 142, 143, 147, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 176, 177, 178, 184, 185, 186, 188, 190, 191, 192, 196, 197, 198, 199, 201, 202, 203, 204, 206, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 225, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 243, 251, 253, 254, 261, 276, 277, 278, 279, 280, 281, 282, 284, 285, 289, 291, 292, 293, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 317, 319, 320, 321, 322, 323, 324, 327, 328, 331, 332, 333, 334], "magic": 5, "befor": [5, 9, 10, 13, 19, 23, 24, 25, 27, 41, 44, 57, 60, 83, 107, 109, 147, 157, 159, 160, 164, 189, 191, 203, 243, 257, 261, 278, 312, 315, 318, 319, 320, 323, 324, 325, 326, 330, 331, 332, 333, 335], "infer": [5, 13, 23, 24, 252, 329], "made": [5, 15, 18, 19, 23, 32, 50, 55, 60, 69, 74, 75, 94, 98, 104, 108, 129, 156, 158, 160, 276, 277, 280, 281, 283, 284, 305, 308, 309, 314, 319, 327, 328, 330, 332, 335], "allow": [5, 8, 9, 10, 11, 13, 17, 18, 19, 23, 24, 25, 28, 30, 33, 36, 41, 44, 51, 59, 60, 67, 68, 73, 74, 75, 82, 85, 87, 95, 98, 104, 107, 108, 109, 111, 112, 117, 123, 127, 143, 153, 155, 157, 158, 159, 160, 161, 164, 167, 168, 170, 177, 185, 188, 190, 197, 204, 212, 213, 219, 226, 227, 234, 235, 240, 241, 253, 278, 284, 285, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "onli": [5, 10, 11, 12, 13, 17, 19, 20, 23, 24, 27, 30, 34, 35, 36, 38, 39, 41, 44, 45, 47, 48, 54, 58, 60, 67, 68, 69, 75, 79, 81, 84, 85, 86, 91, 96, 98, 100, 104, 109, 117, 118, 123, 126, 128, 130, 136, 141, 149, 150, 153, 156, 163, 176, 191, 192, 215, 216, 218, 236, 250, 252, 271, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335], "fact": [5, 10, 19, 23, 24, 41, 56, 58, 161, 212, 278, 315, 326, 328, 330, 332], "would": [5, 8, 9, 13, 19, 23, 24, 25, 34, 75, 83, 98, 129, 141, 178, 214, 284, 309, 315, 317, 318, 325, 326, 327, 330, 331, 332, 335], "have": [5, 12, 13, 15, 19, 20, 22, 23, 24, 25, 27, 32, 41, 56, 69, 84, 98, 127, 129, 142, 143, 145, 147, 155, 165, 177, 206, 218, 220, 222, 283, 284, 293, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335], "same": [5, 9, 10, 13, 15, 17, 19, 20, 23, 24, 27, 31, 34, 41, 42, 43, 44, 46, 56, 67, 69, 73, 87, 97, 99, 105, 107, 111, 112, 128, 136, 137, 141, 155, 157, 158, 159, 160, 177, 185, 188, 190, 204, 212, 213, 226, 227, 234, 235, 240, 241, 252, 305, 308, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "shell": [5, 14, 19, 22, 23, 32, 38, 73, 85, 324, 332], "akin": [5, 334, 335], "loop": [5, 20, 42, 43, 71, 165, 198, 201, 278, 285, 313, 315, 319, 320, 327, 328, 330, 331, 335], "It": [5, 9, 13, 18, 19, 23, 24, 26, 27, 29, 41, 44, 45, 56, 58, 63, 67, 69, 73, 74, 82, 96, 97, 99, 104, 108, 111, 118, 120, 123, 158, 160, 186, 196, 197, 219, 278, 282, 309, 311, 312, 313, 314, 315, 317, 319, 320, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335], "ha": [5, 56, 74, 141, 196, 197, 312, 318, 319, 321, 323, 325, 326, 330], "command": [5, 9, 12, 13, 14, 15, 17, 19, 23, 42, 43, 63, 90, 322, 324, 329, 331, 332], "both": [5, 13, 17, 18, 19, 22, 23, 31, 34, 41, 42, 43, 44, 56, 64, 67, 73, 87, 98, 104, 127, 137, 143, 176, 198, 243, 261, 276, 277, 278, 282, 309, 312, 314, 315, 316, 317, 318, 319, 320, 322, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335], "prove": [5, 19, 41, 109, 112, 117, 155, 176, 237, 291, 292, 295, 303, 304, 306, 307, 325, 326, 328, 329], "choic": [5, 19, 23, 24, 26, 54, 74, 81, 96, 182, 225, 315, 316, 318, 319, 321, 332], "benchmark": [5, 19, 34, 325, 329, 332], "If": [5, 8, 12, 13, 15, 19, 20, 22, 23, 24, 27, 32, 38, 54, 56, 68, 69, 75, 79, 81, 90, 96, 108, 128, 136, 165, 218, 276, 277, 280, 281, 295, 298, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 323, 324, 325, 326, 328, 330, 332, 333, 335], "support": [5, 9, 11, 12, 16, 18, 19, 20, 21, 23, 27, 29, 30, 31, 32, 34, 35, 38, 41, 42, 43, 44, 48, 50, 52, 53, 55, 56, 60, 61, 62, 63, 64, 67, 68, 69, 74, 75, 76, 79, 80, 83, 84, 87, 90, 94, 96, 100, 104, 105, 108, 109, 117, 123, 125, 128, 130, 141, 156, 163, 167, 168, 171, 172, 174, 181, 215, 216, 217, 226, 228, 229, 251, 252, 253, 254, 279, 282, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334], "statist": [5, 19, 25, 42, 43, 71, 330], "obtain": [5, 12], "cpu": [5, 19, 312], "visit": [5, 13, 37, 90], "page": [5, 9, 13, 14, 15, 17, 18, 19, 23, 42, 43, 56, 102, 104, 324], "joelbyt": 5, "requir": [5, 9, 12, 16, 19, 24, 27, 31, 41, 42, 43, 48, 66, 67, 68, 71, 75, 83, 85, 90, 96, 97, 104, 123, 130, 156, 158, 167, 168, 204, 227, 241, 261, 284, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 315, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 331, 332, 335], "40": 5, "later": [5, 13, 15, 19, 23, 314, 318, 329, 330, 332, 335], "snapshot": 5, "bundl": [5, 19, 23, 73], "start": [5, 12, 15, 19, 23, 24, 25, 30, 31, 42, 43, 44, 56, 73, 85, 107, 108, 122, 129, 136, 141, 146, 151, 165, 218, 253, 282, 298, 299, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 326, 328, 330, 335], "latest": [5, 15, 17, 23, 25, 31, 42, 43, 63, 98], "fetch": [5, 297, 329, 335], "archiv": [5, 23, 45, 324], "git": [5, 13, 15, 17, 19, 22, 23, 42, 43, 71, 104], "repositori": [5, 13, 22, 63], "extract": [5, 18, 97], "your": [5, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 29, 32, 35, 36, 38, 42, 43, 50, 55, 56, 57, 60, 67, 68, 84, 85, 92, 96, 98, 284, 311, 315, 317, 320, 322, 324, 326, 327, 328, 330, 331], "everyth": [5, 327, 331], "went": 5, "accord": [5, 19], "greet": 5, "welcom": [5, 23, 98], "messag": [5, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 25, 26, 31, 32, 36, 38, 41, 42, 43, 50, 55, 60, 64, 67, 69, 73, 111, 112, 114, 117, 118, 120, 141, 153, 156, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 177, 182, 185, 188, 190, 194, 195, 196, 197, 198, 199, 202, 203, 204, 206, 207, 208, 210, 211, 213, 215, 216, 218, 219, 220, 225, 226, 227, 230, 231, 232, 234, 235, 238, 239, 240, 241, 243, 257, 261, 279, 284, 291, 292, 295, 303, 304, 306, 307, 309, 310, 311, 313, 314, 316, 319, 320, 321, 322, 323, 326, 327, 328, 330, 332, 333, 334, 335], "replac": [5, 13, 19, 27, 36, 68, 98, 252, 314, 315, 317, 324, 326, 327, 328, 332], "one": [5, 13, 15, 17, 19, 22, 23, 24, 26, 27, 41, 44, 56, 61, 62, 67, 69, 80, 89, 91, 98, 99, 144, 159, 161, 163, 165, 167, 168, 178, 182, 185, 190, 191, 192, 194, 195, 202, 204, 212, 213, 218, 229, 239, 240, 241, 242, 243, 244, 245, 251, 252, 253, 254, 261, 267, 268, 269, 274, 283, 284, 289, 290, 291, 292, 293, 295, 296, 299, 300, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 332, 333, 335], "altern": [5, 7, 8, 9, 10, 13, 15, 16, 18, 19, 20, 22, 23, 24, 27, 28, 41, 42, 43, 44, 48, 51, 53, 56, 58, 59, 68, 73, 74, 80, 87, 90, 95, 96, 120, 123, 158, 160, 198, 210, 280, 283, 303, 309, 311, 314, 315, 317, 318, 320, 321, 323, 324, 326, 327, 328, 330, 331, 332, 335], "step": [5, 13, 18, 19, 23, 30, 41, 67, 68, 99, 317, 320, 324, 326, 331, 332], "previou": [5, 15, 23, 314, 315, 317, 320, 330, 335], "instruct": [5, 15, 17, 18, 22, 29, 32, 35, 85, 324, 326, 330, 332], "re": [5, 13, 14, 15, 19, 23, 41, 104, 169, 202, 211, 232, 291, 298, 317, 332, 335], "go": [5, 19, 41, 178, 313, 315, 330, 332], "predefin": [5, 17, 19, 41, 153, 252, 258, 289, 317, 324, 325], "databas": [5, 41, 42, 43, 89, 109, 137, 158, 160, 162, 192, 203, 213, 253, 314, 319, 321, 326, 327, 328, 332, 335], "begin": [5, 19, 56, 314, 315, 326, 328, 331, 333], "print": [5, 8, 9, 10, 11, 13, 16, 18, 19, 21, 22, 23, 27, 35, 41, 42, 43, 60, 141, 150, 162, 203, 206, 207, 208, 218, 219, 220, 284, 312, 314, 317, 319, 322, 326, 328, 330, 332], "demo": 5, "demodb": 5, "next": [5, 8, 19, 23, 27, 30, 67, 153, 228, 298, 299, 315, 317, 318, 320, 323, 324, 326, 330, 332, 334, 335], "look": [5, 10, 19, 26, 137, 158, 160, 317, 323, 326, 330, 332], "someth": [5, 59, 315, 319, 325, 327, 330], "append": [5, 19, 20, 142, 143, 158, 160, 171, 172, 276, 277, 279, 280, 281, 311, 324, 326, 328, 329, 330, 332], "true": [5, 13, 19, 20, 23, 25, 27, 41, 44, 48, 51, 68, 74, 83, 96, 128, 129, 136, 140, 147, 182, 194, 195, 198, 203, 205, 210, 215, 216, 225, 252, 284, 291, 315, 317, 320, 327, 329, 330, 331, 332, 335], "which": [5, 8, 9, 13, 15, 17, 19, 22, 23, 24, 25, 28, 31, 36, 41, 42, 43, 56, 57, 59, 63, 68, 78, 80, 82, 87, 99, 104, 112, 137, 142, 143, 165, 178, 210, 212, 218, 252, 276, 277, 280, 281, 304, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335], "mean": [5, 9, 19, 23, 111, 314, 316, 317, 319, 324, 327, 328, 329, 330, 333], "readi": [5, 18, 300, 302, 311, 324], "action": [5, 10, 21, 23, 87, 283, 284, 285, 312, 315, 319, 326], "need": [5, 6, 12, 13, 15, 19, 22, 23, 24, 25, 31, 32, 34, 35, 36, 41, 42, 43, 56, 57, 68, 69, 98, 109, 251, 253, 254, 309, 311, 312, 314, 315, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 332, 333, 335], "decid": [5, 19, 23, 252, 321, 325, 330, 331], "fortun": 5, "doe": [5, 23, 31, 41, 42, 43, 56, 87, 109, 111, 117, 152, 167, 168, 190, 238, 242, 244, 245, 261, 276, 277, 280, 281, 285, 313, 314, 315, 317, 318, 319, 320, 323, 326, 327, 328, 329, 330, 332, 333, 334], "leav": [5, 19, 24, 51, 152, 327, 330], "imagin": 5, "might": [5, 32, 315, 318, 323, 332], "expect": [5, 9, 10, 11, 14, 19, 20, 23, 24, 35, 41, 42, 43, 44, 60, 71, 73, 80, 82, 94, 96, 147, 240, 317, 319, 321, 322, 324, 326, 329, 330, 332, 335], "dfs_interpret": 5, "bfs_interpret": 5, "iddfs_interpret": 5, "bup_interpret": 5, "a_star_interpret": 5, "variabl": [5, 6, 13, 17, 19, 20, 23, 32, 41, 54, 56, 74, 79, 81, 90, 108, 109, 111, 112, 117, 118, 122, 153, 157, 158, 159, 160, 161, 163, 167, 168, 169, 171, 172, 174, 178, 180, 181, 191, 192, 196, 197, 198, 202, 204, 210, 211, 212, 214, 215, 216, 217, 228, 229, 232, 238, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 267, 268, 269, 271, 272, 274, 276, 277, 280, 281, 282, 287, 288, 289, 290, 291, 292, 293, 295, 296, 298, 299, 300, 303, 304, 306, 307, 314, 315, 317, 319, 324, 327, 328, 330, 332, 333], "parametr": [5, 8, 16, 18, 41, 42, 43, 51, 59, 64, 67, 68, 73, 74, 82, 91, 95, 97, 100, 109, 112, 117, 157, 158, 159, 160, 212, 237, 251, 253, 282, 317, 320, 322, 326, 327, 330, 332], "addit": [5, 9, 13, 18, 19, 20, 21, 23, 24, 32, 35, 36, 41, 42, 43, 54, 71, 73, 80, 98, 142, 143, 172, 177, 283, 284, 314, 315, 317, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 335], "inform": [5, 6, 9, 10, 11, 12, 13, 16, 18, 19, 24, 36, 41, 42, 43, 45, 51, 56, 59, 85, 90, 98, 102, 108, 109, 117, 144, 207, 218, 314, 315, 317, 318, 319, 321, 324, 326, 327, 328, 329, 330, 331, 332, 333], "them": [5, 8, 9, 10, 13, 15, 18, 19, 20, 22, 23, 24, 27, 30, 38, 44, 50, 56, 59, 60, 67, 75, 80, 82, 85, 91, 98, 127, 150, 152, 206, 305, 309, 314, 315, 317, 319, 320, 321, 324, 326, 328, 330, 332, 335], "iddf": 5, "know": [5, 23, 41, 54, 314, 321, 324, 326, 328, 329, 330, 333], "increment": [5, 56, 321], "what": [5, 13, 19, 31, 41, 42, 43, 214, 311, 316, 317, 319, 321, 330, 332, 334, 335], "weight": [5, 99, 212, 315], "when": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 31, 41, 42, 43, 44, 48, 50, 51, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 73, 74, 79, 80, 83, 84, 85, 87, 89, 91, 93, 94, 96, 97, 98, 100, 104, 107, 108, 109, 112, 117, 118, 123, 126, 127, 128, 129, 130, 136, 137, 141, 143, 152, 155, 156, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 181, 185, 188, 190, 191, 192, 196, 197, 199, 201, 204, 206, 210, 212, 213, 214, 215, 216, 217, 218, 220, 222, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 251, 252, 253, 254, 261, 276, 277, 278, 280, 281, 282, 283, 284, 285, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "calcul": [5, 330], "cost": [5, 9, 99, 284, 329, 332, 335], "node": [5, 9, 13, 15, 44, 99], "df": 5, "do": [5, 13, 23, 31, 42, 43, 67, 87, 94, 98, 158, 160, 309, 311, 314, 315, 318, 321, 324, 325, 326, 328, 330, 331, 332], "excit": 5, "two": [5, 8, 11, 13, 19, 23, 24, 25, 30, 56, 57, 67, 69, 73, 74, 91, 94, 98, 99, 143, 171, 177, 191, 192, 214, 243, 257, 261, 309, 311, 312, 313, 314, 315, 317, 319, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335], "take": [5, 8, 13, 18, 19, 23, 24, 27, 63, 68, 69, 74, 85, 91, 96, 108, 147, 171, 214, 314, 315, 317, 319, 321, 324, 326, 328, 330, 331, 332, 334, 335], "three": [5, 74, 104, 284, 312, 313, 314, 319, 327, 328, 330, 332, 333], "argument": [5, 8, 9, 10, 15, 18, 19, 20, 22, 23, 24, 25, 26, 34, 38, 41, 42, 43, 44, 54, 60, 63, 69, 71, 73, 74, 75, 81, 85, 87, 90, 94, 96, 107, 108, 109, 112, 117, 118, 123, 137, 139, 140, 142, 143, 144, 147, 150, 152, 158, 160, 161, 163, 165, 167, 168, 171, 172, 173, 174, 177, 178, 185, 190, 191, 192, 197, 198, 201, 202, 204, 210, 211, 212, 213, 214, 215, 216, 228, 229, 230, 231, 237, 238, 240, 241, 243, 253, 261, 276, 277, 278, 279, 280, 281, 282, 283, 291, 292, 301, 303, 304, 305, 306, 307, 308, 314, 315, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "last": [5, 13, 15, 23, 39, 168, 171, 283, 284, 302, 317, 330, 332], "claus": [5, 9, 12, 19, 20, 23, 24, 26, 41, 42, 43, 44, 56, 64, 75, 79, 80, 96, 105, 112, 127, 145, 155, 162, 163, 167, 168, 171, 176, 178, 183, 191, 192, 201, 203, 212, 228, 229, 230, 231, 236, 237, 251, 253, 254, 278, 283, 284, 311, 314, 320, 321, 322, 323, 326, 327, 328, 329, 331, 332, 334], "deriv": [5, 87, 98, 253, 268, 324, 327], "accomplish": [5, 19, 46, 48, 67, 68, 74, 317, 318, 319, 320, 323, 325, 330, 331, 332, 335], "thing": [5, 75, 111, 190], "count": [5, 9, 19, 24, 25, 80, 329], "could": [5, 9, 10, 19, 20, 23, 24, 27, 309, 317, 319, 320, 321, 328, 330, 331, 332, 335], "write": [5, 8, 12, 16, 23, 38, 42, 43, 44, 51, 63, 68, 75, 93, 95, 105, 107, 109, 112, 126, 130, 134, 147, 158, 160, 164, 167, 168, 169, 170, 201, 210, 230, 231, 232, 237, 294, 309, 312, 314, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 333, 335], "regard": [5, 19, 44, 45, 54, 68, 81, 86, 89, 91, 177, 178, 292, 293, 294, 295, 303, 306, 307, 314, 330, 332], "built": [5, 9, 19, 20, 21, 22, 35, 36, 38, 41, 42, 43, 49, 57, 60, 75, 96, 112, 121, 126, 136, 137, 141, 142, 143, 153, 156, 158, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 267, 268, 269, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 315, 319, 320, 321, 322, 324, 325, 326, 327, 331, 332, 334], "bulk": 5, "dure": [5, 24, 153, 276, 277, 280, 281, 314, 319, 320, 328, 332, 333], "hi": [5, 90], "bachelor": 5, "link\u00f6p": 5, "spring": 5, "great": 5, "deal": [5, 19, 27, 42, 43, 59, 82, 315, 322, 330], "stage": [5, 17, 23, 318, 326, 332], "especi": 5, "between": [5, 9, 13, 15, 19, 20, 23, 24, 26, 30, 32, 34, 36, 41, 42, 43, 48, 54, 60, 81, 96, 98, 109, 120, 126, 130, 158, 160, 161, 212, 230, 231, 237, 272, 284, 313, 315, 316, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "variou": 5, "folder": [6, 14, 19, 22, 23, 32, 85, 102, 104, 105, 324, 332], "john": [6, 23], "fletcher": 6, "xml": [6, 16, 18, 23, 31, 42, 43, 317], "bind": [6, 19, 20, 31, 41, 42, 43, 118, 157, 158, 159, 160, 284, 295, 314, 317, 318, 320, 321, 325, 326, 327, 329, 330, 332, 335], "co": 6, "uk": 6, "php": 6, "parsing_xml_with_prolog": 6, "descript": [6, 18, 19, 23, 42, 43, 71, 92, 312, 317, 318, 324, 326, 330, 332, 333, 334], "pleas": [6, 10, 13, 14, 15, 24, 25, 36, 37, 45, 52, 102, 104, 105, 252, 258, 277, 281, 289, 314, 318, 324, 328, 333], "see": [6, 9, 10, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 33, 34, 39, 41, 42, 43, 44, 46, 49, 50, 55, 56, 60, 63, 70, 71, 73, 74, 77, 78, 79, 81, 84, 85, 96, 97, 99, 100, 102, 104, 105, 108, 117, 118, 139, 140, 173, 182, 194, 195, 207, 225, 238, 239, 252, 258, 271, 277, 281, 284, 289, 311, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334], "comment": [6, 9, 18, 23, 42, 43, 85, 129, 139, 140, 161, 218, 322, 326, 330, 331], "automat": [6, 12, 13, 14, 16, 17, 18, 20, 21, 23, 34, 41, 42, 43, 49, 56, 69, 104, 121, 123, 141, 147, 156, 158, 164, 170, 176, 191, 192, 199, 201, 206, 208, 219, 220, 222, 236, 312, 315, 318, 319, 320, 322, 326, 327, 328, 330, 331, 332, 333, 335], "pdf": [6, 9, 13, 18, 56, 104, 317], "sampl": [6, 10, 12, 13, 14, 15, 19, 24, 25, 44, 74, 85, 92, 99, 102, 104, 105, 317, 324, 330, 332], "queri": [6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 23, 24, 25, 26, 27, 36, 41, 69, 80, 83, 86, 99, 102, 104, 105, 176, 252, 301, 309, 312, 314, 315, 317, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "script": [6, 7, 9, 10, 13, 14, 15, 17, 18, 19, 22, 23, 24, 25, 29, 31, 38, 42, 43, 73, 85, 102, 104, 105, 317, 324, 332], "gnu": [6, 12, 15, 17, 19, 23, 45, 60, 74, 90, 330, 332], "backend": [6, 12, 13, 15, 16, 19, 20, 22, 23, 24, 27, 29, 31, 35, 39, 41, 42, 43, 44, 45, 48, 50, 55, 60, 61, 62, 63, 67, 73, 74, 75, 84, 85, 87, 89, 94, 96, 97, 100, 104, 105, 112, 123, 125, 126, 127, 129, 130, 136, 137, 141, 143, 145, 155, 156, 158, 163, 167, 168, 171, 172, 174, 181, 215, 216, 217, 226, 228, 229, 251, 253, 254, 276, 277, 278, 280, 281, 282, 283, 284, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 315, 318, 320, 321, 324, 325, 326, 327, 328, 329, 330, 333, 335], "larger": [6, 44, 329], "default": [6, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 22, 23, 24, 25, 27, 41, 42, 43, 48, 51, 56, 58, 60, 61, 62, 67, 70, 71, 74, 79, 80, 83, 85, 89, 90, 95, 96, 97, 100, 139, 140, 165, 192, 201, 206, 207, 218, 220, 223, 236, 252, 276, 277, 278, 280, 281, 283, 284, 285, 289, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335], "global": [6, 12, 18, 19, 20, 22, 24, 41, 61, 62, 89, 141, 147, 152, 153, 289, 315, 319, 320, 321, 325, 327, 328, 329, 330, 332], "stack": [6, 19, 108, 109], "size": [6, 9, 13, 42, 43, 71, 160, 322, 332], "globalsz": 6, "plugin": [7, 19], "avail": [7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 30, 32, 34, 35, 42, 43, 50, 55, 60, 64, 70, 73, 80, 85, 87, 90, 94, 97, 98, 100, 102, 104, 105, 108, 109, 117, 128, 136, 141, 227, 277, 280, 281, 282, 283, 284, 297, 298, 299, 307, 309, 314, 315, 317, 318, 319, 321, 324, 325, 327, 328, 329, 330, 332, 333, 334, 335], "logtalkdotorg": [7, 13, 19, 23], "logtalk_version_select": 7, "solut": [7, 9, 10, 12, 17, 19, 20, 23, 24, 34, 38, 41, 42, 43, 87, 89, 123, 144, 156, 162, 169, 196, 197, 198, 203, 232, 251, 253, 254, 295, 298, 302, 303, 304, 306, 307, 312, 313, 314, 315, 317, 320, 321, 323, 326, 328, 331, 332, 335], "tool": [7, 8, 11, 13, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 41, 42, 43, 44, 56, 68, 83, 278, 284, 285, 315, 317, 320, 324, 326, 327, 329, 330, 331, 332, 334], "definit": [8, 9, 12, 14, 17, 19, 20, 23, 25, 26, 27, 34, 35, 41, 42, 43, 44, 54, 64, 69, 75, 81, 85, 96, 107, 108, 109, 111, 112, 118, 128, 136, 137, 142, 143, 145, 158, 160, 162, 173, 176, 182, 194, 195, 198, 203, 220, 225, 238, 239, 252, 279, 309, 311, 312, 314, 315, 316, 318, 320, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335], "warn": [8, 9, 10, 15, 16, 18, 22, 24, 26, 31, 35, 42, 43, 60, 129, 153, 218, 277, 279, 281, 284, 289, 314, 322, 326, 328, 330, 331], "mechan": [8, 12, 19, 30, 34, 38, 41, 42, 43, 53, 105, 108, 112, 117, 118, 312, 314, 318, 319, 320, 322, 323, 325, 329, 330, 331, 332, 334, 335], "assertions_messag": 8, "translat": [8, 10, 12, 19, 69, 130, 192, 212, 231, 253, 314, 315, 320, 326, 327, 329, 330, 331], "succe": [8, 19, 20, 44, 67, 68, 87, 96, 165, 181, 182, 196, 197, 202, 206, 218, 220, 222, 225, 239, 282, 291, 292, 293, 299, 303, 304, 306, 307, 312, 315, 317, 318, 319, 320, 328, 330, 331, 335], "foo": [8, 11, 12, 17, 19, 23, 24, 41, 44, 62, 68, 69, 74, 83, 89, 96, 153, 157, 158, 159, 160, 167, 168, 178, 181, 217, 218, 220, 312, 314, 315, 318, 319, 323, 326, 328, 330, 331, 332, 333], "non_empty_list": [8, 185], "pass": [8, 19, 23, 41, 42, 43, 51, 59, 63, 67, 71, 82, 95, 109, 197, 277, 281, 295, 315, 317, 320, 322, 327, 329, 330, 331, 335], "again": [8, 19, 314, 325, 328, 331, 333, 335], "foo_list_alert": 8, "larg": [8, 9, 13, 20, 23, 44, 51, 87, 89, 95, 98, 251, 253, 254, 284, 315, 321, 324, 326, 331, 332, 335], "number": [8, 9, 12, 19, 20, 24, 25, 31, 35, 41, 42, 43, 47, 51, 54, 64, 70, 73, 75, 80, 81, 87, 89, 92, 97, 98, 99, 100, 104, 137, 142, 143, 144, 161, 311, 312, 314, 315, 317, 319, 321, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335], "lighter": [8, 125, 126, 127, 141, 143, 145], "hook": [8, 9, 10, 13, 14, 19, 20, 21, 23, 24, 25, 41, 42, 43, 56, 58, 67, 68, 73, 79, 80, 105, 123, 145, 162, 165, 176, 191, 192, 201, 203, 206, 207, 208, 218, 219, 220, 222, 223, 236, 283, 284, 285, 314, 315, 322, 326, 327, 328, 329, 330, 331, 332, 333], "add": [8, 13, 14, 19, 23, 26, 38, 41, 50, 55, 56, 60, 75, 80, 83, 96, 99, 311, 314, 315, 326, 329, 330, 332], "file_lin": 8, "beginlin": [8, 314, 328, 333], "endlin": [8, 282, 314, 328, 333], "expand": [8, 19, 20, 23, 41, 42, 43, 56, 58, 67, 79, 80, 83, 104, 137, 143, 191, 192, 201, 236, 260, 278, 282, 315, 322, 324, 326, 329, 330, 332], "expans": [8, 12, 19, 31, 41, 42, 43, 56, 67, 105, 112, 128, 136, 162, 191, 192, 201, 203, 236, 314, 322, 325, 328, 330, 332], "assum": [8, 9, 10, 11, 13, 18, 19, 23, 27, 29, 34, 44, 58, 67, 68, 69, 75, 85, 90, 97, 98, 107, 165, 176, 181, 206, 210, 217, 218, 220, 222, 278, 293, 312, 315, 317, 318, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 335], "being": [8, 9, 10, 12, 13, 19, 20, 23, 27, 35, 38, 41, 51, 68, 94, 95, 104, 111, 112, 157, 159, 192, 212, 234, 237, 243, 282, 304, 309, 314, 315, 318, 319, 320, 321, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335], "debug": [8, 9, 10, 11, 12, 16, 22, 24, 34, 42, 43, 68, 75, 109, 141, 160, 161, 218, 283, 284, 314, 321, 322, 327, 328, 330, 331, 332, 334], "product": [8, 80, 321, 326, 329, 331, 332], "By": [8, 11, 14, 18, 19, 20, 23, 63, 70, 74, 80, 97, 100, 218, 314, 315, 328, 330, 331, 332, 333, 335], "stream": [8, 19, 46, 51, 69, 74, 88, 95, 165, 185, 190, 206, 207, 213, 218, 219, 220, 223, 241, 282, 315, 319, 320, 330, 331], "These": [8, 9, 10, 11, 13, 15, 19, 20, 23, 27, 41, 44, 60, 66, 67, 80, 93, 105, 123, 181, 217, 284, 312, 314, 315, 317, 318, 319, 320, 323, 326, 328, 329, 330, 331, 332], "intercept": [8, 10, 13, 19, 42, 43, 206, 218, 219, 220, 222, 315, 322, 329, 332], "message_hook": [8, 19, 165, 203, 207, 208, 218, 219, 220, 221, 222, 223, 331], "4": [8, 19, 23, 24, 25, 42, 43, 44, 71, 75, 78, 91, 97, 98, 99, 125, 126, 127, 131, 135, 137, 138, 147, 150, 160, 165, 166, 169, 196, 198, 203, 208, 218, 220, 221, 222, 232, 233, 242, 244, 247, 255, 256, 259, 273, 287, 309, 314, 315, 317, 320, 326, 327, 328, 330, 331, 332, 335], "multifil": [8, 9, 13, 19, 20, 23, 41, 42, 43, 44, 56, 96, 127, 138, 148, 161, 206, 207, 208, 219, 222, 223, 278, 279, 283, 284, 285, 314, 315, 318, 319, 320, 322, 327, 328, 329, 331, 332, 334], "categori": [8, 9, 13, 19, 20, 28, 31, 41, 42, 43, 44, 49, 50, 53, 55, 60, 61, 62, 66, 68, 75, 80, 83, 84, 85, 89, 98, 105, 107, 108, 112, 118, 120, 121, 127, 131, 135, 137, 138, 139, 141, 145, 146, 150, 156, 157, 158, 159, 160, 162, 167, 168, 169, 171, 172, 190, 196, 197, 198, 201, 210, 211, 212, 232, 236, 237, 242, 247, 249, 250, 251, 253, 254, 256, 267, 271, 272, 273, 282, 284, 310, 311, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335], "redirect_assertions_messag": 8, "_": [8, 19, 23, 44, 51, 56, 95, 99, 134, 136, 141, 158, 176, 206, 217, 218, 222, 243, 261, 282, 309, 311, 312, 314, 315, 317, 318, 319, 320, 328, 330, 331, 332, 335], "writeq": [8, 164, 170, 230, 231, 237, 294, 312, 315, 319, 320, 330], "my_log_fil": 8, "end_categori": [8, 19, 44, 122, 135, 138, 161, 309, 314, 330, 331, 333], "want": [8, 10, 12, 13, 17, 18, 19, 23, 24, 32, 44, 54, 57, 60, 68, 69, 73, 75, 79, 81, 83, 85, 91, 126, 169, 232, 276, 277, 309, 311, 312, 314, 315, 317, 318, 319, 320, 325, 326, 328, 330, 331, 332, 333, 335], "result": [8, 10, 12, 13, 16, 20, 23, 24, 26, 31, 34, 42, 43, 44, 46, 51, 67, 89, 98, 99, 111, 112, 123, 156, 160, 178, 192, 197, 278, 284, 291, 292, 302, 303, 304, 306, 307, 314, 315, 317, 318, 319, 320, 321, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335], "runtim": [8, 10, 12, 19, 22, 25, 26, 29, 34, 41, 42, 43, 54, 81, 108, 109, 112, 117, 126, 156, 158, 160, 163, 164, 167, 168, 170, 177, 185, 188, 190, 191, 192, 199, 204, 212, 213, 226, 227, 234, 235, 240, 241, 251, 253, 254, 278, 312, 315, 319, 320, 321, 322, 325, 327, 329, 330, 331, 332, 335], "option": [8, 9, 10, 12, 13, 15, 17, 18, 19, 20, 23, 27, 31, 41, 42, 43, 44, 51, 56, 58, 59, 63, 67, 68, 71, 73, 79, 95, 96, 104, 137, 159, 176, 240, 252, 284, 314, 315, 317, 318, 320, 327, 328, 331, 333], "still": [8, 19, 20, 23, 25, 41, 87, 89, 314, 315, 326, 330, 332], "assertions_failures_to_error": 8, "token": [8, 17, 23, 41, 42, 43, 165, 206, 207, 208, 215, 216, 218, 219, 220, 222, 315, 322, 330], "uncom": 8, "message_prefix_stream": [8, 165, 203, 206, 208, 218, 219, 220, 221, 222, 223, 315, 331], "prefix": [8, 13, 15, 19, 22, 23, 41, 68, 98, 145, 158, 160, 206, 207, 218, 219, 220, 282, 314, 315, 323, 326, 327, 330, 331, 332, 333], "print_message_token": [8, 165, 203, 206, 207, 208, 218, 221, 222, 223, 331], "alwai": [8, 17, 19, 20, 23, 41, 68, 69, 85, 87, 99, 126, 142, 143, 182, 194, 195, 210, 225, 239, 278, 292, 299, 302, 304, 306, 313, 314, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "trigger": [8, 18, 19, 177, 318, 326, 330, 332], "instead": [8, 15, 18, 19, 20, 23, 25, 26, 30, 38, 41, 44, 46, 56, 68, 69, 73, 75, 97, 100, 104, 105, 128, 130, 136, 142, 158, 206, 222, 276, 277, 278, 282, 302, 304, 309, 314, 315, 316, 318, 321, 323, 326, 327, 328, 329, 330, 331, 332, 335], "lgtunit": [8, 9, 16, 17, 20, 22, 42, 43, 44, 90, 160, 330, 331, 332], "assess": [9, 329], "qualiti": [9, 20], "predict": [9, 19, 23], "neg": [9, 19, 48, 89, 181, 330], "aspect": [9, 13, 321, 327, 329], "cohes": [9, 41, 314], "error": [9, 13, 15, 16, 19, 20, 22, 23, 24, 26, 27, 31, 41, 42, 43, 44, 56, 59, 60, 69, 73, 96, 128, 136, 147, 157, 159, 161, 162, 203, 311, 314, 317, 319, 320, 322, 324, 325, 326, 327, 328, 331, 333, 335], "prone": 9, "overal": 9, "maintain": [9, 41, 330], "meant": [9, 317, 318, 326, 327], "extens": [9, 10, 13, 19, 20, 23, 24, 27, 56, 81, 96, 137, 146, 276, 277, 280, 281, 313, 314, 317, 318, 319, 320, 323, 324, 326, 327, 328, 330, 331, 332, 333], "via": [9, 13, 19, 20, 23, 41, 44, 80, 314, 321, 323, 326, 327, 328, 333], "actual": [9, 13, 19, 23, 50, 142, 158, 278, 282, 315, 318, 320, 325, 326, 327, 329, 330, 331], "depend": [9, 13, 16, 17, 18, 19, 27, 28, 29, 31, 35, 41, 42, 43, 44, 52, 56, 60, 63, 64, 71, 82, 85, 98, 108, 117, 128, 136, 137, 141, 158, 167, 168, 172, 280, 283, 284, 313, 314, 315, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335], "One": [9, 42, 43, 318, 322, 329, 330, 332], "valu": [9, 13, 17, 18, 19, 20, 23, 24, 41, 44, 48, 51, 54, 56, 59, 69, 73, 74, 81, 82, 83, 87, 89, 95, 96, 98, 108, 109, 117, 139, 140, 153, 156, 177, 185, 188, 190, 212, 213, 226, 227, 240, 252, 258, 276, 277, 278, 280, 281, 282, 283, 284, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 314, 315, 317, 318, 320, 321, 324, 327, 328, 329, 330, 331, 332], "return": [9, 12, 19, 41, 51, 63, 73, 97, 98, 100, 169, 178, 192, 196, 197, 201, 232, 236, 271, 278, 282, 292, 295, 299, 302, 306, 311, 312, 314, 315, 319, 320, 327, 328, 330, 331, 332, 333, 335], "score": 9, "usual": [9, 12, 13, 14, 18, 19, 20, 23, 26, 27, 28, 41, 51, 60, 68, 73, 83, 95, 111, 141, 158, 278, 282, 284, 302, 311, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "compound": [9, 19, 23, 41, 44, 47, 48, 59, 69, 74, 80, 82, 83, 146, 161, 172, 192, 212, 226, 278, 314, 315, 317, 321, 327, 328, 329, 330, 331, 332], "noc_metr": 9, "nor_metr": 9, "uniqu": [9, 19, 22, 23, 41, 62, 85, 91, 93, 97, 100, 278, 295, 315, 320, 328, 330, 331], "upn_metr": 9, "cc_metric": 9, "dit_metr": 9, "effer": 9, "affer": 9, "instabl": 9, "abstract": [9, 14, 15, 19, 41, 50, 55, 60, 73, 87, 94, 212, 313, 316, 323, 326, 327, 328, 330, 331], "coupling_metr": 9, "doc_metr": 9, "size_metr": 9, "halstead_metr": 9, "stroud": 9, "helper": [9, 13, 19, 75, 332], "individu": [9, 13, 19, 23, 38, 67, 85, 177, 291, 328, 329, 331], "coverag": [9, 16, 42, 43, 330], "ce": 9, "receiv": [9, 19, 41, 117, 161, 163, 230, 308, 314, 318, 323, 325, 327, 329, 330, 333, 335], "plu": [9, 19, 20, 23, 51, 56, 95, 102, 108, 325, 330, 332], "protocol": [9, 13, 18, 19, 20, 31, 35, 41, 42, 43, 45, 49, 54, 57, 67, 68, 72, 83, 85, 91, 120, 121, 122, 133, 135, 137, 138, 139, 141, 145, 146, 159, 160, 162, 164, 170, 190, 199, 201, 236, 245, 250, 251, 253, 254, 260, 267, 269, 271, 273, 282, 284, 288, 309, 310, 312, 314, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 330, 332, 334], "import": [9, 13, 34, 36, 41, 42, 43, 48, 61, 62, 66, 68, 75, 81, 83, 89, 108, 114, 118, 120, 146, 156, 157, 162, 237, 253, 272, 310, 315, 317, 321, 322, 323, 326, 327, 328, 330, 332, 335], "instanti": [9, 13, 19, 36, 41, 54, 68, 120, 144, 146, 147, 158, 160, 169, 204, 212, 215, 216, 232, 253, 274, 313, 315, 317, 318, 319, 321, 323, 325, 327, 328, 330, 333], "ca": 9, "send": [9, 13, 14, 15, 19, 25, 31, 38, 41, 42, 43, 50, 55, 60, 64, 67, 69, 111, 112, 114, 117, 118, 120, 159, 160, 162, 169, 171, 172, 196, 197, 198, 202, 211, 213, 232, 279, 284, 292, 304, 305, 306, 308, 311, 312, 314, 315, 316, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 332, 335], "measur": [9, 319, 329], "resili": 9, "chang": [9, 13, 19, 22, 23, 24, 27, 32, 35, 41, 54, 56, 68, 80, 81, 89, 98, 102, 160, 201, 236, 283, 284, 311, 315, 319, 324, 326, 328, 330, 331, 332], "rang": [9, 23, 98, 317, 325, 326, 332], "indic": [9, 15, 19, 24, 41, 48, 74, 75, 107, 108, 111, 117, 118, 123, 127, 140, 163, 167, 168, 174, 181, 228, 229, 314, 315, 317, 326, 327, 328, 330, 331], "maxim": [9, 333], "stabl": [9, 15, 23, 30, 321, 332], "unstabl": 9, "ideal": [9, 19, 23, 319, 328], "ratio": [9, 13], "static": [9, 19, 20, 31, 41, 42, 43, 108, 121, 127, 157, 159, 160, 161, 163, 167, 168, 174, 176, 228, 229, 242, 244, 245, 247, 256, 259, 260, 287, 288, 314, 316, 317, 318, 320, 321, 324, 325, 326, 327, 328, 329, 330, 332, 333], "scope": [9, 10, 17, 19, 20, 41, 42, 43, 56, 61, 62, 71, 75, 89, 107, 108, 117, 118, 141, 145, 147, 152, 153, 164, 167, 168, 170, 180, 181, 185, 191, 192, 199, 201, 213, 215, 216, 217, 236, 250, 253, 267, 268, 269, 271, 272, 274, 282, 289, 290, 311, 314, 315, 317, 318, 319, 322, 323, 325, 326, 327, 328, 332, 333, 334, 335], "local": [9, 10, 13, 16, 20, 23, 26, 32, 41, 42, 43, 61, 62, 63, 67, 89, 109, 123, 127, 147, 153, 157, 159, 163, 167, 168, 174, 180, 181, 191, 192, 215, 216, 217, 289, 314, 315, 320, 322, 324, 325, 326, 327, 328, 330, 331, 332], "rigid": [9, 317], "fulli": [9, 10, 20, 23, 60, 84, 109, 320, 332], "concret": [9, 328], "updat": [9, 13, 14, 19, 23, 27, 32, 54, 63, 81, 87, 89, 98, 127, 155, 161, 314, 324, 327, 328, 330, 332, 334, 335], "extern": [9, 13, 19, 42, 43, 114, 162, 326, 330, 332], "martin": 9, "inproceed": [9, 102], "citeulik": 9, "1579528": 9, "booktitl": [9, 102], "pragmat": [9, 321], "theoret": 9, "articl": [9, 56, 104], "id": [9, 10, 19, 42, 43, 71, 97, 100, 112, 278], "linkout": 9, "objectmentor": 9, "oodmetrc": 9, "keyword": [9, 108, 314, 315, 317, 323, 327, 333], "diplomarbeit": 9, "organ": [9, 23, 321, 328, 332], "oopsla": 9, "94": [9, 19], "post": [9, 24, 300, 319, 324, 335], "2007": 9, "08": 9, "44": [9, 74], "prioriti": [9, 180, 330], "titl": [9, 13, 17, 19, 69, 102, 104, 315], "oo": 9, "year": [9, 97, 102, 104, 141, 317, 321], "influenc": [9, 327, 329], "rate": 9, "microsoft": [9, 23, 324], "visual": [9, 13], "studio": [9, 13], "aim": [9, 89, 327, 328], "eventu": [9, 80, 308, 321], "emul": [9, 327, 335], "function": [9, 19, 20, 23, 28, 31, 41, 42, 43, 44, 52, 56, 111, 314, 316, 318, 320, 323, 325, 327, 329, 330, 332, 333, 335], "declar": [9, 19, 20, 23, 24, 27, 34, 41, 42, 43, 44, 45, 51, 57, 61, 62, 71, 75, 87, 95, 96, 107, 108, 111, 117, 118, 120, 121, 123, 125, 126, 127, 130, 137, 141, 142, 143, 145, 147, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 177, 180, 181, 182, 185, 188, 190, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 213, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 232, 234, 235, 236, 238, 239, 240, 241, 251, 253, 254, 278, 282, 311, 312, 315, 317, 319, 320, 321, 322, 323, 325, 326, 327, 329, 331, 332, 333, 334, 335], "user": [9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 25, 26, 27, 30, 32, 34, 41, 42, 43, 44, 51, 54, 63, 69, 75, 80, 82, 83, 85, 95, 96, 108, 109, 111, 112, 117, 118, 129, 145, 147, 153, 156, 158, 160, 164, 165, 170, 176, 177, 181, 185, 188, 190, 191, 192, 199, 204, 206, 207, 208, 213, 217, 219, 220, 222, 223, 226, 227, 234, 235, 240, 241, 247, 252, 258, 259, 277, 278, 279, 281, 283, 284, 285, 287, 288, 289, 292, 293, 294, 295, 303, 306, 307, 311, 312, 314, 315, 317, 318, 319, 321, 324, 325, 326, 327, 329, 331, 333, 335], "ignor": [9, 13, 19, 23, 30, 51, 73, 94, 169, 172, 198, 203, 209, 210, 211, 219, 232, 315, 323, 326, 329, 330, 331, 332], "distinct": [9, 144, 312, 313, 316, 319, 325, 327, 330], "operand": 9, "signific": [9, 105, 316, 327, 329, 331, 332, 335], "deviat": [9, 326], "syntact": [9, 20, 41, 234, 318], "closer": [9, 73, 324], "switch": [9, 23, 24, 42, 43, 54, 56, 68, 81, 109, 114, 162, 322, 324, 328, 331, 332], "parameter": [9, 19, 41, 159, 314, 321, 328, 331], "coeffici": 9, "pn": 9, "pan": 9, "cn": 9, "head": [9, 17, 19, 26, 56, 69, 75, 86, 161, 167, 168, 174, 176, 178, 212, 228, 229, 230, 231, 237, 279, 311, 315, 326, 327, 328, 329, 330, 332], "vocabulari": 9, "ev": 9, "length": [9, 48, 136, 158, 253, 311, 330], "el": 9, "volum": [9, 104], "log2": 9, "difficulti": 9, "effort": 9, "where": [9, 13, 17, 19, 20, 23, 27, 41, 44, 48, 54, 64, 67, 69, 73, 74, 81, 82, 83, 108, 118, 126, 129, 130, 157, 158, 159, 160, 178, 252, 274, 284, 290, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "deliv": 9, "bug": [9, 16, 17, 22, 23, 38, 42, 43, 98, 332], "3000": 9, "describ": [9, 12, 13, 18, 19, 23, 27, 41, 42, 43, 68, 98, 107, 161, 217, 247, 287, 288, 311, 314, 315, 318, 319, 322, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335], "moores199845": 9, "45": [9, 23, 26, 95, 100], "1998": [9, 30, 36, 321, 331], "issn": 9, "0164": 9, "1212": 9, "doi": [9, 104], "1016": 9, "s0164": 9, "98": [9, 46, 74, 100, 315], "10042": 9, "sciencedirect": 9, "pii": 9, "s0164121298100420": 9, "trevor": 9, "moor": 9, "independ": [9, 19, 23, 56, 67, 112, 155, 278, 302, 304, 319, 321, 324, 329, 330, 332, 335], "evalu": [9, 188, 317, 329, 330, 331], "linearli": 9, "path": [9, 10, 13, 18, 19, 22, 23, 32, 41, 58, 74, 81, 83, 99, 137, 276, 277, 278, 280, 281, 282, 314, 324, 327, 328, 332, 333], "through": [9, 36, 42, 43, 56, 319, 321, 322, 325, 326, 328, 330, 332], "graph": [9, 16, 42, 43, 99, 158, 313, 328], "connect": [9, 19, 90, 99, 317, 330, 335], "compon": [9, 11, 13, 19, 31, 41, 42, 43, 97, 165, 206, 207, 208, 218, 222, 223, 309, 315, 322, 328, 331, 332], "consid": [9, 11, 13, 19, 23, 24, 89, 98, 123, 147, 158, 160, 279, 314, 315, 319, 320, 323, 327, 328, 330, 331, 335], "entri": [9, 34, 327, 335], "thoma": 9, "1976": 9, "cm": 9, "800253": 9, "807712": 9, "2nd": 9, "ics": 9, "76": [9, 315], "locat": [9, 13, 19, 23, 32, 278, 315, 323, 324, 326, 327, 332], "san": 9, "francisco": 9, "california": 9, "usa": 9, "407": 9, "dl": 9, "citat": [9, 324], "cfm": 9, "acmid": 9, "address": [9, 13, 64, 95, 98, 102, 321], "lo": 9, "alamito": 9, "basi": [9, 20, 313, 319, 321, 325, 326, 328, 329, 332], "flow": [9, 67, 315, 331], "decomposit": 9, "modular": 9, "reduct": 9, "analyz": [9, 10, 24], "source_data": [9, 10, 13, 18, 19, 20, 24, 161, 247, 258, 277, 281, 284, 287, 288, 314, 317, 328, 329, 330, 332, 333, 334], "turn": [9, 10, 11, 12, 18, 19, 20, 24, 25, 50, 55, 60, 79, 85, 94, 109, 153, 167, 168, 218, 277, 281, 284, 289, 314, 315, 317, 318, 319, 321, 325, 326, 328, 329, 330, 331, 332, 333, 334], "Be": [9, 13, 19, 22, 23, 24, 96, 335], "sure": [9, 13, 19, 22, 23, 32, 284, 317, 326, 332], "understand": [9, 13, 22, 317, 318, 326, 327, 330, 332, 333], "decis": [9, 320], "process": [9, 15, 18, 19, 27, 41, 42, 43, 44, 59, 67, 82, 83, 85, 93, 171, 230, 231, 278, 282, 302, 312, 314, 318, 319, 320, 322, 324, 327, 328, 330, 331, 333], "specifi": [9, 10, 12, 13, 14, 15, 18, 19, 23, 41, 44, 60, 74, 98, 109, 120, 130, 137, 158, 160, 180, 185, 207, 210, 223, 252, 276, 277, 280, 281, 312, 314, 315, 317, 318, 320, 324, 326, 328, 330, 331, 332, 333, 335], "exclude_directori": [9, 10, 13, 27], "sub": [9, 10, 13, 17, 19, 23, 27, 41, 63, 96, 143, 185, 190, 204, 213, 240, 241, 315, 317, 324, 330, 331, 332, 335], "full": [9, 10, 12, 13, 18, 23, 41, 56, 83, 96, 137, 282, 315, 317, 320, 321, 326, 328, 330, 331, 332, 334], "rel": [9, 10, 13, 19, 23, 41, 44, 54, 81, 83, 137, 276, 277, 278, 280, 281, 323, 329, 332], "exclude_fil": [9, 10, 13, 27], "basenam": [9, 10, 13, 23, 282, 314, 328, 333], "exclude_librari": [9, 10, 13], "startup": [9, 10, 13, 23, 25, 26, 41, 49, 121, 156, 315, 327, 331, 332], "scratch_directori": [9, 10, 13, 278, 332], "exclude_ent": [9, 10, 13], "There": [9, 10, 13, 17, 19, 21, 23, 27, 35, 85, 98, 104, 123, 284, 312, 315, 317, 320, 326, 327, 328, 330, 332, 334, 335], "code_metrics_util": 9, "cloc": 9, "line": [9, 12, 13, 15, 16, 19, 23, 26, 35, 41, 42, 43, 51, 68, 74, 95, 130, 137, 161, 207, 218, 279, 282, 314, 315, 324, 328, 329, 330, 331, 332, 333], "blank": [9, 64], "mani": [9, 36, 56, 60, 176, 328], "aldani": 9, "ohcount": 9, "blackducksoftwar": 9, "tokei": 9, "xampprocki": 9, "abl": [9, 10, 19, 20, 24, 30, 318, 319, 326, 327, 330, 332], "pl": [9, 10, 13, 19, 20, 24, 27, 68, 85, 137, 314, 320, 324, 328, 332, 333], "try": [9, 10, 13, 15, 19, 20, 23, 24, 73, 185, 204, 226, 240, 241, 309, 311, 314, 315, 318, 319, 320, 321, 323, 324, 326, 327, 330, 331, 332, 335], "lack": [9, 10, 13, 19, 20, 24, 27, 38, 41, 141, 143, 284, 314, 315, 324, 326, 327, 330, 332], "abund": [9, 10, 20, 24], "proprietari": [9, 10, 20, 24, 35, 42, 43, 112, 318, 322, 330], "work": [9, 10, 13, 16, 18, 20, 22, 23, 24, 31, 42, 43, 44, 48, 63, 71, 72, 73, 81, 82, 85, 90, 91, 105, 125, 127, 137, 191, 192, 276, 277, 278, 280, 281, 311, 313, 314, 315, 321, 324, 326, 327, 328, 330, 331, 332], "simpli": [9, 10, 13, 19, 20, 22, 23, 24, 26, 27, 39, 54, 68, 81, 85, 87, 104, 111, 117, 118, 278, 304, 314, 315, 318, 320, 325, 326, 327, 329, 330, 332, 335], "end_object": [9, 10, 11, 13, 19, 20, 23, 24, 44, 62, 69, 75, 83, 87, 89, 91, 99, 135, 138, 141, 146, 147, 161, 181, 217, 309, 311, 312, 313, 314, 315, 319, 320, 323, 326, 328, 330, 332, 333], "save": [9, 10, 13, 15, 19, 20, 23, 24, 27, 41, 51, 56, 95, 150, 311, 314, 317, 328, 330, 332, 333], "mode": [9, 10, 11, 18, 19, 24, 34, 42, 43, 85, 138, 148, 161, 309, 311, 312, 317, 318, 320, 322, 323, 326, 328, 331, 332], "object_wrapper_hook": [9, 10, 13, 19, 20, 24, 68], "hook_object": [9, 10, 13, 19, 20, 24, 42, 43, 71, 315, 320], "wrap": [9, 10, 15, 19, 20, 24, 27, 28, 41, 104, 112, 141, 155, 201, 210, 214, 236, 278, 289, 314, 320, 327, 329, 331, 332], "pai": [9, 10, 20, 24, 332], "attent": [9, 10, 20, 24, 332], "signal": [9, 10, 20, 24, 87, 94, 298, 299, 331, 335], "prevent": [9, 10, 15, 17, 19, 20, 23, 24, 44, 61, 62, 87, 90, 109, 111, 145, 314, 318, 319, 320, 326, 328, 330, 331, 332, 333], "detect": [10, 18, 60, 90, 178, 278, 318, 326, 332, 335], "dead": 10, "non": [10, 12, 13, 15, 16, 17, 18, 20, 23, 24, 31, 35, 41, 42, 43, 45, 51, 69, 75, 89, 96, 99, 120, 123, 125, 127, 140, 141, 142, 143, 144, 145, 149, 150, 152, 155, 158, 160, 161, 169, 177, 186, 196, 197, 204, 208, 211, 215, 216, 218, 232, 240, 283, 284, 303, 311, 314, 315, 317, 318, 320, 321, 326, 327, 328, 331, 332, 333, 335], "termin": [10, 15, 18, 20, 23, 24, 41, 73, 75, 120, 123, 125, 127, 140, 142, 144, 145, 149, 150, 152, 155, 158, 160, 161, 165, 177, 186, 208, 215, 216, 218, 291, 293, 314, 315, 317, 318, 326, 331, 332, 335], "classifi": [10, 19, 330], "directli": [10, 19, 41, 50, 55, 60, 282, 319, 326, 330], "indirectli": [10, 13, 41, 328], "use_modul": [10, 24, 25, 28, 41, 120, 135, 138, 148, 159, 160, 161, 163, 167, 168, 174, 181, 217, 228, 229, 314, 326, 327, 328, 330, 332], "besid": [10, 24, 108, 323, 329, 330], "often": [10, 13, 15, 19, 23, 24, 27, 38, 69, 75, 198, 251, 253, 254, 284, 313, 315, 317, 318, 320, 324, 326, 327, 328, 329, 330, 331, 332], "fals": [10, 13, 19, 20, 23, 27, 41, 48, 51, 74, 129, 182, 194, 203, 205, 210, 225, 239, 252, 284, 317, 330, 332], "posit": [10, 15, 19, 41, 44, 48, 61, 87, 142, 143, 212, 282, 284, 315, 323, 329, 330, 331, 332], "typo": [10, 18, 26, 317, 318], "alia": [10, 18, 19, 23, 41, 51, 54, 58, 81, 95, 130, 138, 148, 157, 158, 159, 160, 161, 171, 177, 253, 278, 282, 314, 323, 326, 328, 332, 333], "miss": [10, 13, 18, 20, 23, 27, 39, 51, 60, 98, 284, 314, 324, 326, 327, 330, 332], "meta_non_termin": [10, 138, 143, 148, 161, 330], "meta_pred": [10, 138, 142, 148, 161, 177, 317, 326, 330, 332], "given": [10, 11, 13, 19, 22, 23, 24, 25, 34, 44, 51, 56, 60, 68, 70, 74, 80, 81, 83, 95, 96, 97, 137, 207, 223, 279, 293, 295, 311, 315, 317, 318, 319, 320, 321, 326, 330, 331, 335], "care": [10, 13, 19, 23, 56, 84, 85, 87, 96, 201, 325, 330, 332, 335], "taken": [10, 23, 87, 104, 158, 160, 201, 323, 331, 332, 335], "delet": [10, 19, 23, 26, 39, 54, 81, 160, 284, 309, 315, 327, 332], "ensur": [10, 13, 17, 19, 23, 27, 39, 41, 54, 56, 85, 96, 112, 158, 171, 176, 278, 309, 314, 318, 319, 321, 323, 324, 326, 327, 328, 330, 332, 335], "differ": [10, 13, 19, 20, 23, 27, 34, 35, 36, 41, 54, 56, 60, 67, 68, 87, 91, 111, 137, 157, 158, 159, 171, 177, 186, 210, 216, 282, 311, 314, 315, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335], "per": [10, 13, 15, 18, 19, 20, 22, 23, 46, 51, 80, 93, 97, 104, 108, 117, 118, 155, 278, 291, 315, 317, 319, 323, 325, 326, 327, 329, 330, 332], "dead_code_scanner_messag": 10, "custom": [10, 12, 16, 18, 19, 41, 42, 43, 44, 67, 68, 71, 80, 91, 96, 279, 317, 320, 322, 324, 332], "less": [10, 15, 19, 315, 317, 324, 331], "verbos": [10, 19, 23, 330, 331], "gui": [10, 19, 73, 331], "continu": [10, 19, 38, 85, 315, 330], "server": [10, 17, 19, 23, 85, 90], "scanner": 10, "optim": [10, 11, 12, 13, 19, 25, 34, 42, 43, 50, 55, 60, 78, 79, 85, 94, 108, 112, 117, 127, 157, 159, 160, 176, 283, 284, 314, 315, 318, 319, 322, 324, 325, 326, 330, 331], "possibli": [10, 19, 28, 41, 44, 69, 314, 317, 320, 323, 327, 328, 330, 332], "As": [10, 11, 12, 13, 17, 19, 23, 26, 34, 38, 41, 44, 56, 69, 75, 85, 105, 126, 137, 158, 178, 198, 210, 311, 314, 315, 317, 318, 320, 321, 325, 326, 327, 330, 331, 332, 333, 335], "my_app": [10, 18, 19, 141, 160, 165, 222, 282], "set_logtalk_flag": [10, 12, 13, 18, 19, 20, 22, 24, 25, 41, 56, 58, 67, 68, 79, 135, 138, 154, 161, 252, 253, 258, 270, 273, 314, 315, 319, 320, 326, 327, 328, 332], "ye": [10, 11, 19, 23, 24, 28, 33, 35, 36, 37, 39, 44, 46, 48, 51, 54, 59, 63, 68, 70, 74, 75, 80, 81, 82, 86, 91, 95, 96, 97, 99, 100, 112, 117, 210, 278, 309, 311, 312, 314, 315, 317, 319, 320, 323, 330, 331, 332, 335], "complex": [10, 13, 16, 18, 19, 42, 43, 44, 56, 67, 69, 314, 315, 321, 323, 327, 330, 332], "rlibrari": [10, 13], "recurs": [10, 13, 20, 44, 161, 191, 201, 302, 318, 320, 321, 329, 330, 332, 335], "convers": [10, 13, 18, 68, 98, 313, 326, 330], "interest": [10, 326], "singl": [10, 16, 19, 24, 41, 42, 43, 44, 56, 64, 68, 69, 93, 95, 98, 111, 155, 192, 212, 237, 284, 313, 315, 317, 320, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 335], "some_object": [10, 330], "unus": [10, 56], "target": [10, 13, 14, 18, 19, 21, 35, 137, 167, 168, 278, 282, 284, 285, 324, 325, 326, 332], "whenev": [10, 23, 34, 41, 99, 117, 251, 253, 254, 309, 312, 315, 317, 318, 319, 329, 330, 332, 335], "logtalk_mak": [10, 19, 21, 39, 41, 137, 248, 273, 276, 277, 278, 280, 281, 285, 315, 332], "level": [10, 12, 15, 18, 19, 20, 21, 23, 25, 41, 42, 43, 141, 251, 253, 254, 276, 277, 280, 281, 283, 284, 309, 311, 314, 315, 317, 319, 322, 325, 326, 327, 328, 329, 330, 331, 332, 335], "abbrevi": [10, 315], "resolv": [10, 18, 120, 167, 168, 276, 277, 280, 281, 332], "thu": [10, 15, 19, 23, 24, 27, 28, 41, 44, 61, 62, 67, 68, 79, 80, 85, 87, 89, 98, 99, 108, 109, 112, 143, 157, 158, 159, 160, 169, 171, 172, 173, 177, 185, 188, 190, 196, 197, 198, 201, 202, 204, 210, 211, 212, 213, 215, 216, 226, 227, 232, 234, 235, 238, 240, 241, 280, 309, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "avoid": [10, 13, 19, 20, 22, 23, 25, 34, 36, 41, 42, 43, 56, 82, 109, 125, 127, 137, 141, 143, 145, 158, 160, 171, 201, 237, 251, 253, 254, 284, 311, 315, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 335], "appli": [10, 13, 16, 19, 20, 23, 24, 27, 38, 42, 43, 67, 79, 176, 201, 215, 216, 236, 277, 281, 314, 316, 320, 325, 326, 327, 329, 330, 332, 333], "group": [11, 64, 92, 315, 320, 327, 330, 331], "suppress": [11, 13, 16, 22, 42, 43, 236, 277, 281, 315, 331, 332], "select": [11, 13, 16, 20, 21, 22, 23, 24, 25, 26, 29, 42, 43, 44, 54, 68, 74, 80, 81, 85, 91, 316, 321, 326, 327, 330, 332, 335], "enabl": [11, 12, 19, 23, 27, 41, 42, 43, 68, 144, 156, 157, 159, 160, 309, 311, 312, 314, 315, 318, 321, 322, 323, 328, 329, 330, 331, 332, 333], "normal": [11, 13, 44, 69, 142, 143, 284, 315, 323, 324, 326, 328, 329, 330, 332], "section": [11, 12, 18, 19, 23, 27, 34, 36, 49, 60, 84, 108, 117, 118, 139, 140, 153, 217, 247, 252, 258, 277, 281, 287, 288, 289, 311, 314, 315, 316, 317, 318, 320, 321, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335], "userman": [11, 12, 18], "disabl": [11, 17, 19, 38, 90, 109, 314, 315, 332, 335], "fine": [11, 13, 41, 178, 314, 320, 321, 330, 335], "grain": [11, 13, 41, 314, 320, 321, 335], "upon": [11, 14, 212, 230, 315, 320, 332], "skip": [11, 12, 16, 39, 42, 43, 51, 90, 94, 95, 315, 319, 331, 332], "xyz": [11, 19], "bar": [11, 12, 19, 23, 41, 62, 68, 69, 74, 89, 157, 158, 159, 167, 168, 181, 217, 312, 314, 315, 319, 323, 326, 328, 330, 333], "baz": [11, 19, 26, 41, 68, 69, 83, 167, 168, 181, 217, 323, 328, 332], "print_messag": [11, 19, 129, 141, 160, 165, 203, 206, 207, 208, 219, 220, 221, 222, 223, 315, 330, 331], "after": [11, 12, 14, 15, 18, 19, 22, 23, 24, 31, 38, 41, 42, 43, 44, 57, 82, 107, 128, 136, 141, 170, 189, 203, 231, 237, 243, 257, 261, 283, 284, 285, 309, 311, 312, 314, 315, 317, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 335], "xyx": 11, "unlik": [12, 315, 320, 326, 327, 330], "regular": [12, 20, 23, 311, 315, 327, 330, 334], "consequ": [12, 17, 23, 38, 105, 158, 198, 210, 284, 313, 314, 316, 318, 326, 330, 332], "explicitli": [12, 13, 34, 41, 60, 127, 157, 158, 249, 311, 314, 315, 320, 323, 326, 327, 328, 330, 332, 335], "programm": [12, 111, 112, 158, 160, 309, 320, 321, 326, 330, 331, 335], "computation": [12, 20, 318], "expens": [12, 20], "initi": [12, 14, 19, 23, 85, 87, 94, 129, 134, 135, 138, 146, 147, 153, 154, 161, 167, 168, 252, 253, 278, 282, 289, 320, 321, 323, 327, 330, 332], "impact": [12, 329, 332], "my_buggy_cod": 12, "But": [12, 17, 18, 19, 23, 41, 44, 56, 68, 89, 98, 125, 127, 141, 143, 145, 152, 157, 159, 210, 284, 309, 314, 315, 318, 320, 326, 327, 329, 330], "overrid": [12, 17, 24, 41, 44, 56, 67, 75, 107, 143, 192, 278, 314, 320, 323, 330, 332], "off": [12, 18, 19, 20, 34, 85, 109, 153, 167, 168, 218, 289, 315, 318, 319, 325, 329, 331, 332], "debugger_messag": 12, "dump_trac": 12, "simpl": [12, 14, 17, 18, 19, 23, 25, 30, 34, 44, 48, 74, 83, 311, 312, 314, 315, 317, 318, 319, 320, 321, 324, 326, 328, 330, 331, 333, 335], "dump": 12, "trace": [12, 19, 42, 43, 317, 319, 322, 327, 328, 331, 334], "start_redirect_to_fil": 12, "some_go": 12, "stop_redirect_to_fil": 12, "levl": 12, "basic": [12, 15, 19, 41, 47, 57, 67, 72, 80, 85, 87, 96, 123, 267, 320, 329, 332], "swi": [12, 13, 15, 19, 23, 25, 45, 50, 54, 55, 60, 73, 88, 90, 94, 104, 105, 136, 252, 330, 331, 332], "graphic": [12, 319], "tracer": [12, 319], "gtrace": 12, "gspy": 12, "spy": [12, 315, 327], "functor": [12, 25, 41, 73, 83, 111, 161, 163, 181, 192, 326, 328, 330, 332], "expos": [12, 13, 19, 316, 326, 331], "breakpoint": [12, 42, 43, 322], "access": [12, 13, 15, 17, 19, 20, 23, 25, 28, 36, 41, 44, 45, 51, 52, 54, 63, 73, 80, 81, 86, 91, 95, 98, 107, 108, 109, 111, 117, 118, 141, 174, 201, 212, 213, 236, 251, 252, 253, 282, 303, 314, 316, 317, 319, 320, 321, 323, 324, 327, 329, 330, 332, 334, 335], "read": [12, 18, 19, 23, 27, 38, 51, 88, 93, 95, 130, 147, 153, 156, 165, 191, 192, 201, 234, 277, 278, 281, 282, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 315, 318, 320, 324, 326, 328, 330, 331, 335], "jiprolog": [12, 23, 73, 87], "xvm": [12, 15, 19, 23, 50, 55, 60, 73, 90, 94, 104], "trealla": [12, 15, 19, 23, 50, 55, 60, 94], "yap": [12, 13, 19, 23, 25, 45, 50, 55, 60, 73, 94, 104, 331, 332], "accur": [12, 19, 315], "workaround": [12, 13, 19, 20, 23, 27, 28, 38, 98, 324, 327, 330], "object_properti": [12, 19, 126, 139, 156, 161, 185, 244, 253, 259, 265, 273, 328], "properti": [12, 19, 41, 42, 43, 87, 98, 137, 162, 217, 247, 273, 287, 288, 318, 319, 322, 324, 334], "line_count": [12, 137, 161, 314, 328, 333], "offset": 12, "present": [12, 19, 23, 56, 59, 82, 98, 123, 130, 313, 317, 323, 331], "xsb": [12, 15, 19, 23, 32, 50, 55, 90, 94, 332], "cross": [13, 27, 326, 330, 334], "referenc": [13, 19, 27, 163, 167, 168, 174, 217, 228, 229, 318, 320, 326, 330, 334], "svg": [13, 63], "architectur": [13, 19, 326], "navig": [13, 15, 69, 317], "zoom": 13, "easili": [13, 18, 19, 23, 41, 75, 319, 324, 326, 327, 328, 330, 331, 332, 335], "uncov": [13, 19], "reveal": [13, 318, 319], "implicit": [13, 19, 41, 44, 50, 55, 60, 64, 108, 120, 171, 186, 212, 214, 215, 216, 230, 231, 237, 283, 284, 315, 326, 327, 330, 335], "circular": [13, 39, 284, 326, 332], "warrant": 13, "refactor": [13, 20, 326], "overview": [13, 16, 19, 42, 43, 71, 98, 322], "coupl": [13, 16, 34, 42, 43, 319, 321, 324], "complement": [13, 18, 19, 41, 44, 75, 80, 107, 108, 122, 249, 251, 314, 317, 319, 321, 327, 328, 331, 332], "code_metr": [13, 16, 19, 20, 22, 42, 43], "comprehens": [13, 27, 108, 314, 327, 330], "discuss": [13, 19, 23, 99, 320, 323, 325, 326, 327, 332], "below": [13, 19, 23, 27, 60, 68, 74, 81, 98, 276, 277, 280, 281, 318, 319, 320, 323, 327, 328, 330, 332], "final": [13, 18, 19, 22, 23, 31, 34, 42, 43, 317, 323, 327, 331, 332], "appear": [13, 22, 83, 321, 330], "autom": [13, 16, 17, 18, 23, 25, 42, 43, 85, 317, 324, 330, 331], "doclet": [13, 16, 18, 22, 41, 42, 43, 284, 317], "logtalk_doclet": [13, 14], "own": [13, 15, 19, 22, 23, 64, 67, 75, 98, 291, 309, 314, 315, 317, 320, 321, 323, 326, 327, 328, 330, 331, 332, 333, 335], "lgt2svg": 13, "bash": [13, 14, 18, 19, 332], "powershel": [13, 18, 19, 23, 317, 332], "recent": [13, 15, 23, 90, 315, 324, 330], "graphviz": [13, 22], "format": [13, 16, 17, 18, 20, 22, 23, 42, 43, 46, 48, 63, 69, 71, 74, 81, 102, 139, 140, 171, 172, 177, 185, 188, 190, 204, 213, 215, 216, 226, 227, 234, 235, 240, 241, 315, 318, 322, 324, 326, 330, 331, 332], "sudo": [13, 15, 22, 23], "brew": [13, 15, 22, 23], "apt": [13, 15, 22, 23], "choco": [13, 22, 23], "download": [13, 15, 22, 23, 98, 104], "On": [13, 15, 16, 18, 19, 42, 43, 70, 97, 100, 228, 278, 319, 321, 323, 332], "linux": [13, 15, 19, 23, 70, 97, 100, 324], "packag": [13, 15, 19, 23, 31, 42, 43, 105, 324, 327, 330], "show": [13, 17, 19, 31, 42, 43, 315, 332], "interfac": [13, 23, 41, 42, 43, 73, 84, 311, 316, 319, 322, 325, 326, 327, 328, 330, 331, 332, 333, 335], "refer": [13, 19, 20, 30, 39, 41, 42, 43, 57, 73, 89, 100, 105, 111, 157, 159, 237, 311, 312, 317, 318, 319, 323, 324, 325, 327, 328, 330, 332], "within": [13, 19, 28, 41, 73, 97, 107, 108, 109, 112, 117, 118, 141, 147, 153, 156, 164, 170, 191, 192, 201, 213, 215, 216, 236, 278, 297, 301, 302, 305, 308, 314, 315, 318, 320, 321, 325, 326, 327, 328, 330, 332, 333, 334, 335], "too": [13, 60, 332], "respect": [13, 23, 30, 48, 74, 86, 147, 164, 170, 199, 252, 282, 312, 315, 317, 319, 320, 324, 326, 330, 332, 335], "util": [13, 16, 22, 23, 42, 43, 46, 52, 53, 56, 58, 73, 75, 76, 83, 85, 98, 311, 321, 324, 328, 330], "make": [13, 16, 18, 19, 20, 22, 23, 31, 32, 41, 42, 43, 57, 60, 61, 62, 73, 75, 87, 89, 99, 107, 108, 118, 125, 127, 141, 143, 145, 152, 155, 164, 170, 171, 198, 199, 212, 230, 231, 237, 284, 301, 308, 314, 315, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333], "sens": [13, 314, 317, 319, 327, 328, 330], "each": [13, 14, 16, 19, 22, 23, 24, 27, 35, 41, 44, 48, 51, 64, 71, 74, 83, 85, 95, 99, 103, 130, 144, 155, 165, 169, 207, 218, 219, 220, 232, 291, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 326, 328, 329, 330, 332, 333, 335], "intend": [13, 19, 20, 309, 315, 318, 319, 323, 324, 330, 332], "uml": [13, 317], "forc": [13, 15, 23, 56, 82, 126, 284, 309, 315, 319, 326], "invent": [13, 317], "kind": [13, 31, 42, 43, 77, 165, 206, 207, 218, 222, 223, 309, 312, 315, 317, 319, 326, 328, 330, 331, 333], "dot": 13, "shape": [13, 332], "arrow": [13, 330], "tab": [13, 51, 95, 331, 332], "lightsalmon": 13, "end": [13, 18, 19, 23, 35, 41, 86, 131, 132, 133, 134, 186, 278, 282, 309, 311, 312, 314, 317, 324, 325, 326, 328, 330, 331, 332, 333, 335], "black": [13, 54, 320, 327, 328, 330], "triangl": 13, "instanc": [13, 36, 41, 42, 43, 146, 152, 253, 274, 278, 282, 311, 312, 313, 316, 317, 321, 322, 323, 327, 330, 332, 333], "box": [13, 24, 42, 43, 83, 212, 322, 327, 329, 330], "rectangl": [13, 330], "yellow": [13, 19, 91, 320, 328], "beig": 13, "aqua": 13, "marin": 13, "fold": [13, 329], "upper": [13, 23, 172], "corner": 13, "light": 13, "cyan": [13, 328], "small": [13, 19, 35, 44, 54, 81, 85, 87, 284, 319, 326, 329, 332, 334, 335], "left": [13, 20, 23, 44, 56, 323, 329, 332, 335], "side": [13, 155, 182, 315, 326, 327, 330, 335], "plum": 13, "springgreen": 13, "skyblu": 13, "protect": [13, 19, 41, 42, 43, 61, 62, 75, 83, 87, 89, 108, 111, 117, 118, 122, 138, 145, 148, 149, 151, 152, 155, 161, 163, 164, 167, 168, 170, 174, 180, 181, 199, 201, 217, 228, 229, 236, 250, 267, 268, 269, 271, 272, 274, 290, 314, 319, 322, 325, 327, 328, 330, 333, 335], "privat": [13, 23, 41, 42, 43, 61, 62, 75, 81, 83, 89, 108, 111, 117, 118, 127, 138, 145, 146, 148, 150, 152, 161, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 185, 188, 190, 196, 197, 198, 199, 201, 202, 204, 210, 211, 212, 213, 215, 216, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 250, 267, 268, 269, 271, 272, 274, 290, 309, 311, 314, 315, 319, 322, 325, 326, 327, 328, 330, 332, 333], "indianr": 13, "export": [13, 16, 23, 42, 43, 48, 81, 157, 326, 327, 330, 332], "pale": 13, "turquois": 13, "onorm": 13, "white": [13, 320, 327], "vee": 13, "circl": [13, 19, 112, 328], "squar": [13, 171, 330], "obox": 13, "rdiamond": 13, "half": [13, 315], "diamond": 13, "dash": [13, 74, 315], "border": 13, "darker": 13, "color": [13, 19, 112, 185, 212, 317, 320, 324, 330, 331], "caption": 13, "node_type_capt": 13, "relation_label": 13, "websit": [13, 15, 22, 42, 43, 71, 329, 332], "preliminari": [13, 27, 73], "mermaid": 13, "pariti": 13, "printabl": 13, "postscript": 13, "execut": [13, 16, 23, 24, 29, 41, 42, 43, 56, 85, 108, 109, 141, 162, 169, 178, 202, 203, 211, 212, 227, 230, 231, 232, 235, 237, 251, 253, 291, 303, 307, 312, 314, 319, 322, 325, 327, 328, 329, 331, 332, 333, 335], "tpdf": 13, "fdp": 13, "circo": 13, "produc": [13, 48, 74, 330, 332], "better": [13, 19, 23, 54, 68, 81, 94, 141, 198, 324, 326, 327, 328, 332, 335], "tsvg": 13, "worth": [13, 19, 332], "layout": 13, "tooltip": 13, "advantag": [13, 19, 27, 68, 314, 317, 319, 321, 326, 328, 330, 331, 332, 335], "batch": [13, 23, 42, 43, 322], "sh": [13, 14, 15, 17, 19, 22, 23, 85, 332], "posix": [13, 15, 19, 23, 70, 97, 100, 104, 317, 324, 332, 335], "ps1": [13, 15, 19, 23, 317, 332], "bat": [13, 317], "deprec": [13, 20, 332], "accept": [13, 17, 18, 19, 23, 27, 46, 60, 75, 303, 307, 315, 327, 328, 332, 335], "neato": 13, "split": [13, 19, 311, 324, 330, 332, 335], "sever": [13, 15, 18, 19, 21, 23, 30, 41, 44, 54, 77, 81, 87, 144, 278, 309, 311, 314, 315, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "disconnect": 13, "ccomp": 13, "subdiagram": 13, "represent": [13, 23, 41, 42, 43, 45, 54, 69, 71, 82, 86, 91, 97, 100, 102, 226, 317, 319, 321, 323, 330], "encount": 13, "anoth": [13, 19, 23, 41, 44, 69, 75, 83, 136, 158, 160, 167, 168, 313, 314, 315, 316, 318, 319, 320, 326, 328, 330, 331, 332, 335], "slice": 13, "piec": [13, 321], "prefer": [13, 14, 19, 22, 23, 54, 69, 120, 130, 158, 278, 314, 321, 323, 324, 326, 328, 330, 332, 333], "capabl": [13, 41, 316, 321, 323, 324], "tile": 13, "adob": 13, "reader": [13, 42, 43, 71], "hand": [13, 319, 321, 323, 330, 332], "plai": [13, 41, 316, 318, 319, 323, 327, 328, 330], "tune": 13, "atom": [13, 15, 19, 23, 41, 46, 47, 48, 56, 60, 62, 63, 69, 70, 74, 80, 93, 97, 100, 125, 126, 127, 128, 130, 141, 142, 143, 144, 145, 153, 158, 161, 163, 177, 178, 180, 181, 185, 207, 219, 220, 223, 226, 240, 243, 250, 252, 257, 258, 261, 267, 268, 269, 271, 272, 274, 278, 279, 282, 284, 285, 289, 290, 300, 302, 314, 315, 317, 318, 321, 326, 327, 328, 330, 331, 332, 333, 335], "top_to_bottom": 13, "bottom_to_top": 13, "left_to_right": 13, "right_to_left": 13, "boolean": [13, 19, 23, 27, 83, 185, 252], "file_label": 13, "label": [13, 17, 19, 330], "file_extens": 13, "inheritance_rel": 13, "provide_rel": 13, "xref_rel": 13, "xref_cal": 13, "output_directori": 13, "dot_dia": 13, "exclud": [13, 16, 27, 42, 43, 44, 314, 316, 328, 332], "path_url_prefix": 13, "pathprefix": 13, "codeurlprefix": 13, "docurlprefix": 13, "cluster": [13, 73], "url_prefix": 13, "entity_url_suffix_target": 13, "suffix": [13, 14, 23, 314, 324, 328, 330, 333], "separ": [13, 17, 19, 41, 42, 43, 51, 59, 69, 82, 85, 95, 155, 158, 278, 284, 322, 324, 326, 327, 328, 330, 332, 333], "symbol": [13, 41, 54, 161, 327], "omit_path_prefix": 13, "omit": [13, 41, 158, 160, 276, 277, 280, 281, 314, 315, 323, 330, 332, 333], "home": [13, 17, 18, 19, 22, 23, 137, 278, 324, 332], "icon": 13, "zoom_url_suffix": 13, "recursive_rel": 13, "url_line_refer": 13, "host": [13, 19, 23, 41, 90], "gitlab": [13, 17, 18, 19, 23], "bitbucket": [13, 19, 23], "perman": [13, 19], "commit": [13, 17, 19, 23, 63, 335], "sha1": [13, 19], "predicate_url_target_format": 13, "sphinx": [13, 15, 18, 22, 317], "directory_path": 13, "empti": [13, 17, 19, 69, 81, 82, 109, 140, 160, 169, 196, 227, 232, 236, 314, 315, 320, 330, 332], "togeth": [13, 19, 30, 73, 85, 177, 318, 321, 324, 331, 335], "confirm": [13, 19, 60], "exact": [13, 19, 323, 327, 329], "default_opt": [13, 83], "displai": [13, 15, 19, 69, 315, 331], "eclips": [13, 15, 19, 23, 24, 45, 50, 55, 60, 74, 85, 87, 90, 94, 104, 330, 332], "prolog_xref": 13, "text": [13, 18, 19, 41, 42, 43, 48, 74, 88, 95, 130, 137, 165, 218, 311, 314, 319, 322, 324, 327, 328, 331, 333], "editor": [13, 46, 48, 51, 74, 102, 314, 324, 328, 332, 333], "vscode": 13, "docprefix": 13, "vscodium": 13, "cursor": 13, "zed": 13, "macvim": 13, "mvim": 13, "textmat": 13, "txmt": 13, "absolut": [13, 19, 137, 276, 277, 278, 280, 281, 314, 318, 328, 332, 333], "scheme": [13, 317, 328], "simpler": [13, 19, 317, 330, 332], "idea": [13, 19, 20, 73, 313, 314, 316, 319, 321, 327, 330], "cut": [13, 20, 41, 112, 172, 202, 210, 211, 215, 216, 291, 325, 330, 332], "Its": [13, 109, 117, 314, 315, 319, 332], "logtalk3": [13, 19, 63], "remain": [13, 19, 23, 56, 87, 111, 112, 291, 314, 319, 325, 328, 330, 332, 333, 335], "valid": [13, 19, 20, 23, 41, 44, 69, 83, 96, 109, 117, 123, 137, 153, 160, 163, 180, 181, 185, 217, 234, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 267, 268, 269, 271, 272, 274, 277, 279, 281, 284, 287, 288, 289, 290, 314, 315, 317, 318, 328, 330, 331, 332, 333], "bound": [13, 19, 23, 41, 48, 64, 69, 74, 89, 112, 129, 158, 160, 171, 181, 198, 217, 230, 231, 237, 241, 251, 253, 254, 314, 317, 318, 319, 328, 329, 330], "eb156d46e135ac47ef23adcc5d20d49dd8b66abb": 13, "apidoc": 13, "all_load": [13, 85, 324], "inheritance_diagram": 13, "logtalkus": [13, 19, 23, 32, 278, 324, 332], "logtalkhom": [13, 19, 23, 32, 278, 324], "whose": [13, 19, 20, 41, 56, 68, 69, 74, 171, 212, 237, 320, 323, 326, 327, 329, 330, 332, 335], "slash": [13, 332], "proper": [13, 51, 158, 251, 253, 254, 277, 281, 330, 332, 335], "retriev": [13, 23, 41, 69, 158, 174, 237, 278, 292, 295, 298, 299, 303, 317, 319, 327, 328, 330, 332, 335], "repo": [13, 15, 17, 19, 23, 56, 104], "itself": [13, 18, 19, 23, 25, 36, 38, 41, 85, 201, 236, 277, 281, 309, 313, 315, 316, 319, 320, 323, 325, 326, 327, 328, 330, 331, 332, 335], "shorter": [13, 99], "come": [13, 321], "correct": [13, 19, 26, 41, 44, 56, 111, 177, 185, 317, 318, 324, 326, 330, 332], "retyp": 13, "reappli": 13, "quit": [13, 15, 19, 315, 319], "xref_diagram": [13, 272], "notabl": [13, 18, 23, 34, 41, 44, 56, 60, 74, 87, 102, 277, 281, 316, 319, 320, 327, 329, 330, 331, 332], "incomplet": [13, 26], "caller": [13, 19, 25, 161, 314, 325, 327, 328, 330, 335], "auxiliari": [13, 19, 41, 98, 161, 311, 314, 326, 328, 330], "meta_compil": [13, 42, 43, 71, 78], "appar": [13, 318, 323, 331], "dedic": [13, 19, 98, 291, 321], "doesn": [13, 19, 23, 158, 210, 301, 320, 326, 328, 330, 331], "png": 13, "been": [13, 74, 141, 165, 206, 218, 220, 222, 283, 284, 309, 319, 320, 321, 323, 331, 332, 335], "xinh": 13, "iconfind": 13, "xinhstudio": 13, "copi": [13, 19, 23, 27, 56, 311, 324, 326, 330, 332, 335], "exist": [13, 19, 23, 30, 36, 41, 42, 43, 44, 98, 99, 109, 111, 117, 136, 169, 190, 196, 197, 232, 242, 244, 245, 252, 276, 277, 280, 281, 294, 295, 296, 298, 299, 300, 315, 317, 319, 320, 321, 322, 326, 327, 330, 331, 332], "css": 13, "notori": [13, 19], "random": [13, 19, 42, 43, 44, 70, 71, 80, 85, 97, 100], "crash": 13, "segment": 13, "fault": 13, "repeat": [13, 20, 34, 69, 157, 159, 182, 194, 195, 203, 205, 213, 239, 251, 253, 254, 311, 330, 331, 332, 335], "until": [13, 67, 191, 201, 291, 297, 298, 299, 302, 303, 308, 315, 320, 325, 326, 331, 335], "project": [14, 19, 20, 23, 41, 63, 317, 321, 323, 332], "sequenc": [14, 19, 41, 42, 43, 64, 67, 71, 100, 177, 185, 188, 190, 204, 213, 226, 227, 234, 235, 240, 241, 319, 326, 331, 332], "_doclet": 14, "therefor": [14, 17, 23, 41, 60, 85, 125, 127, 141, 143, 145, 311, 312, 316, 319, 321, 325, 330, 332, 333, 335], "sample_doclet": 14, "doclet1": 14, "zoom_doclet": 14, "tools_doclet": 14, "man": [14, 15, 17, 18, 19, 324], "logtalk_make_target_act": [14, 19, 248, 273, 283, 284], "tutor": [15, 16, 19, 20, 21, 22, 23, 42, 43], "window": [15, 18, 19, 23, 32, 63, 70, 97, 100, 104, 317, 324, 332], "xdg": [15, 332], "maco": [15, 19, 23, 70, 73, 90, 97, 100, 324], "brows": [15, 17, 19, 31, 42, 43], "handbook": [15, 19, 49, 317, 327], "texinfo": [15, 18, 22], "reli": [15, 19, 38, 292, 293, 294, 295, 303, 306, 307, 330, 331, 332, 335], "portabl": [15, 16, 19, 20, 22, 31, 42, 43, 50, 55, 71, 84, 87, 88, 94, 98, 102, 105, 125, 127, 130, 141, 143, 145, 251, 253, 254, 277, 281, 314, 320, 321, 322, 326, 327, 330], "ciao": [15, 23, 32, 90], "inlin": [15, 42, 43, 50, 55, 60, 69, 161, 178, 318, 322, 328, 330, 332], "member": [15, 19, 109, 117, 120, 158, 160, 176, 177, 210, 261, 295, 302, 311, 327, 330, 335], "base64": [15, 42, 43, 70, 71], "message_token": [15, 165, 203, 206, 207, 218, 219, 220, 221, 222, 223, 315, 331], "although": [15, 23, 41, 68, 91, 109, 141, 278, 315, 324, 326, 327, 328, 330, 332], "logtalk_test": [15, 17, 19, 23, 85], "finish": [15, 107, 314, 335], "info": [15, 18, 19, 22, 23, 56, 135, 138, 144, 148, 161, 314, 317, 326, 328, 330, 333], "back": [15, 23, 38, 292, 304, 306, 331, 332, 335], "prompt": [15, 19, 23, 165, 223, 331], "scroll": 15, "terminfo": 15, "xterm": 15, "256colour": 15, "clone": [15, 19, 23, 68], "update_html_doc": [15, 22, 23, 85], "build_manu": 15, "third": [15, 16, 19, 22, 23, 30, 42, 43, 44, 85, 216, 315, 317, 321, 323, 324, 326, 330, 331, 332], "parti": [15, 16, 19, 22, 23, 42, 43, 44, 85, 324, 330, 331, 332], "macport": [15, 23], "homebrew": [15, 23], "ubuntu": [15, 23], "drop": 15, "fragment": [15, 42, 43, 71, 317], "parenthesi": [15, 19, 20, 109, 126], "asdf": [16, 22, 42, 43], "assert": [16, 19, 22, 42, 43, 51, 95, 127, 155, 167, 168, 191, 278, 314, 322, 327, 328, 332], "ad": [16, 19, 23, 24, 25, 27, 41, 42, 43, 56, 67, 86, 99, 167, 168, 313, 314, 315, 317, 318, 320, 326, 327, 328, 330], "context": [16, 19, 24, 41, 42, 43, 68, 96, 108, 109, 111, 112, 114, 117, 118, 120, 141, 142, 143, 158, 160, 162, 169, 171, 172, 173, 177, 185, 188, 190, 196, 197, 198, 201, 203, 204, 210, 211, 212, 213, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 251, 253, 282, 303, 307, 309, 311, 314, 316, 318, 319, 322, 323, 325, 326, 327, 328, 329, 331, 332], "redirect": [16, 19, 42, 43, 331], "metric": [16, 42, 43, 329, 332], "halstead": [16, 42, 43], "upn": [16, 42, 43], "cyclomat": [16, 42, 43], "modul": [16, 19, 22, 23, 25, 31, 36, 41, 42, 43, 67, 88, 120, 127, 142, 143, 145, 157, 158, 163, 167, 168, 171, 172, 174, 181, 190, 215, 216, 217, 228, 229, 279, 282, 284, 314, 320, 321, 322, 324, 327, 328, 332], "plain": [16, 18, 19, 27, 30, 31, 41, 42, 43, 85, 319, 320, 321, 322, 324, 327, 328, 329, 332], "dead_code_scann": [16, 20, 22, 42, 43, 285], "caveat": [16, 19, 42, 43, 109, 314, 326, 332], "scan": [16, 42, 43, 284], "debug_messag": [16, 22, 42, 43, 315], "debugg": [16, 19, 22, 24, 42, 43, 223, 243, 257, 261, 322, 327, 329, 331, 332], "diagram": [16, 22, 23, 27, 42, 43, 63, 272, 322, 326, 332], "element": [16, 19, 23, 42, 43, 48, 54, 56, 67, 71, 74, 81, 85, 86, 91, 99, 111, 169, 196, 252, 276, 277, 280, 281, 302, 311, 317, 327, 330], "experiment": [16, 20, 23, 42, 43, 63, 80, 81, 123, 279, 330, 335], "issue_cr": [16, 19, 22, 42, 43], "lgtdoc": [16, 20, 22, 23, 41, 42, 43, 317], "linter": [16, 19, 22, 42, 43, 60, 112, 162, 273, 279, 322, 326, 330], "main": [16, 22, 23, 41, 42, 43, 51, 63, 73, 75, 77, 78, 79, 95, 130, 137, 283, 284, 322, 326, 327, 328, 330, 331, 332], "dialect": [16, 42, 43, 90, 320, 326], "quickcheck": [16, 42, 43, 44], "determinist": [16, 24, 42, 43, 94, 155, 211, 291, 303, 329, 330, 335], "input": [16, 42, 43, 46, 56, 68, 74, 147, 165, 186, 201, 204, 213, 215, 216, 223, 282, 315, 318, 330, 331, 335], "timeout": [16, 42, 43, 71], "setup": [16, 17, 23, 25, 42, 43, 85, 324], "cleanup": [16, 42, 43], "annot": [16, 42, 43], "memori": [16, 42, 43, 51, 95, 141, 227, 276, 277, 280, 281, 327, 328, 332], "flaki": [16, 17, 42, 43], "mock": [16, 42, 43], "xunit": [16, 42, 43], "tap": [16, 42, 43], "allur": [16, 22, 42, 43], "tracker": [16, 17, 42, 43], "minim": [16, 27, 41, 42, 43, 60, 61, 62, 64, 69, 73, 89, 122, 123, 319, 321, 329, 330, 332, 333], "lint": [16, 23, 27, 42, 43, 153, 318], "pack": [16, 22, 42, 43, 278], "registri": [16, 42, 43, 278], "storag": [16, 42, 43], "virtual": [16, 34, 41, 42, 43, 47, 96, 322, 323, 327, 328, 329], "encrypt": [16, 42, 43], "sign": [16, 42, 43], "pin": [16, 42, 43], "secur": [16, 32, 42, 43, 332], "consider": [16, 42, 43, 322], "practic": [16, 19, 42, 43, 91, 125, 127, 141, 143, 145, 284, 319, 326, 327, 329, 330, 331, 332], "ports_profil": [16, 22, 42, 43, 315], "profil": [16, 19, 22, 23, 41, 42, 43, 310, 321, 322, 328, 329], "wrapper": [16, 22, 23, 25, 42, 43, 137, 320, 326, 328, 335], "workflow": [16, 17, 41, 42, 43, 67, 322], "complementari": [17, 319], "gh": [17, 22], "glab": [17, 22], "cli": [17, 22], "readthedoc": [17, 18, 22], "scenario": [17, 27, 67, 68, 314, 324, 326, 328, 330, 335], "jdoe": [17, 19, 22, 23, 332], "u": [17, 19, 36, 44, 56, 102, 130, 158, 160, 212, 309, 311, 312, 314, 315, 317, 318, 319, 321, 325, 326, 328, 330, 332, 333, 335], "55aa900775befa135e0d5b48ea63098df8b97f5c": 17, "ci": [17, 19, 20], "cd": [17, 18, 19, 20, 23, 85, 317], "pipelin": [17, 19, 20, 67, 320], "moreov": [17, 19, 23, 30, 34, 201, 236, 314, 315, 326, 327, 328, 330, 335], "prior": [17, 18, 145, 158, 278, 320, 330], "authent": [17, 23], "login": [17, 19], "auth": 17, "hostnam": [17, 23], "string": [17, 19, 30, 48, 60, 74, 98, 317, 326, 327, 331], "necessari": [17, 19, 23, 25, 34, 41, 51, 56, 59, 64, 82, 109, 126, 127, 136, 143, 155, 311, 314, 315, 318, 319, 326, 327, 330, 331, 332], "typic": [17, 19, 23, 27, 41, 77, 96, 143, 157, 159, 314, 317, 328, 329, 330, 331, 332], "done": [17, 19, 51, 56, 95, 158, 311, 320, 321, 325, 330, 332], "implicitli": [17, 19, 24, 41, 155, 253, 315, 320, 321, 325, 326, 327, 328, 330, 335], "assign": [17, 45, 95, 312, 316, 327], "comma": [17, 19, 51], "auto": [17, 330], "successfulli": [17, 23, 128, 136, 141, 165, 206, 218, 222, 312, 315, 319, 327, 331, 332], "filter": [17, 19, 157, 330, 331], "markdown": [17, 18, 317], "duplic": [17, 19, 20, 26, 278, 284, 309, 314, 321, 326, 330, 332], "preserv": [17, 19, 41, 51, 68, 108, 111, 318, 321, 325, 329], "postpon": [17, 335], "temporarili": [17, 19, 56], "creation": [17, 23, 29, 41, 137, 156, 178, 251, 253, 254, 313, 317, 327, 328, 331, 335], "wip": 17, "branch": [17, 63, 129, 136, 332], "break": [17, 23, 109, 111, 145, 314, 315, 320, 325, 327, 330, 331, 332], "pull": 17, "merg": [17, 99, 160, 317], "request": [17, 23, 41, 82, 327, 331, 332, 335], "no_auto_bug_report": 17, "presenc": [17, 20, 82, 319, 327], "auto_bug_report": 17, "detach": [17, 23], "beta": [17, 22, 23, 30, 332], "feedback": [17, 23, 321], "appreci": [17, 98], "structur": [18, 19, 23, 36, 42, 43, 57, 96, 99, 309, 317, 321, 322, 327, 328, 330, 331, 332], "restructuredtext": [18, 317], "xslt": [18, 19, 22, 38, 317], "processor": [18, 19, 22, 38, 317, 321, 335], "xsltproc": [18, 19, 22], "gnome": 18, "libxslt": [18, 22], "wiki": [18, 99, 100], "xalan": 18, "apach": [18, 22, 33], "saxon": [18, 317], "saxonica": 18, "net": [18, 19, 102], "intermedi": [18, 19, 30, 38, 39, 41, 130, 282, 284, 314, 315, 328, 329, 332, 333], "epub": [18, 317], "pygment": [18, 22], "theme": 18, "sphinx_rtd_them": [18, 22], "xsl": [18, 19, 317], "fo": 18, "fop": [18, 22], "xmlgraphic": 18, "renderx": 18, "xep": 18, "source_fil": [18, 161, 320], "correspond": [18, 19, 22, 23, 41, 48, 56, 74, 85, 91, 112, 117, 118, 142, 143, 144, 153, 176, 212, 230, 231, 237, 289, 303, 307, 312, 314, 315, 316, 317, 318, 319, 323, 324, 325, 328, 330, 332, 333, 334, 335], "xml_doc": [18, 23, 317], "so": [18, 19, 23, 54, 81, 94, 155, 278, 309, 313, 314, 317, 319, 325, 327, 333], "properli": [18, 324, 326, 332], "lgtdocp": 18, "lgt2html": [18, 23, 38, 317], "my": [18, 19, 31, 42, 43, 321, 330], "app": [18, 129], "lgt2rst": [18, 317], "q": [18, 19, 46, 83, 208, 220, 315, 320, 331], "yz": 18, "_build": [18, 317], "learn": [18, 42, 43, 68, 104, 322], "sent": [18, 19, 34, 41, 153, 160, 164, 170, 199, 210, 231, 243, 261, 284, 292, 303, 304, 305, 306, 312, 314, 319, 323, 325, 328, 329, 330, 332, 334, 335], "lgtdoc_missing_direct": 18, "lgtdoc_missing_info_kei": 18, "facto": [18, 19, 60, 98, 315, 321, 324, 326, 330, 331, 332], "kei": [18, 19, 23, 48, 54, 69, 74, 75, 81, 89, 125, 127, 139, 140, 141, 149, 278, 282, 315, 316, 317, 320, 321, 326, 327, 330, 331, 332], "paramet": [18, 19, 20, 41, 48, 54, 56, 59, 64, 67, 68, 73, 74, 79, 81, 82, 91, 157, 158, 159, 160, 161, 178, 179, 203, 230, 231, 237, 251, 253, 282, 314, 317, 318, 321, 327, 330], "parnam": [18, 161, 317], "argnam": [18, 140, 161, 317], "lgtdoc_invalid_d": 18, "invalid": [18, 19, 34, 97, 250, 258, 267, 268, 269, 271, 272, 274, 277, 281, 289, 290, 314, 318, 332], "futur": [18, 81, 318, 330], "lgtdoc_non_standard_except": 18, "particularli": [18, 19, 323], "effect": [18, 155, 182, 236, 315, 317, 319, 326, 327, 330, 335], "lgtdoc_missing_punctu": 18, "period": [18, 68, 317], "stop": [18, 24, 296, 312, 315, 317, 319, 332], "exclam": 18, "mark": [18, 317, 326], "question": [18, 19, 41, 42, 43, 162, 165, 203, 222, 223, 317, 322, 328, 334], "silent": [18, 32, 35, 153, 206, 218, 277, 281, 289, 328, 330, 331, 332], "inspir": [19, 24, 36, 59, 85, 90, 314, 327, 332], "joachim": 19, "schimpf": 19, "test_util": 19, "jan": [19, 54, 104], "wielemak": [19, 54], "plunit": 19, "parametriz": 19, "subset": [19, 23, 30, 60, 84, 99, 329], "facilit": [19, 27, 321], "mainten": [19, 23, 212, 321, 323, 328, 330], "lgtunit_messag": 19, "root": [19, 23, 32, 41, 83, 85, 96, 99, 309, 313, 321, 323, 324, 327, 328, 335], "than": [19, 23, 25, 87, 97, 98, 99, 212, 309, 315, 317, 323, 325, 326, 327, 328, 329, 330, 332, 335], "faster": [19, 45, 87, 330, 335], "context_switching_cal": [19, 24, 68, 109, 161, 287, 315, 328, 332], "overriden": [19, 20, 41, 80, 107, 314, 320, 332], "exemplifi": [19, 74, 315, 330], "ones": [19, 28, 32, 35, 41, 284, 285, 311, 327, 332], "basic_typ": [19, 42, 43, 71, 96], "remov": [19, 34, 56, 73, 86, 311, 319, 328, 329, 330, 332, 335], "preprocess": 19, "advic": [19, 27, 321, 332], "unknown": [19, 20, 23, 111, 153, 199, 289, 324, 327, 328, 330, 332], "driver": [19, 23, 332], "progress": [19, 48, 69, 81, 85, 105, 330], "tester_wip": 19, "test_identifi": 19, "desir": [19, 23, 63, 74, 317], "run_test_set": 19, "test_set_1": 19, "test_set_2": 19, "account": [19, 23, 24, 108, 147, 158, 160, 323, 330, 332, 334], "insid": [19, 41, 56, 105, 147, 309, 311, 315, 318, 321, 324, 325, 326, 327, 330, 332, 335], "shortcut": [19, 20, 21, 31, 42, 43, 280, 283, 284, 315, 317, 332], "quicker": 19, "cat": 19, "yap64": 19, "bin": 19, "swipl": 19, "7": [19, 20, 23, 30, 44, 80, 81, 91, 99, 100, 136, 178, 222, 273, 275, 315, 318, 332, 335], "lib": [19, 326], "x86_64_nt": 19, "vc16": 19, "coreutil": [19, 22, 23], "give": [19, 56, 73, 120, 158, 160, 315, 317, 320, 321, 323, 330, 331], "usabl": [19, 31, 42, 43, 68, 98, 141, 330], "random_protocol": 19, "_randomobject_": 19, "between_3_in_interv": 19, "fast_random": [19, 87, 159], "backend_random": [19, 87], "ground": [19, 20, 41, 44, 54, 96, 161, 252, 314, 317, 328, 330], "callabl": [19, 41, 107, 108, 109, 111, 112, 117, 118, 128, 136, 141, 144, 158, 160, 161, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 196, 197, 198, 199, 201, 202, 210, 211, 214, 215, 216, 217, 222, 228, 229, 232, 240, 243, 247, 257, 261, 279, 287, 288, 291, 292, 295, 303, 304, 306, 307, 327, 330, 335], "mislead": [19, 326, 329], "clearli": [19, 35], "versatil": 19, "ball": 19, "straightforward": [19, 309], "onc": [19, 23, 39, 121, 155, 172, 202, 203, 209, 210, 291, 325, 329, 330, 332], "subsum": [19, 303, 307, 315], "outcom": 19, "satisfi": [19, 44, 331], "variant": [19, 98, 197, 284, 292, 303, 306, 307, 330, 332], "term1": 19, "term2": 19, "actualerror": 19, "actualbal": 19, "distinguish": [19, 24, 41, 48, 137, 313, 328], "pinpoint": 19, "recogn": [19, 27, 69, 123, 137, 212, 276, 277, 280, 281, 319, 330], "templat": [19, 20, 25, 41, 75, 177, 315, 324, 327, 330, 335], "quick_check": 19, "suppos": 19, "test_goal": 19, "simple_dialect": 19, "term_expans": [19, 27, 67, 68, 191, 192, 193, 201, 203, 282, 320, 326, 330, 333], "begin_of_fil": [19, 320], "bodi": [19, 20, 41, 56, 68, 69, 108, 118, 142, 161, 167, 168, 173, 174, 191, 212, 214, 215, 216, 228, 230, 231, 237, 318, 330, 332], "end_of_fil": [19, 23, 315, 320], "Then": [19, 68, 311, 331], "hook_flows_load": 19, "hook_pipelin": [19, 67, 68, 320], "our": [19, 309, 311, 312, 319, 323, 330, 331, 332], "haskel": [19, 330], "soon": [19, 318, 328, 332], "compli": [19, 330, 332], "interact": [19, 23, 315, 331], "100": [19, 46, 100, 330, 335], "shrink": [19, 44], "counter": [19, 61, 80, 108, 125, 127, 149, 327], "64": [19, 70, 104], "ec": 19, "edg": [19, 44, 99], "seed": [19, 44, 87], "pc": 19, "pre": [19, 34, 42, 43, 67, 69, 71, 96, 121, 222, 315, 319, 325, 330, 332], "closur": [19, 41, 44, 69, 112, 142, 143, 160, 165, 171, 172, 177, 185, 250, 271, 326, 330, 331], "pb": 19, "tick": [19, 25], "integ": [19, 44, 47, 48, 56, 61, 80, 87, 89, 92, 96, 97, 98, 142, 143, 147, 161, 163, 165, 178, 180, 181, 212, 251, 252, 253, 254, 279, 311, 317, 326, 330, 332], "reifi": [19, 299, 335], "sequencese": 19, "discard": [19, 23, 87, 182, 206, 304, 326], "testse": 19, "broken": [19, 314, 315], "why": [19, 31, 42, 43, 59, 309, 326, 327], "culprit": [19, 185, 190, 213, 240, 241], "occur": [19, 20, 27, 41, 56, 128, 136, 158, 160, 169, 212, 230, 231, 232, 237, 284, 311, 312, 317, 319, 321, 332], "arbitrari": [19, 23, 41, 42, 43, 56, 71, 80, 141, 295, 314, 317, 319, 327, 328, 330, 333, 335], "seem": [19, 90], "opaqu": [19, 41, 44, 45, 54, 59, 81, 82, 86, 89, 91, 112, 172, 178, 202, 211, 215, 216, 291, 292, 293, 294, 295, 303, 306, 307, 318, 330, 335], "equal": [19, 23, 34, 74, 99, 251, 315, 328, 330], "while": [19, 20, 26, 41, 60, 67, 111, 282, 284, 314, 315, 316, 318, 321, 325, 326, 327, 328, 329, 330, 332, 334, 335], "fix": [19, 20, 23, 26, 38, 41, 69, 90, 191, 201, 284, 318, 320, 327, 330, 331, 332], "were": [19, 90, 99, 108, 283, 284, 314, 315, 332], "constrain": [19, 35, 44, 309], "enforc": [19, 41, 327], "127": [19, 90, 226], "byte": [19, 46, 48, 70, 88], "416": 19, "18610": 19, "17023": 19, "pair": [19, 44, 48, 54, 69, 74, 81, 96, 139, 140, 158, 165, 218, 249, 250, 267, 268, 269, 271, 274, 279, 284, 290, 315, 317, 330, 333], "mod": [19, 44, 315], "odd": [19, 23, 44, 327, 335], "10000": [19, 330], "25513": 19, "20881": 19, "16407": 19, "5037": 19, "50": [19, 46, 100], "370000": 19, "4963": 19, "49": [19, 97, 100], "630000": 19, "verifi": [19, 23, 27, 41, 44, 318, 319, 330, 332], "examin": [19, 23, 313], "786": 19, "590": 19, "165": 19, "412": 19, "440": 19, "199": 19, "588": 19, "852": 19, "196": 19, "353": 19, "23671": 19, "3853": 19, "29824": 19, "dyo": 19, "xv_mx": 19, "3b": 19, "u4kh": 19, "198": 19, "99": [19, 70, 74, 100, 315, 335], "24": 19, "quick": [19, 68, 324], "3172": [19, 44], "9814": [19, 44], "20125": [19, 44], "7035": 19, "19506": 19, "18186": 19, "qualifi": [19, 20, 34, 41, 127, 143, 157, 158, 163, 167, 168, 169, 174, 228, 229, 232, 326, 327, 330], "unqualifi": 19, "sender": [19, 41, 108, 109, 111, 117, 164, 170, 178, 179, 203, 212, 213, 230, 237, 243, 257, 261, 312, 315, 318, 319, 320, 325, 326, 330], "float": [19, 20, 44, 47, 48, 80, 92, 161, 252, 318, 330], "negative_float": 19, "09230089279334841": 19, "diagnos": [19, 315], "randomli": [19, 44, 80], "every_oth": 19, "everi": [19, 41, 99, 312, 313, 315, 319, 327, 328, 330, 331, 335], "cursori": 19, "rewrit": [19, 20, 140, 208, 326, 330, 331], "retest": 19, "sometim": [19, 68, 107, 143, 278, 318, 320, 321, 325, 326, 330, 332, 335], "regress": [19, 327], "elsewher": [19, 20, 318, 326, 327, 330], "now": [19, 159, 309, 311, 312, 319, 331], "move": [19, 324], "tradit": [19, 315, 321, 327, 330, 332], "pairs_keys_valu": 19, "illustr": [19, 23, 24, 104, 309, 311, 312, 330], "tri": [19, 38, 44, 67, 276, 277, 280, 281, 320, 321, 332], "zero": [19, 31, 42, 43, 44, 48, 98, 161, 171, 176, 253, 315, 317, 318, 329, 330, 335], "notat": [19, 22, 23, 41, 56, 85, 98, 120, 137, 158, 160, 276, 277, 278, 280, 281, 315, 317, 326, 328, 330, 332], "cumbersom": [19, 332], "solv": [19, 26, 27, 41, 120, 144, 321, 323, 330, 332, 335], "foral": [19, 143, 169, 196, 197, 203, 232, 233, 294, 296, 327, 329, 330], "former": 19, "toi": [19, 315], "bit": [19, 23, 70, 87, 100, 331], "hold": [19, 23, 41, 44, 73, 82, 98, 145, 152, 323, 326, 330, 335], "uncondition": 19, "not_yet_readi": 19, "briefli": [19, 318], "explain": [19, 23, 69, 323, 328, 330, 332], "xyz_reset": 19, "reset": [19, 23, 24, 158, 315, 328, 330], "yet": [19, 26, 324, 332], "test_id": 19, "current_prolog_flag": [19, 128, 129], "distract": 19, "cover": [19, 68, 315, 318, 330, 332, 335], "ack": [19, 332], "ack_1": 19, "ack_2": 19, "ack_3": 19, "125": [19, 74], "introduc": [19, 56, 81, 96, 325, 327, 328, 329, 330, 331, 332], "compare_3_order_less": 19, "unexpect": [19, 24, 41, 59, 198, 315, 332, 335], "dictionary_clone_4_01": 19, "as_dictionari": [19, 54], "dictionari": [19, 42, 43, 71, 81, 327], "dictionarypair": 19, "clonepair": 19, "original_pair": 19, "clone_pair": 19, "subsumes_term": 19, "approximately_equ": 19, "essentially_equ": 19, "tolerance_equ": 19, "unif": [19, 20, 24, 41, 123, 212, 230, 231, 237, 315, 327, 328, 329, 330, 332, 335], "almost": [19, 321, 324, 332], "mask": [19, 330], "rare": [19, 126], "super": [19, 41, 57, 75, 108, 171, 314, 319, 321, 323, 325, 327, 330, 332], "my_test_id": 19, "consist": [19, 41, 49, 159, 177, 317, 319, 326, 327, 328], "seldom": [19, 24], "exercis": 19, "findal": [19, 20, 41, 143, 158, 160, 169, 198, 203, 232, 233, 327, 328, 330], "against": 19, "setof": [19, 20, 143, 169, 196, 197, 198, 203, 233, 330], "atom_list": 19, "item": [19, 315], "at_least_one_atom": 19, "14": [19, 100], "abc": [19, 96, 186], "42": [19, 23, 44, 96, 253, 315, 318, 331], "act": [19, 24, 41, 319, 320, 321, 328, 334], "test_solution_gener": 19, "z": [19, 112, 157, 160, 315, 330], "test_solution_generator_2": 19, "compact": [19, 332], "similar": [19, 56, 97, 100, 167, 168, 309, 311, 314, 315, 318, 321, 323, 325, 326, 327, 328, 330, 332, 333], "conform": [19, 60, 210, 250, 324], "p\u00e9ter": 19, "szab\u00f3": 19, "szeredi": 19, "temporari": [19, 93, 278, 331, 332], "clean": [19, 23, 39, 85, 284, 315, 326, 330, 332], "get_char": [19, 330], "charact": [19, 23, 25, 35, 44, 60, 64, 70, 88, 93, 96, 97, 100, 226, 234, 278, 315, 326, 327, 332], "get_char_1_01": 19, "char": [19, 46, 48, 64, 70, 74, 93, 96, 97, 100, 128], "set_text_input": 19, "qwerti": 19, "get_char_1_02": 19, "_char": 19, "text_input_assert": 19, "werti": 19, "pattern": [19, 36, 41, 316, 317, 325, 328, 330, 335], "get_char_2_01": 19, "get_char_2_02": 19, "set_text_output": 19, "text_output_assert": 19, "put_char_2_02": 19, "qwert": 19, "put_char": 19, "divert": [19, 331], "set_output": 19, "set_stream": 19, "user_error": [19, 220, 315], "hypothet": [19, 129], "singletons_warn": 19, "current_output": [19, 69], "broken_fil": 19, "equival": [19, 31, 42, 43, 74, 109, 117, 177, 185, 188, 190, 198, 204, 210, 213, 226, 227, 234, 235, 240, 241, 291, 314, 323, 325, 327, 328, 329, 332, 333, 335], "clutter": 19, "log": [19, 22, 42, 43, 63, 71, 122, 136, 141, 164, 170, 249, 254, 314, 322, 331, 335], "wors": [19, 326, 327], "interfer": [19, 319, 330], "pars": [19, 41, 46, 48, 51, 56, 64, 74, 95, 109, 214, 215, 216, 317, 318, 326, 332], "suppress_text_output": 19, "suppress_binary_output": 19, "proxies_04": 19, "null": [19, 42, 43, 44, 48, 71, 74, 329], "devic": [19, 23], "restrict": [19, 61, 62, 75, 89, 108, 161, 201, 236, 252, 313, 314, 319, 320, 321, 326, 328, 330, 332], "suitabl": [19, 83, 326, 331, 332, 335], "domain": [19, 41, 84, 85, 98, 185, 317, 320, 321, 323, 328, 330, 332], "compiler_error": 19, "domain_error": [19, 97, 153, 173, 177, 180, 181, 187, 188, 190, 203, 204, 212, 213, 217, 226, 227, 234, 235, 238, 240, 241, 247, 250, 252, 258, 267, 268, 269, 271, 272, 274, 277, 281, 287, 288, 289, 290, 317, 330], "core_messag": [19, 247, 256], "_messag": [19, 331], "_kind": 19, "_token": [19, 219], "time_out": 19, "call_with_timeout": 19, "call_with_time_limit": 19, "timed_cal": 19, "atom_concat": [19, 144, 330, 332], "serialized_object": 19, "catch": [19, 20, 38, 96, 136, 177, 184, 185, 187, 188, 190, 203, 204, 213, 226, 227, 234, 235, 238, 240, 241, 285, 318, 320, 330, 332], "delete_fil": 19, "advers": 19, "review": 19, "foo_1": 19, "wait": [19, 305, 307, 308, 332, 335], "deep": [19, 44], "thought": 19, "answer": [19, 41, 117, 118, 165, 222, 231, 295, 298, 299, 302, 315, 318, 325, 327, 330, 331, 335], "foobar": [19, 167, 168], "wall": [19, 70, 97, 100], "total": [19, 314, 328], "multi": [19, 34, 41, 42, 43, 61, 62, 87, 93, 155, 156, 162, 251, 253, 254, 273, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 314, 322, 323, 327, 328, 330, 331], "thread": [19, 41, 42, 43, 56, 61, 62, 87, 93, 135, 138, 155, 161, 162, 190, 227, 251, 253, 254, 273, 287, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 315, 322, 327, 328, 330, 332], "area": [19, 112, 118, 321, 328], "heap": [19, 42, 43, 71, 159], "trail": 19, "tabl": [19, 23, 24, 34, 51, 54, 60, 74, 95, 98, 123, 130, 145, 160, 317, 326, 329, 332, 335], "aggreg": 19, "memory_us": 19, "memory0": 19, "memory1": 19, "frequent": [19, 41, 326, 327], "store": [19, 137, 156, 158, 160, 278, 309, 319, 326, 327, 328, 332], "file_path": 19, "encod": [19, 41, 42, 43, 70, 71, 137, 138, 154, 161], "lgt_unicode_open_4_01": 19, "sample_utf_8": 19, "utf": [19, 130], "close": [19, 27, 34, 41, 108, 117, 118, 309, 317, 320, 321, 325, 326, 327, 330, 332], "self": [19, 41, 42, 43, 108, 109, 118, 163, 167, 168, 169, 171, 172, 174, 178, 179, 180, 181, 196, 197, 198, 202, 203, 210, 211, 212, 215, 216, 217, 228, 229, 231, 232, 237, 303, 307, 309, 311, 314, 315, 319, 321, 322, 327, 328, 329, 330, 332, 333], "clean_fil": 19, "clean_directori": 19, "tmp": [19, 332], "network": [19, 23], "backaward": 19, "alert": [19, 330], "exit": [19, 24, 315, 319], "statu": [19, 22, 319, 324, 332], "task": [19, 32, 64, 314, 315, 319, 324, 331, 335], "feasibl": 19, "usernam": 19, "password": [19, 23], "widget": 19, "imit": 19, "procedur": [19, 23, 24, 42, 43, 109, 111, 117, 169, 190, 196, 197, 220, 232, 261, 316, 322, 323, 325, 329, 330], "hot": [19, 41, 42, 43, 75, 322], "patch": [19, 23, 41, 42, 43, 75, 108, 317, 322, 324, 332], "mock_login": 19, "test123": [19, 23], "respons": [19, 317, 332], "user_manag": 19, "pro": [19, 27, 332], "con": [19, 332], "happen": [19, 38, 59, 314, 330, 331, 333, 335], "abolish": [19, 41, 42, 43, 126, 162, 167, 168, 174, 183, 203, 228, 229, 242, 243, 244, 245, 273, 312, 318, 322, 330], "clariti": [19, 41], "ask": [19, 38, 41, 42, 43, 59, 162, 165, 203, 222, 223, 317, 322, 325, 327, 328, 334], "question_hook": [19, 165, 166, 203, 206, 207, 208, 218, 219, 220, 223, 331], "dbg": [19, 160, 315], "some_test_id": 19, "custom_print_go": 19, "toggl": [19, 319], "enough": [19, 41, 317, 326, 329, 330], "test_foo": 19, "complic": 19, "loader_debug": 19, "tester_debug": 19, "awar": [19, 24, 41, 111, 129, 314, 315, 318, 320, 326, 327, 328, 330, 332, 333, 335], "penalti": [19, 176, 326, 330, 335], "default_init_opt": 19, "instance_base_nam": 19, "process_init_opt": [19, 330], "position_": 19, "500000": 19, "tell": [19, 330], "across": [19, 31, 42, 43, 84, 98, 317, 320, 321, 326, 330, 332], "smaller": [19, 44, 212], "cxprolog": [19, 23, 45, 87], "write_depth": 19, "print_depth": 19, "answer_write_opt": 19, "toplevel_print_opt": 19, "earlier": [19, 23, 315, 330], "set_file_write_depth": 19, "becom": [19, 23, 128, 136, 298, 299, 319, 323, 326, 328, 330, 332, 335], "number1": 19, "number2": 19, "approxim": [19, 330], "epsilon": [19, 251], "arithmet": [19, 20, 48, 129, 188, 318, 330, 331, 332], "constant": [19, 319], "weaker": 19, "stronger": [19, 321], "relativetoler": 19, "absolutetoler": 19, "toler": [19, 251], "benchmark_reifi": 19, "repetit": [19, 311, 323], "averag": 19, "conveni": [19, 22, 23, 57, 59, 63, 68, 82, 318, 320, 321, 325, 327, 328, 330, 333], "differenti": [19, 323], "explicit": [19, 28, 159, 163, 167, 168, 169, 171, 172, 174, 180, 181, 196, 197, 198, 202, 210, 211, 215, 216, 217, 228, 229, 232, 282, 283, 284, 313, 314, 315, 320, 321, 326, 327, 328, 330, 332], "overhead": [19, 42, 43, 50, 55, 60, 73, 123, 171, 215, 216, 322, 330, 335], "conflict": [19, 22, 23, 27, 41, 44, 56, 109, 120, 158, 160, 278, 318, 320, 323, 327, 328, 330, 331, 332, 335], "700": [19, 147, 330], "xfx": [19, 147, 320, 330], "junit": 19, "windyroad": 19, "schema": 19, "llg": 19, "cubic": 19, "xunit_output": 19, "xunit_report": 19, "unifi": [19, 41, 56, 186, 191, 192, 230, 231, 237, 238, 301, 307, 308, 315, 327, 328, 329, 330], "v2": [19, 23, 169, 232, 315], "xunit_net_v2_output": 19, "xunit_net_v2_report": 19, "xunit_net_v2": 19, "easi": [19, 23, 167, 168, 311, 315, 321, 326, 328, 331, 335], "qameta": [19, 22], "zir0": 19, "npmj": 19, "viewer": 19, "jatechuk": 19, "nunit": 19, "jenkin": 19, "anyth": 19, "tap_output": 19, "tap_report": 19, "todo": 19, "word": [19, 23, 41, 111, 120, 253, 319, 325, 327, 331, 332], "quobject": 19, "logtalk_allure_report": 19, "histori": [19, 23, 329], "past": [19, 27], "persist": [19, 32, 330], "deleg": [19, 42, 43, 111, 114, 162, 199, 315, 318, 322, 327], "docker": 19, "plug": [19, 73], "fescobar": 19, "pane": 19, "hash": [19, 23, 63, 314, 328, 333], "rev": 19, "short": [19, 56, 324, 328, 330], "bf166b6": 19, "trend": 19, "my_project": 19, "accident": [19, 23, 330], "3e4ea295986fb09d0d4aade1f3b4968e29ef594": 19, "amaz": 19, "mm": 19, "dd": 19, "yyyi": 19, "coverage_report": 19, "googl": 19, "chrome": 19, "dtd": [19, 317], "xhtml": [19, 69], "popular": [19, 34, 327], "chocolatei": [19, 23], "stringparam": 19, "blob": 19, "master": [19, 63], "minimal_output": 19, "summar": [19, 23], "quintu": [19, 23, 24, 87, 330, 331, 332], "cannot": [19, 23, 27, 38, 41, 73, 85, 94, 121, 127, 128, 130, 136, 141, 145, 155, 167, 168, 169, 171, 172, 173, 177, 178, 185, 188, 190, 196, 197, 198, 202, 204, 210, 211, 213, 215, 216, 226, 227, 232, 234, 235, 238, 240, 241, 284, 314, 317, 318, 319, 324, 325, 327, 328, 330, 331, 332, 333, 335], "sensibli": 19, "_variablename_": [19, 212], "some_id": 19, "_parvar_": 19, "check_xyz": 19, "xyz_condit": 19, "adapt": [20, 25, 27, 29, 32, 41, 54, 65, 91, 102, 130, 137, 158, 160, 276, 277, 280, 281, 283, 284, 314, 315, 320, 326, 328, 329, 330, 331, 332, 333, 335], "sensibl": 20, "discontigu": [20, 41, 138, 148, 161, 318, 326], "grammar": [20, 24, 41, 42, 43, 71, 120, 125, 127, 140, 142, 144, 145, 149, 150, 152, 155, 162, 171, 173, 192, 203, 214, 215, 216, 217, 247, 287, 288, 315, 317, 322, 326, 329, 331, 332, 335], "phrase": [20, 41, 140, 142, 149, 150, 152, 171, 184, 186, 203, 329, 330], "suspici": [20, 153, 332], "comparison": [20, 23, 330, 332], "cyclic": [20, 41, 96, 123, 178, 330, 332], "trivial": [20, 96, 332], "match": [20, 26, 35, 75, 117, 118, 129, 134, 167, 168, 174, 186, 228, 229, 243, 311, 314, 315, 318, 319, 321, 324, 325, 328, 332, 333, 335], "redefin": [20, 23, 41, 121, 137, 157, 159, 208, 220, 314, 315, 317, 318, 325, 327, 331, 332], "lambda": [20, 41, 42, 43, 69, 162, 171, 172, 315, 327, 332], "unclassifi": [20, 318], "mix": [20, 31, 41, 42, 43, 158, 314, 328, 332, 335], "singleton": [20, 41, 282, 332], "els": [20, 124, 128, 134, 136, 138, 161, 330, 332], "soft": [20, 325, 332], "around": [20, 107], "disjunct": [20, 291, 332, 335], "steadfast": [20, 41, 332], "tail": [20, 197, 279, 311, 321, 329, 330, 332], "redund": [20, 329, 332], "existenti": [20, 143, 169, 232, 330], "bagof": [20, 143, 196, 197, 198, 203, 232, 233, 330], "backtrack": [20, 24, 89, 109, 117, 169, 174, 180, 181, 217, 225, 228, 232, 247, 249, 250, 256, 257, 258, 259, 260, 267, 268, 269, 271, 272, 274, 287, 288, 290, 294, 314, 315, 319, 328, 329, 330, 333, 335], "over": [20, 23, 50, 55, 60, 66, 87, 94, 96, 101, 109, 117, 312, 314, 319, 321, 332, 334], "unsound": 20, "guidelin": [20, 42, 43, 102, 317, 322, 330], "rewritten": [20, 330, 331, 332, 335], "nake": [20, 41, 214], "transpar": [20, 41, 210, 319, 330], "candid": [20, 332], "explan": [20, 26], "logtalk_linter_hook": [20, 273, 275], "misus": [20, 318, 332], "refman": 21, "logtalk_make_0": 21, "logtalk_make_1": 21, "regener": [21, 22, 85], "logtalk_make_target_action_1": 21, "session": [22, 23, 312, 315, 325, 332], "mainli": [22, 41, 58, 111, 112, 178, 321, 330], "update_svg_diagram": [22, 23, 85], "suppress_path_prefix": 22, "texliv": 22, "libarch": [22, 23], "gnupg2": [22, 23], "curl": [22, 23], "wget": [22, 23], "direnv": [22, 23], "pip": 22, "upgrad": [22, 23, 31, 42, 43, 324], "ppa": 22, "dnf": 22, "bsdtar": [22, 23], "gnupg": [22, 23], "gitforwindow": [22, 23], "eternallybor": [22, 23], "misc": [22, 23], "psenv": [22, 23], "uninstal": 23, "publicli": [23, 67, 268, 271], "vpn": 23, "central": [23, 316, 330, 332], "trust": 23, "checksum": 23, "signatur": [23, 327], "sanit": 23, "sha256sum": 23, "gpg": 23, "tar": [23, 324], "uncompress": 23, "zip": 23, "unzip": 23, "reliabl": [23, 87, 332], "certutil": 23, "ex": [23, 56], "build": [23, 309, 317, 319, 320, 321, 324, 327], "galleri": 23, "appl": 23, "interf": 23, "logtalk_pack": [23, 278], "logtalkpack": 23, "shouldn": 23, "restor": [23, 320], "fulfil": 23, "logtalk_load_context": [23, 141, 201, 236, 248, 273, 278, 320, 326], "assertz": [23, 51, 95, 108, 158, 160, 163, 167, 174, 183, 203, 228, 229, 278, 282, 309, 314, 320, 330, 332], "logtalk_library_path": [23, 41, 58, 248, 273, 276, 277, 280, 281, 282, 332], "never": [23, 24, 44, 69, 169, 201, 232, 236, 283, 284, 317, 319, 320, 326, 327, 328, 330, 332, 335], "alias": [23, 27, 41, 120, 157, 158, 159, 160, 177, 278, 284, 326, 327, 330, 332], "certifi": 23, "talkshow": 23, "lgtenv": 23, "my_venv": 23, "envrc": 23, "unload": 23, "mimic": 23, "env": 23, "pinned_registri": 23, "pinned_pack": 23, "lflat": 23, "enter": [23, 315], "passphras": 23, "remot": 23, "unquot": 23, "least": [23, 41, 99, 313, 328, 330], "_registri": 23, "registry_protocol": 23, "convent": [23, 56, 328], "jdoe_awesome_packs_registri": 23, "2021": 23, "awesom": 23, "spec": [23, 97, 326], "jdoe_awesome_pack": 23, "readm": [23, 85, 324], "recommend": [23, 171, 314, 317, 328, 330, 332, 333], "foo_pack": 23, "bar_pack": 23, "cours": [23, 34, 318, 332], "safeti": 23, "lode": 23, "strictli": [23, 319, 330], "alreadi": [23, 201, 236, 251, 253, 254, 293, 307, 318, 320, 323, 324, 329, 332, 335], "outdat": 23, "orphan": 23, "my_pack_collect": 23, "pack_protocol": 23, "_pack": 23, "lflat_pack": 23, "flat": 23, "automata": [23, 41], "toolkit": 23, "mit": 23, "ref": 23, "tag": [23, 48, 292, 293, 303, 306, 307, 330, 335], "gz": 23, "sha256": 23, "9c298c2a08c4e2a1972c14720ef1498e7f116c7cd8bf7702c8d22d8ff549b6a1": 23, "8774b3863efc03bb6c284935885dcf34f69f115656d2496a33a446b6199f3e19": 23, "36": 23, "sha": 23, "256": 23, "tgz": 23, "tbz2": 23, "bz2": [23, 324], "symmetr": 23, "cipher": 23, "cvzf": 23, "my_pack": 23, "algo": 23, "aes256": 23, "v1": [23, 169, 232, 315], "commun": [23, 30, 42, 43, 321, 322, 335], "decrypt": 23, "agent": [23, 146, 315, 321, 335], "inappropri": 23, "ioctl": 23, "gpg_tty": 23, "tty": 23, "asc": 23, "checksig": 23, "armor": 23, "sso": 23, "ssh": 23, "me": [23, 137, 324], "0894c7cdb8968b6bbcf00e3673c1c16cfa98232573af30ceddda207b20a7a207": 23, "pseudo": [23, 44, 69, 70, 80, 87, 97, 100, 109, 111, 112, 117, 156, 315, 319, 320, 325, 326, 327, 330, 332, 335], "concaten": [23, 330], "webpag": 23, "openssl": 23, "compress": [23, 99, 324], "mismatch": 23, "upload": 23, "newest": 23, "oldest": 23, "newer": 23, "older": [23, 32, 323], "consecut": 23, "lower": [23, 97, 98, 318], "9": [23, 30, 46, 97, 99, 100, 315, 330, 335], "decreas": 23, "place": [23, 41, 112, 137, 158, 160, 315, 321, 330, 332, 335], "machin": [23, 34, 329, 331], "darwin": 23, "x86_64": 23, "cx": 23, "ji": 23, "tau": [23, 60], "my_awesome_librari": 23, "none": [23, 98, 164, 165, 170, 173, 176, 178, 182, 186, 191, 192, 194, 195, 199, 201, 206, 207, 208, 214, 218, 219, 220, 222, 223, 225, 230, 231, 234, 235, 236, 237, 238, 239, 278, 279, 282, 283, 284, 285, 293, 294, 297, 301, 302, 305, 308, 315, 335], "instad": 23, "1944773afba1908cc6194297ff6b5ac649a844ef69a69b2bcdf267cfa8bfce1": 23, "reg": 23, "among": [23, 60, 318, 321, 323, 326], "disambigu": 23, "immedi": [23, 292, 330, 335], "success": [23, 31, 42, 43, 109, 117, 123, 164, 176, 279, 291, 292, 304, 306, 315, 317, 318, 319, 321, 328, 332, 335], "restart": [23, 41, 332], "extra": [23, 329], "incompat": [23, 32, 81], "unreli": 23, "strongli": [23, 317, 326, 332], "person": [23, 253, 309, 315, 317], "header": [23, 51, 95], "foo42": 23, "cach": [23, 34, 108, 117, 118, 284, 314, 321, 329, 332], "leak": 23, "longer": [23, 24, 235, 315, 319, 330, 335], "expand_library_path": [23, 278], "rdirectori": [23, 27], "stai": 23, "attempt": [23, 25, 69, 98, 111, 278, 318, 320, 326, 327], "ou": 23, "unpin": 23, "potenti": [23, 61, 62, 89, 318, 319, 323, 326, 331, 332, 335], "harm": 23, "previous": [23, 51, 95, 167, 168, 314, 315, 319, 323], "precaut": 23, "unsign": 23, "signer": 23, "neither": [23, 108, 109, 111, 112, 117, 118, 153, 163, 167, 168, 169, 171, 172, 174, 180, 181, 196, 197, 198, 202, 210, 211, 212, 214, 215, 216, 217, 228, 229, 232, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 267, 268, 269, 271, 272, 274, 276, 277, 280, 281, 287, 288, 289, 290, 291, 292, 295, 296, 298, 299, 300, 303, 304, 306, 307, 315, 317, 329, 330, 332], "nor": [23, 108, 109, 111, 112, 117, 118, 153, 163, 167, 168, 169, 171, 172, 174, 180, 181, 196, 197, 198, 202, 210, 211, 212, 214, 215, 216, 217, 228, 229, 232, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 267, 268, 269, 271, 272, 274, 276, 277, 280, 281, 287, 288, 289, 290, 291, 292, 295, 296, 298, 299, 300, 303, 304, 306, 307, 317, 329, 330], "alpha": [23, 30, 321, 332], "numer": [23, 51], "ascii": [23, 130, 332], "audit": 23, "had": [23, 327], "chanc": [23, 315], "roll": 23, "underscor": [23, 41, 98, 332], "increas": [23, 61, 98, 99], "backward": [23, 30, 323], "old": [23, 314, 330, 332], "critic": [23, 54, 81, 332], "backup": [23, 111, 324], "pl_pack": 23, "pl_reg": 23, "adopt": [23, 85, 321, 332], "file_search_path": [23, 332], "309": 23, "explor": 23, "20": [23, 70, 139, 317], "directory_fil": 23, "didoudiaz": 23, "gprolog": 23, "underli": [23, 335], "travers": [24, 323], "port_profil": 24, "byrd": 24, "four": [24, 64, 315, 317, 329, 330], "redo": [24, 25, 315], "column": [24, 51], "my_source_fil": [24, 58, 79], "activ": [24, 42, 43, 235, 322, 325, 326], "addam": [24, 315], "sister": [24, 315], "sibl": [24, 315], "wednesdai": 24, "pubert": 24, "pugslei": 24, "femal": [24, 315], "parent": [24, 41, 249, 253, 268, 282, 316, 323, 328], "unwant": 24, "determin": [24, 99, 315, 327, 330], "ineffici": 24, "behavior": [24, 36, 42, 43, 44, 314, 318, 319, 321, 322, 323, 325, 327, 330, 332, 333], "straight": [24, 90, 326], "forward": [24, 42, 43, 56, 73, 90, 111, 162, 203, 260, 284, 318, 326, 327, 330], "yap_profil": 25, "sicstus_profil": 25, "xpce": 25, "invok": 25, "prolog_statist": 25, "thank": [25, 51, 98, 331], "goal_expans": [25, 27, 67, 191, 192, 193, 203, 236, 282, 320, 326, 330, 333], "forget": [25, 330], "conceal": 25, "lgt_": 25, "_def": 25, "_dcl": 25, "_super": 25, "few": [25, 30, 60, 98, 317, 324, 326, 330, 332], "code_prefix": [25, 332], "familiar": [26, 327, 330], "ters": 26, "No": [26, 30, 34, 36, 41, 69, 303, 307, 323, 332], "main_include_compiler_warn": [26, 332], "include_compiler_warn": [26, 332], "37": 26, "38": [26, 97, 332], "48": [26, 85, 97, 100], "spuriou": [26, 96], "degrad": 26, "checker": [27, 44], "permiss": [27, 56, 213, 317, 327, 328, 330], "root_directory_of_prolog_cod": 27, "flexibl": [27, 321], "further": [27, 41, 201, 236, 320, 327, 330], "include_wrapped_fil": 27, "prolog_extens": 27, "logtalk_extens": 27, "parallel": [27, 42, 43, 85, 314, 322, 328, 333, 335], "shorthand": [27, 41, 158, 160, 327, 330, 332], "preload": 27, "guid": [28, 29, 33, 332], "clash": [28, 61, 62, 89, 314, 327, 328, 330, 332, 333], "solver": [28, 330], "encapsul": [28, 34, 36, 41, 42, 43, 68, 109, 111, 145, 309, 311, 314, 316, 321, 322, 325, 327, 328, 330, 332, 333, 334], "qualif": [28, 120, 326, 327, 330], "bypass": [28, 42, 43, 60, 112, 201, 236, 315, 319, 322, 330], "migrat": [28, 30, 42, 43, 89, 322], "embed": [29, 58, 128, 141, 314, 328, 332, 333], "emb": 29, "regist": [30, 57, 312, 319], "juli": [30, 321], "octob": 30, "april": 30, "2012": [30, 321], "august": [30, 321], "2015": [30, 321], "tran": [30, 321, 329], "standalon": [30, 31, 42, 43, 328], "chosen": [30, 35, 44, 52, 98, 130, 156, 313, 321, 324, 329, 330, 332], "worthless": 30, "nevertheless": [30, 319, 326, 327, 335], "constraint": [31, 42, 43, 105, 317, 321, 330], "hierarchi": [31, 41, 42, 43, 71, 85, 96, 313, 314, 322, 328, 330, 332], "troubleshoot": [31, 42, 43], "gecko": [31, 42, 43], "firefox": [31, 42, 43], "render": [31, 32, 42, 43, 314, 317, 332], "ensure_load": [31, 42, 43, 98, 332], "deploy": [31, 42, 43, 331, 332], "factor": [31, 42, 43, 329, 330], "crucial": [31, 42, 43, 327], "commerci": [31, 42, 43, 324], "profession": [31, 42, 43], "train": [31, 42, 43], "logtalk_user_setup": 32, "administr": 32, "anti": 32, "viru": 32, "faq": [33, 42, 43], "improv": [34, 41, 98, 108, 117, 118, 141, 210, 311, 318, 319, 320, 321, 325, 326, 330, 332], "necessarili": [34, 41, 118, 144, 314, 321, 325, 327, 328, 329, 330, 332], "truli": 34, "lookup": [34, 41, 54, 81, 108, 117, 118, 313, 314, 316, 321, 325, 327, 330], "achiev": [34, 41, 319, 321, 325], "book": [34, 85], "keep": [34, 51, 69, 95, 252, 326, 329, 330, 332, 335], "driven": [34, 36, 42, 43, 53, 198, 285, 315, 322, 325, 327, 332, 333, 334, 335], "benefit": [34, 56, 326, 332], "trade": 34, "attain": 34, "occurr": [35, 41, 83, 137, 176, 212, 319, 332], "platform": [35, 321], "wrong": [35, 315], "descend": [36, 41, 150, 314, 317, 321, 323, 327, 328, 330, 332], "freeli": [36, 324, 328, 330, 332], "exchang": [36, 156, 327, 328, 330, 334], "likewis": [36, 323, 325], "incept": 36, "henc": 36, "pt": 37, "logtalk_compil": [38, 68, 248, 273, 278, 280, 281, 283, 284, 320, 326, 332], "ndash": 38, "lgt2xml": 38, "escap": [38, 51], "safari": 38, "opera": 38, "write_canon": 38, "buggi": [38, 44, 84, 98, 320], "despit": [38, 111, 326, 330], "file1": [39, 280, 315, 332], "file2": [39, 280, 315, 332], "reload": [39, 42, 43, 283, 284, 322], "ancestor": [41, 108, 123, 152, 190, 201, 236, 314, 316, 323, 325, 327, 330], "superclass": [41, 282, 290, 316, 323, 327, 328], "anywher": [41, 327], "compos": [41, 314], "world": [41, 46, 69, 108, 112, 117, 118, 325, 327, 330, 332], "assumpt": [41, 108, 117, 118, 171, 325, 327, 330, 332], "undeclar": 41, "coinduct": [41, 42, 43, 108, 109, 138, 148, 161, 162, 176, 203, 227, 329, 332], "greatest": 41, "infinit": [41, 176, 225, 320, 327], "ration": 41, "\u03c9": 41, "contigu": [41, 330], "late": 41, "retract": [41, 42, 43, 127, 155, 163, 167, 168, 174, 183, 203, 229, 309, 314, 322, 332], "earli": [41, 319], "hide": [41, 321, 326, 330, 332], "promot": 41, "isol": [41, 321], "client": [41, 90, 152, 316, 323, 330, 335], "namespac": [41, 315, 321, 327, 328, 331, 333], "meaning": [41, 44, 96, 158, 160, 314, 330], "tupl": [41, 96, 312, 315, 319, 327], "sentenc": [41, 140, 317, 330], "infix": [41, 56, 311, 330], "homoicon": [41, 316], "ident": 41, "enumer": [41, 42, 43, 162, 174, 180, 181, 217, 247, 249, 250, 256, 257, 258, 259, 260, 267, 268, 269, 271, 272, 273, 274, 287, 288, 290, 294, 315, 317, 319, 332, 334], "relocat": [41, 278], "behav": [41, 155, 211, 309, 330, 332], "invis": [41, 330], "proof": [41, 144, 311, 327, 328, 330], "character": 41, "monitor": [41, 42, 43, 57, 122, 164, 170, 242, 243, 254, 257, 260, 261, 288, 310, 320, 321, 322, 328, 330], "notifi": [41, 319], "spi": [41, 312, 319, 321], "primari": [41, 145, 326, 330], "highlight": [41, 324], "role": [41, 316, 318, 319, 323, 326, 327, 328, 330], "_parametername_": [41, 328], "star": 41, "irrespect": [41, 319, 321], "proxi": [41, 109, 111, 112, 117, 199], "polymorph": 41, "subtyp": 41, "dispatch": [41, 327], "hoc": [41, 326], "visibl": [41, 75, 180, 181, 217, 317, 326, 327, 330, 335], "reduc": [41, 323], "hard": [41, 171, 237], "scratch": [41, 85, 278, 324, 332], "behalf": [41, 230, 237, 330], "intermix": [41, 326], "subclass": [41, 253, 290, 316, 317, 327, 328], "overridden": [41, 314, 317, 320, 327, 330], "synchron": [41, 42, 43, 61, 62, 87, 127, 138, 148, 156, 161, 251, 253, 254, 291, 292, 304, 306, 321, 322, 327], "mutex": [41, 155, 327, 330, 335], "lazili": [41, 335], "concurr": [41, 156, 278], "queue": [41, 42, 43, 71, 156, 160, 291, 292, 295, 297, 300, 302, 303, 304, 306, 330, 332, 335], "high": [42, 43, 251, 253, 254, 317, 322, 332, 335], "smooth": [42, 43, 322], "curv": [42, 43, 322], "nomenclatur": [42, 43, 322, 325], "python": [42, 43, 322], "broadcast": [42, 43, 322, 330], "relationship": [42, 43, 313, 321, 322], "composit": [42, 43, 314, 321, 322, 332], "versu": [42, 43, 147, 322, 330], "concern": [42, 43, 284, 316, 322], "asynchron": [42, 43, 156, 292, 293, 303, 304, 306, 307, 321, 322], "notif": [42, 43, 156, 305, 308, 322], "rais": [42, 43, 315, 322], "style": [42, 43, 161, 317, 322, 330, 331], "simplif": [42, 43, 322], "hardwar": [42, 43, 322], "tutori": [42, 43, 324], "credit": [42, 43, 71, 324], "shrinker": [42, 43, 71], "assignvar": [42, 43, 71], "decod": [42, 43, 71, 178, 318], "coroutin": [42, 43, 55, 71, 104], "cbor": [42, 43, 71], "csv": [42, 43, 71], "dif": [42, 43, 50, 71], "edcg": [42, 43, 71, 320], "introduct": [42, 43, 71, 321], "accumul": [42, 43, 71, 160], "expand_library_alias_path": [42, 43, 71], "gensym": [42, 43, 71], "genint": [42, 43, 71], "hook_flow": [42, 43, 68, 71, 320, 326], "callback": [42, 43, 71, 327], "interv": [42, 43, 71, 318, 335], "json": [42, 43, 71, 81], "mutat": [42, 43, 44, 71], "nested_dictionari": [42, 43, 71], "curli": [42, 43, 48, 71, 74], "recorded_databas": [42, 43, 71], "redi": [42, 43, 71], "term_io": [42, 43, 71], "tsv": [42, 43, 71], "unicode_data": [42, 43, 71, 85], "acknowledg": [42, 43, 71, 324], "ulid": [42, 43, 70, 71, 100], "union_find": [42, 43, 71], "uuid": [42, 43, 70, 71, 97, 278], "zipper": [42, 43, 71], "fcube": [42, 103], "metagol": [42, 103], "toychr": [42, 103], "glossari": [42, 43, 324, 327], "bibliographi": [42, 43, 104, 324], "816": 44, "var": [44, 144, 161, 204, 241, 330, 331], "instantiation_error": [44, 108, 109, 111, 112, 117, 118, 153, 163, 167, 168, 169, 171, 172, 173, 174, 177, 185, 187, 188, 190, 196, 197, 198, 202, 203, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 229, 232, 234, 235, 238, 240, 241, 242, 244, 245, 251, 252, 253, 254, 261, 276, 277, 280, 281, 289, 291, 292, 293, 295, 296, 298, 299, 300, 303, 304, 306, 307, 317, 330], "type_error": [44, 96, 108, 109, 111, 112, 117, 118, 153, 163, 167, 168, 169, 171, 172, 173, 174, 177, 180, 181, 185, 187, 188, 190, 196, 197, 198, 202, 203, 204, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 229, 232, 234, 235, 238, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 267, 268, 269, 271, 272, 274, 276, 277, 280, 281, 287, 288, 289, 290, 291, 292, 295, 303, 304, 306, 307, 317, 318, 330], "arbitrary0": 44, "sort": [44, 97, 99, 232, 317, 326, 328, 330, 331, 332], "sorted_integer_list": 44, "shrink_sequ": 44, "edge_cas": 44, "resort": [44, 309], "excess": 44, "binary_tre": 44, "newdepth": 44, "types_frequ": 44, "frequenc": 44, "ie": [44, 70], "907": 44, "522": 44, "509": 44, "83": [44, 46], "453": 44, "454": 44, "197": 44, "875": 44, "866": 44, "254": 44, "133": 44, "831": 44, "test_fil": [44, 51, 95], "rise": [44, 98, 330], "5788130906607927": 44, "get_se": [44, 80, 87], "set_se": [44, 80, 87], "113": 44, "446": 44, "max_siz": 44, "char_cod": 44, "unicod": [44, 74, 85, 96, 98, 130, 332], "codepoint": 44, "inher": [44, 318, 329], "problemat": [44, 326, 327, 330, 332], "assignvarsp": 45, "nobukuni": 45, "kino": 45, "nd_assignvar": 45, "20160818050049": 45, "kprolog": 45, "en": [45, 69, 99, 100], "logical_assign": 45, "base64url": 46, "rfc": [46, 48, 51, 74], "rfc4648": 46, "atom_cod": [46, 326], "hello": [46, 48, 69, 74, 112], "sgvsbg8gd29ybgqh": 46, "72": [46, 97], "101": [46, 48, 74, 100], "108": [46, 48, 74], "32": [46, 130, 328], "119": 46, "114": 46, "33": 46, "71": [46, 328], "115": 46, "56": [46, 100], "103": [46, 70, 328], "57": [46, 97, 100], "121": 46, "81": [46, 70], "104": [46, 48, 74], "safe": [46, 93], "ahr0chm6ly9sb2d0ywxrlm9yzw": 46, "comparingp": [47, 91], "termp": [47, 269], "listp": [47, 85, 146, 151, 245, 250, 269, 271, 276, 280, 311, 333], "concis": 48, "rfc8949": 48, "unbound": [48, 56, 243, 261, 314, 318, 319, 327, 328, 330, 333], "map": [48, 54, 78, 90, 317, 321, 327, 330], "bracket": [48, 74, 81, 309], "arrai": [48, 54, 74], "0x65": 48, "0x68": 48, "0x6c": 48, "0x6f": 48, "undefin": [48, 188, 327, 330, 332], "infin": 48, "negative_infin": 48, "not_a_numb": 48, "negative_zero": 48, "0x9f": 48, "0x61": 48, "0xbf": 48, "0x62": 48, "0x63": 48, "0xff": 48, "indefinit": 48, "decim": 48, "fraction": 48, "big": [48, 95], "partial": [50, 317, 318, 326, 327, 329], "frozen": 50, "adjust": 50, "freez": 50, "rfc4180": 51, "field": [51, 73, 95], "doubl": [51, 161, 171, 327, 330], "quot": [51, 69, 161, 315, 320, 327], "cv": 51, "guess": 51, "row": [51, 95], "read_fil": [51, 95], "read_file_by_lin": [51, 95], "destin": [51, 95], "ignorequot": 51, "semicolon": 51, "colon": [51, 74], "surround": [51, 330], "guess_separ": 51, "crlf_end": 51, "aaa": 51, "bb": 51, "ccc": [51, 314], "bbb": 51, "zzz": 51, "yyi": 51, "xxx": 51, "retractal": [51, 95, 158, 163, 167, 168, 174, 183, 203, 228, 309, 314, 330], "write_fil": [51, 95], "guess_ar": 51, "observ": [53, 319, 321, 334], "subject": [53, 89, 128, 136, 190, 326, 332], "wide": [53, 60, 317, 324, 330, 332], "avl": 54, "red": [54, 91], "bintre": 54, "avltre": 54, "rbtree": [54, 56], "insert": [54, 56, 81, 160], "dictionary0": 54, "dictionary1": 54, "dictionary2": 54, "assoc": 54, "keef": [54, 65, 85, 91, 98, 331], "dama": 54, "glenn": 54, "burgess": 54, "jiri": 54, "spitz": 54, "vitor": 54, "santo": 54, "peter": 56, "van": 56, "roi": 56, "dcg": [56, 64, 330], "ucl": 56, "ac": [56, 85], "pvr": 56, "michael": 56, "hendrick": 56, "mndrix": 56, "hidden": [56, 323, 329], "riski": 56, "ludemann": 56, "here": [56, 161, 253, 311, 326, 327, 330, 331, 332, 335], "acc_info": [56, 320], "adder": 56, "pred_info": [56, 320], "len": 56, "arbitrarili": 56, "demonstr": 56, "synopsi": 56, "tedium": 56, "ordset": 56, "neck": 56, "acc": [56, 311, 335], "chain": [56, 323], "radic": 56, "becaus": [56, 309, 314, 315, 319, 330, 332], "joiner": 56, "lstart": 56, "rstart": 56, "suffici": [56, 108, 117, 215, 216, 314, 328, 330, 335], "along": [56, 313, 317, 323, 330], "correctli": [56, 326, 330], "though": 56, "revers": [56, 85], "conceptu": 56, "pass_info": [56, 320], "pstart": 56, "situat": [56, 309, 319, 323], "ucb": 56, "csd": 56, "583": 56, "wikipedia": [56, 99, 100], "event_registri": 57, "before_event_registri": 57, "after_event_registri": 57, "sophist": [57, 314, 315, 318, 319, 320, 323, 327, 333], "thew": 58, "constructor": [59, 82, 167, 168, 327], "of_expect": 59, "or_els": [59, 82], "of_unexpect": 59, "focu": [60, 316], "suspicious_cal": [60, 153, 279, 332], "sought": 60, "double_quot": [60, 128, 136, 327], "nativ": [60, 75, 87, 320, 327, 329], "race": [61, 62, 251, 253, 254], "genint_cor": 61, "gensym_cor": 62, "commit_log": 63, "onelin": 63, "pretti": [63, 317], "pmoura": [63, 278], "nl": [63, 107, 112, 147, 164, 170, 201, 207, 208, 220, 230, 231, 237, 294, 312, 314, 319, 320, 323, 330, 331], "eccaa1a2a": 63, "nupdat": 63, "scm": 63, "commit_author": 63, "commit_hash": 63, "eccaa1a2a9495fef441915bbace84e0a4b0394a2": 63, "aka": [64, 327], "blank_grammar": 64, "number_grammar": 64, "sequence_grammar": 64, "ip": 64, "ip_grammar": 64, "white_spac": 64, "new_lin": 64, "minimum": [65, 99, 319, 330], "richard": [65, 85, 91, 98, 104, 331], "hook_set": [67, 320, 326], "hookobject": 67, "coincid": [67, 320, 326], "backend_adapter_hook": [68, 320], "default_workflow_hook": 68, "identity_hook": [68, 320], "grammar_rules_hook": 68, "prolog_module_hook": [68, 320], "current_object": [68, 190, 244, 250, 253, 264, 268, 271, 273, 274, 287, 290, 328, 333], "world_1": 68, "some_protocol": 68, "implements_protocol": [68, 161, 245, 250, 254, 260, 263, 269, 273, 282, 288, 314, 328, 333], "some_categori": 68, "imports_categori": [68, 161, 242, 247, 249, 251, 256, 263, 267, 273, 282, 314, 328], "write_to_stream_hook": [68, 320], "write_to_file_hook": 68, "print_goal_hook": [68, 315], "quux": [68, 181, 217], "suppress_goal_hook": 68, "nice": 69, "indent": [69, 315, 330, 332], "li": 69, "void": [69, 73], "hr": 69, "html5": 69, "lang": 69, "bye": 69, "doctyp": 69, "xhtml11": 69, "ul": 69, "programmat": [69, 317, 330], "strong": [69, 321, 324], "span": [69, 99, 335], "html5custom": 69, "normal_el": 69, "160": 70, "dev": [70, 97, 100], "urandom": [70, 97, 100], "2gpmzqafxbo5myfipx1qmkhxgg": 70, "240": 70, "30": 70, "jyclsqo8zgucof1znpfdrvj03ww5qa9e0fxrb": 70, "55": [70, 97, 100], "79": 70, "77": 70, "65": [70, 97], "74": [70, 97, 328], "intervalp": 72, "tempor": 72, "jame": 72, "allen": 72, "algebra": 72, "primarili": 73, "jni": 73, "jpl": 73, "javadoc": 73, "returnvalu": 73, "latter": [73, 137, 331, 335], "java_hook": 73, "document_convert": 73, "neo4j": 73, "awt": 73, "orthogon": [73, 323], "rfc8259": 74, "ecma": 74, "404": 74, "34": 74, "2345": 74, "2147483647": 74, "1234567890123456789": 74, "2147483648": 74, "225073858507201e": 74, "308": 74, "2250738585072014e": 74, "7976931348623157e": 74, "4294967295": 74, "0e": 74, "324": 74, "9223372036854775807": 74, "91": 74, "123": [74, 80, 210], "58": 74, "roundtrip_array_obj_arrai": 74, "payload": 74, "parse_simple_valid_fil": 74, "roundtrip_hexadecim": 74, "data_stor": 75, "bare": 75, "bone": 75, "portray_claus": 75, "create_categori": [75, 126, 137, 242, 247, 255, 256, 273, 314, 320], "datum": 75, "k42": 75, "imper": [77, 316, 327, 330], "fold_left": [78, 160, 330], "metapred": 78, "complier": 79, "metapredicates_compil": 79, "advanc": [80, 321, 326, 329], "mutations_stor": 80, "fuzz": 80, "1293": 80, "5123": 80, "chose": [80, 321], "nest": [81, 136, 315, 327], "nbintre": 81, "navltre": 81, "nrbtree": 81, "as_nested_dictionari": 81, "lookup_in": 81, "as_curly_bracket": 81, "interchang": [81, 325, 327], "conjunct": [81, 109, 112, 117, 210, 291, 302, 329, 330, 335], "hybrid": 82, "absenc": 82, "mayb": [82, 324], "valid_opt": 83, "trim": 83, "leftmost": 83, "fix_opt": 83, "useropt": 83, "check_opt": [83, 317], "merge_opt": 83, "os_typ": 84, "inconsist": [84, 87, 320], "parallel_logtalk_processes_setup": [85, 332], "edinburgh": 85, "craft": [85, 330], "otago": 85, "nz": 85, "staffpriv": 85, "ok": 85, "pllib": 85, "htm": 85, "front": 86, "join": 86, "join_al": 86, "jump": [86, 315], "jump_al": 86, "queue0": 86, "queue1": 86, "serv": 86, "my_random_generator_1": 87, "reset_se": 87, "cancel": [87, 293, 335], "dozen": 87, "stateless": 87, "loos": [88, 315], "readutil": 88, "legaci": [89, 136, 317, 326, 330], "surviv": 89, "recorded_database_cor": 89, "recorda": 89, "overflow": 89, "localhost": 90, "6379": 90, "redis_host": 90, "redis_port": 90, "sean": 90, "charl": 90, "emacsthevik": 90, "gnuprolog": 90, "rediscli": 90, "etc": [90, 317], "as_set": 91, "set1": 91, "set2": 91, "intersect": 91, "symdiff": 91, "rainbow_color": 91, "orang": 91, "green": [91, 320, 328], "blue": [91, 317, 320, 328, 330], "indigo": 91, "violet": 91, "color1": 91, "color2": 91, "n1": [91, 112, 335], "n2": [91, 112, 335], "popul": [92, 326], "iana": [95, 130], "media": 95, "tv": 95, "ag": [95, 96, 165, 253], "paul": 95, "1115": 95, "franklin": 95, "bessi": 95, "cow": 95, "farm": 95, "zeke": 95, "st": 95, "charset": 96, "positive_integ": 96, "non_negative_integ": [96, 161], "150": 96, "meta_typ": 96, "type1": 96, "type2": 96, "type3": 96, "my_typ": 96, "lexicograph": 97, "sortabl": 97, "stamp": [97, 100], "granular": [97, 100], "millisecond": [97, 100], "monoton": 97, "guarante": 97, "01h0j31syqxhjzwprakhq6yvyh": 97, "51": [97, 100], "54": [97, 100], "67": [97, 318], "82": 97, "timestamp": [97, 104, 332], "unix": 97, "epoch": 97, "00": 97, "utc": [97, 159], "1970": 97, "time_stamp": 97, "1684245175344": 97, "01h0jdbq1gawjf35c44y5s97dx": 97, "discret": 97, "2023": 97, "17": [97, 104, 329], "16": [97, 130], "591": 97, "01h0n8cdazk75c5h3bjsgs4vcq": 97, "month": [97, 141, 317], "dai": [97, 134, 141, 317], "hour": 97, "minut": [97, 324], "01bx5zikbkaltav9oevgemmvri": 97, "uncaught": [97, 311], "vivomind": 98, "arun": 98, "majumdar": 98, "llc": 98, "creativ": 98, "cc0": 98, "creativecommon": 98, "publicdomain": 98, "At": [98, 315, 321, 331, 332], "submit": 98, "ucd": 98, "obviou": 98, "hexadecim": 98, "flaw": [98, 326], "unicode_": 98, "camel": [98, 332], "spell": 98, "mostli": [98, 331], "logtak_load": 98, "tr44": 98, "directory_structur": 98, "property_definit": 98, "unicode_math": 98, "unicode_alphabet": 98, "unicode_range_alphabet": 98, "unicode_lowercas": 98, "unicode_uppercas": 98, "unicode_cas": 98, "unicode_case_ignor": 98, "unicode_changes_when_lowercas": 98, "unicode_changes_when_uppercas": 98, "unicode_changes_when_titlecas": 98, "unicode_changes_when_casefold": 98, "unicode_changes_when_casemap": 98, "unicode_id_start": 98, "unicode_id_continu": 98, "unicode_xid_start": 98, "unicode_xid_continu": 98, "unicode_default_ignor": 98, "unicode_grapheme_extend": 98, "unicode_grapheme_bas": 98, "unicode_grapheme_link": 98, "unicode_canon": 98, "unicode_compat": 98, "unicode_font": 98, "unicode_nobreak": 98, "unicode_initi": 98, "unicode_medi": 98, "unicode_fin": 98, "unicode_isol": 98, "unicode_circl": 98, "unicode_sup": 98, "unicode_sub": 98, "unicode_vert": 98, "unicode_wid": 98, "unicode_narrow": 98, "unicode_smal": 98, "unicode_squar": 98, "unicode_fract": 98, "unicode_ag": 98, "unicode_bidi_class": 98, "unicode_combining_class": 98, "unicode_east_asian_width": 98, "unicode_joining_group": 98, "unicode_joining_typ": 98, "unicode_line_break": 98, "unicode_fc_nfkc": 98, "unicode_nfkc_cf": 98, "unicode_full_composition_exclus": 98, "unicode_nfd_qc_no": 98, "unicode_nfc_qc_no": 98, "unicode_nfc_qc_mayb": 98, "unicode_nfkd_qc_no": 98, "unicode_nfkc_qc_no": 98, "unicode_nfkc_qc_mayb": 98, "unicode_expands_on_nfd": 98, "unicode_expands_on_nfc": 98, "unicode_expands_on_nfkd": 98, "unicode_expands_on_nfkc": 98, "unicode_changes_when_nfkc_casefold": 98, "unicode_numeric_typ": 98, "unicode_numerical_valu": 98, "unicode_name_alia": 98, "unicode_white_spac": 98, "unicode_bidi_control": 98, "unicode_join_control": 98, "unicode_dash": 98, "unicode_hyphen": 98, "unicode_quotation_mark": 98, "unicode_terminal_punctu": 98, "unicode_other_math": 98, "unicode_hex_digit": 98, "unicode_ascii_hex_digit": 98, "unicode_other_alphabet": 98, "unicode_ideograph": 98, "unicode_diacrit": 98, "unicode_extend": 98, "unicode_other_lowercas": 98, "unicode_other_uppercas": 98, "unicode_noncharacter_code_point": 98, "unicode_other_grapheme_extend": 98, "unicode_ids_binary_oper": 98, "unicode_ids_trinary_oper": 98, "unicode_rad": 98, "unicode_unified_ideograph": 98, "unicode_other_default_ignor": 98, "unicode_deprec": 98, "unicode_soft_dot": 98, "unicode_logical_order_except": 98, "unicode_other_id_start": 98, "unicode_other_id_continu": 98, "unicode_sterm": 98, "unicode_variation_selector": 98, "unicode_pattern_white_spac": 98, "unicode_pattern_syntax": 98, "unicode_script_categori": 98, "union": [99, 330], "track": [99, 319, 329], "partit": [99, 327, 328, 331], "disjoint": 99, "overlap": 99, "fast": 99, "flatten": [99, 291, 329], "rank": 99, "attach": 99, "taller": 99, "unless": [99, 277, 281, 326, 330, 332], "height": [99, 118], "set_data_structur": 99, "kruskal": 99, "forest": 99, "arc": 99, "vertic": 99, "unionfind": 99, "keysort": 99, "unionfind0": 99, "vertex1": 99, "vertex2": 99, "root1": 99, "unionfind1": 99, "root2": 99, "unionfind2": 99, "unionfind3": 99, "universally_unique_identifi": 100, "low": [100, 315, 328, 329, 332, 335], "nanosecond": 100, "compens": 100, "uuid_v1": 100, "0xf2": 100, "0xd1": 100, "0x90": 100, "0x94": 100, "0xdc": 100, "0x4b": 100, "00a66fc0": 100, "82cf": 100, "11eb": 100, "bc83": 100, "f2d19094dc4b": 100, "102": 100, "uuid_v4": 100, "1c652782": 100, "69c5": 100, "4252": 100, "88c8": 100, "09e576a44db5": 100, "53": 100, "uuid_nul": 100, "00000000": 100, "0000": 100, "000000000000": 100, "prover": 102, "intuitionist": 102, "proposit": 102, "vidal": 102, "rosset": 102, "1007": 102, "978": 102, "642": 102, "16242": 102, "8_21": 102, "ferrari": 102, "mauro": 102, "fiorentini": 102, "camillo": 102, "fiorino": 102, "guido": 102, "ferm": 102, "ller": 102, "christian": 102, "voronkov": 102, "andrei": 102, "berlin": 102, "heidelberg": 102, "294": 102, "301": 102, "isbn": 102, "induct": 104, "ilp": 104, "dataset": 104, "simultan": [104, 335], "mystikninja": 104, "dblp": 104, "jair": 104, "evansg18": 104, "evan": 104, "edward": 104, "grefenstett": 104, "explanatori": 104, "noisi": 104, "artif": 104, "intel": 104, "2018": [104, 331], "1613": 104, "5714": 104, "mon": 104, "2019": 104, "01": 104, "0100": 104, "biburl": 104, "rec": 104, "bib": [104, 324], "bibsourc": 104, "arxiv": 104, "1711": 104, "04574": 104, "lengthi": [104, 284, 321, 332, 335], "chr": 105, "comp": 105, "nu": 105, "sg": 105, "gregori": 105, "toychrdb": 105, "chr_compil": 105, "zero_or_mor": [107, 108, 109, 111, 112, 117, 118, 161, 164, 169, 170, 171, 172, 173, 174, 180, 181, 199, 207, 208, 214, 215, 216, 217, 223, 228, 232, 247, 249, 250, 256, 257, 258, 259, 260, 267, 268, 269, 271, 272, 274, 278, 282, 285, 287, 288, 290, 294, 303, 309, 311, 330], "existence_error": [107, 108, 109, 111, 117, 118, 163, 169, 173, 174, 177, 185, 187, 188, 196, 197, 203, 204, 213, 226, 227, 228, 229, 232, 234, 235, 238, 240, 241, 242, 244, 245, 261, 276, 277, 280, 281, 296, 298, 299, 300, 303, 307, 311, 330], "predicate_declar": [107, 108, 111, 117, 118, 163, 167, 168, 174, 190, 213, 228, 229, 311, 330], "make_sound": [107, 314], "sound": [107, 314, 320], "strategi": [108, 117, 118, 323], "subsequ": [108, 117, 118, 298, 320, 321], "proce": [108, 235, 305, 335], "permission_error": [108, 109, 111, 117, 118, 153, 163, 167, 168, 173, 174, 177, 185, 187, 188, 190, 203, 204, 226, 227, 228, 229, 234, 235, 238, 240, 241, 242, 244, 245, 251, 252, 253, 254, 277, 281, 289, 295, 318, 330], "private_pred": [108, 111, 117, 118, 163, 167, 168, 174, 213, 228, 229, 318], "init": [108, 141, 149, 150, 323, 328, 330, 332], "deni": [109, 326, 329, 332], "deploi": [109, 329], "thrown": [109, 117, 173, 235, 285, 314, 315, 318, 325, 328, 333], "object_identifi": [109, 111, 117, 142, 143, 146, 160, 161, 164, 170, 230, 231, 237, 243, 244, 249, 250, 253, 257, 259, 261, 268, 271, 272, 274, 279, 287, 290], "proxyfunctor": 109, "proxyar": 109, "overload": [111, 112], "tradition": 111, "emphas": [111, 328], "protected_pred": [111, 117, 163, 167, 168, 174, 213, 228, 229], "d1": 112, "d2": 112, "call_in_us": 112, "load_foreign_resourc": 112, "radiu": 112, "width": [118, 330, 332], "appropri": [120, 332], "entity_identifi": [120, 161, 282], "predicate_indicator_alia": [120, 161], "non_terminal_indicator_alia": [120, 161], "list_memb": [120, 330], "set_memb": [120, 330], "singular": [120, 317], "peculiar": 120, "category_identifi": [122, 142, 143, 161, 242, 247, 249, 250, 251, 256, 267, 271, 272], "implemented_protocol": [122, 146, 161], "extended_categori": [122, 161], "complemented_object": [122, 161], "monitoringp": 122, "employe": [122, 249], "template1": 123, "cycl": 123, "disregard": [123, 330, 332], "coinductive_success_hook": [123, 175, 203], "hypothesi": [123, 176], "preced": [123, 147, 149, 150, 152, 158, 160, 314, 315, 319, 328, 333], "predicate_indicator_term": [123, 125, 149, 150, 152, 155, 161], "non_terminal_indicator_term": [123, 125, 149, 150, 152, 155], "coinductive_predicate_template_term": [123, 161], "comemb": [123, 176, 330], "ones_and_zero": 123, "predicate_properti": [123, 127, 136, 140, 142, 143, 144, 145, 149, 150, 152, 155, 161, 180, 181, 185, 203, 224, 323, 324, 330], "elif": [124, 129, 134, 136, 138, 161, 320, 332], "endif": [124, 128, 129, 136, 138, 161, 330, 332], "live": [125, 127], "db": [125, 127, 328], "create_object": [126, 137, 244, 255, 259, 273, 287, 320, 327, 328, 330], "create_protocol": [126, 137, 245, 255, 260, 273, 288, 320, 333], "protocol_properti": [126, 139, 161, 185, 245, 254, 260, 265, 273, 333], "category_properti": [126, 139, 161, 185, 242, 251, 256, 265, 273, 314], "qualified_predicate_indicator_term": [127, 145], "qualified_non_terminal_indicator_term": [127, 145], "iff": [128, 129, 136, 210, 291, 303, 307, 317], "succeed": [128, 136, 202, 315], "enclos": [128, 136], "abort": [128, 136, 315, 318], "bounded_arithmet": 129, "unbounded_arithmet": 129, "bom": 130, "mime": 130, "8859": 130, "uc": 130, "2le": 130, "2be": 130, "16le": 130, "16be": 130, "32le": 130, "32be": 130, "shift_ji": 130, "euc": 130, "jp": 130, "commonli": [130, 327, 330, 332], "encoding_direct": [130, 332], "todai": [134, 321], "25": 134, "happi": [134, 335], "towel": 134, "built_in": [135, 136, 138, 161, 247, 287, 288, 314, 324, 328, 330, 333], "end_protocol": [135, 138, 151, 161, 311, 333], "absent": 136, "condition": 136, "current_logtalk_flag": [136, 252, 270, 273, 289, 332], "prolog_dialect": [136, 332], "set_prolog_flag": [136, 332], "fragil": [137, 332], "recreat": [137, 332], "source_file_nam": [137, 161, 276, 277, 280, 281], "raw_1": 137, "factbas": 137, "countri": 137, "citi": [137, 326, 328], "geo": 137, "entity_info_list": [139, 161], "predicate_ind": [140, 161, 163, 181, 330], "predicate_info_list": [140, 161], "non_terminal_ind": [140, 161], "noun": [140, 330], "verb": [140, 317, 330], "Their": [141, 332], "start_dat": 141, "date_tim": 141, "meta_non_terminal_template_term": [142, 161], "module_identifi": [142, 143, 158, 161], "meta_predicate_template_term": [143, 161], "maplist": 143, "numberofproof": 144, "predicate_mode_term": [144, 161], "number_of_proof": [144, 161], "non_terminal_mode_term": [144, 161], "one_or_mor": [144, 161, 225, 330], "zero_or_on": [144, 161, 176, 186, 196, 197, 198, 201, 206, 210, 211, 212, 219, 220, 222, 230, 231, 236, 237, 276, 277, 279, 280, 281, 284, 291, 297, 298, 301, 302, 307, 330], "alon": [146, 253, 321, 328], "imported_categori": [146, 161], "extended_object": [146, 161], "instantiated_object": [146, 161], "specialized_object": [146, 161], "abstract_class": [146, 313, 328], "atom_or_atom_list": 147, "current_op": [147, 181, 203, 217, 224, 330], "operator_declar": [149, 150, 152], "reusabl": [150, 152, 320], "protocol_identifi": [151, 161, 245, 250, 254, 260, 269, 271, 288], "extended_protocol": [151, 161], "compoundp": 151, "queuep": 151, "leaf": 152, "nonvar": [153, 161, 165, 177, 185, 188, 190, 206, 207, 208, 213, 218, 219, 220, 222, 223, 227, 234, 236, 238, 240, 241, 279, 282, 289, 292, 293, 294, 295, 296, 298, 299, 300, 301, 303, 306, 307, 309, 330], "flag_valu": [153, 161, 185, 252, 277, 281, 289], "unknown_ent": [153, 289, 328, 332], "db_updat": [155, 335], "write_stream": 155, "read_stream": 155, "add_to_queu": 155, "remove_from_queu": 155, "repli": [156, 165, 222, 303, 307, 331, 335], "primit": [156, 251, 253, 254, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 319, 325, 329], "shorten": [157, 159, 314, 328], "module_alias_list": [157, 161], "_datamodule_": 157, "data_noise_handl": 157, "cleaner": 157, "xy": 157, "predicate_indicator_list": [158, 160, 161], "module_predicate_indicator_alias_list": 158, "predicate_template_alias_list": [158, 160], "non_terminal_indicator_list": [158, 160], "module_non_terminal_indicator_alias_list": 158, "operator_list": [158, 160, 161], "ugraph": 158, "transpose_ugraph": 158, "transpos": 158, "convert_graph": 158, "graph0": 158, "map_list_to_pair": 158, "length_pair": 158, "delai": [158, 212], "_optionsmodule_": 158, "object_alias_list": [159, 161], "_heaptype_": 159, "_optionsobject_": 159, "rnd": 159, "permut": 159, "as_heap": [159, 160], "predicate_indicator_alias_list": 160, "non_terminal_indicator_alias_list": 160, "btree": [160, 330], "new_btre": [160, 330], "new_queu": [160, 330], "btree_to_queu": 160, "foldl": [160, 330], "_heapobject_": 160, "as_list": 160, "insert_al": 160, "top_next": 160, "w3c": 161, "backu": 161, "naur": 161, "begin_object_direct": 161, "object_term": 161, "end_object_direct": 161, "object_rel": [161, 185, 253], "prototype_rel": 161, "non_prototype_rel": 161, "extends_object": [161, 244, 253, 259, 263, 273, 274, 282, 287, 290, 328], "instantiates_class": [161, 244, 253, 259, 263, 268, 273, 282, 287, 290, 328], "specializes_class": [161, 244, 253, 259, 263, 268, 273, 274, 282, 287, 328], "begin_category_direct": 161, "category_term": 161, "end_category_direct": 161, "category_rel": [161, 185, 251], "extends_categori": [161, 242, 247, 251, 256, 263, 273, 282, 314], "complements_object": [161, 242, 244, 247, 251, 253, 256, 259, 263, 267, 272, 273, 282, 287, 314, 328], "begin_protocol_direct": 161, "protocol_direct": [161, 185, 254], "end_protocol_direct": 161, "extends_protocol": [161, 245, 254, 260, 263, 273, 282, 288, 333], "implemented_protocol_sequ": 161, "implemented_protocol_list": 161, "extended_protocol_sequ": 161, "extended_protocol_list": 161, "imported_category_sequ": 161, "imported_category_list": 161, "extended_object_sequ": 161, "extended_object_list": 161, "extended_category_sequ": 161, "extended_category_list": 161, "instantiated_object_sequ": 161, "instantiated_object_list": 161, "specialized_object_sequ": 161, "specialized_object_list": 161, "complemented_object_sequ": 161, "complemented_object_list": 161, "source_file_cont": 161, "source_file_direct": 161, "grammar_rul": [161, 330, 332], "library_source_file_nam": 161, "library_nam": 161, "object_direct": [161, 185, 253], "category_direct": [161, 185, 251], "prolog_direct": 161, "conditional_compilation_direct": 161, "predicate_direct": 161, "alias_direct": 161, "synchronized_direct": 161, "uses_direct": 161, "use_module_direct": 161, "scope_direct": 161, "mode_direct": 161, "meta_predicate_direct": 161, "meta_non_terminal_direct": 161, "info_direct": 161, "dynamic_direct": 161, "discontiguous_direct": 161, "multifile_direct": 161, "coinductive_direct": 161, "operator_direct": 161, "alias_directive_resource_list": 161, "synchronized_directive_resource_term": 161, "parameter_vari": [161, 282], "uses_directive_resource_list": 161, "use_module_directive_resource_list": 161, "scope_directive_resource_term": 161, "qualified_directive_resource_term": 161, "_variable_": 161, "scope_directive_resourc": 161, "scope_directive_resource_sequ": 161, "scope_directive_resource_list": 161, "entity_resources_list": 161, "predicate_indicator_sequ": 161, "alias_directive_resource_sequ": 161, "alias_directive_resourc": 161, "synchronized_directive_resourc": 161, "synchronized_directive_resource_sequ": 161, "synchronized_directive_resource_list": 161, "uses_directive_resource_sequ": 161, "uses_directive_resourc": 161, "predicate_template_alia": 161, "use_module_directive_resource_sequ": 161, "use_module_directive_resourc": 161, "qualified_directive_resourc": 161, "qualified_directive_resource_sequ": 161, "qualified_directive_resource_list": 161, "operator_sequ": 161, "coinductive_predicate_templ": 161, "coinductive_predicate_template_sequ": 161, "coinductive_predicate_template_list": 161, "coinductive_mode_term": 161, "mode_term": 161, "prolog_typ": 161, "logtalk_typ": 161, "user_defined_typ": 161, "zero_or_error": [161, 330], "one_or_error": [161, 330], "zero_or_one_or_error": [161, 330], "zero_or_more_or_error": [161, 330], "one_or_more_or_error": [161, 330], "meta_predicate_templ": 161, "meta_predicate_template_sequ": 161, "meta_predicate_template_list": 161, "meta_predicate_specifi": 161, "entity_info_sequ": 161, "entity_info_item": 161, "see_also": [161, 317], "predicate_info_sequ": 161, "predicate_info_item": 161, "redefinit": [161, 185, 317, 330, 332], "alloc": [161, 185, 317], "object_alias_sequ": 161, "object_alia": 161, "module_alias_sequ": 161, "module_alia": 161, "message_send": 161, "super_cal": 161, "external_cal": 161, "message_to_object": 161, "message_deleg": 161, "message_to_self": 161, "lambda_express": 161, "lambda_free_vari": 161, "lambda_paramet": [161, 226], "predicate_declaration_property_list": 161, "predicate_definition_property_list": 161, "entity_alias_property_list": 161, "predicate_alias_property_list": 161, "predicate_call_update_property_list": 161, "number_of_claus": [161, 314, 328, 330], "number_of_rul": [161, 314, 328, 330], "number_of_user_claus": [161, 314, 328], "number_of_user_rul": [161, 314, 328], "dynamic_declar": [161, 167, 168, 253, 328, 332], "predicate_declaration_property_sequ": 161, "predicate_declaration_properti": 161, "non_termin": [161, 190, 213, 314, 328, 330, 333], "predicate_definition_property_sequ": 161, "predicate_definition_properti": 161, "entity_alias_property_sequ": 161, "entity_alias_properti": 161, "predicate_alias_property_sequ": 161, "predicate_alias_properti": 161, "predicate_call_update_property_sequ": 161, "predicate_call_update_properti": 161, "foreign": [161, 326, 329, 332], "declared_in": [161, 217, 330], "defined_in": [161, 330], "redefined_from": [161, 330], "alias_of": [161, 330], "alias_declared_in": [161, 330], "compiler_flag": [161, 185, 277, 281], "asserta": [163, 168, 174, 183, 203, 228, 229, 278, 330, 332], "static_pred": [163, 167, 168, 174, 213, 228, 229], "abolish_ev": [164, 170, 257, 261, 266, 273, 312, 319], "current_ev": [164, 170, 243, 261, 266, 273, 312, 319], "define_ev": [164, 170, 243, 257, 266, 273, 312, 319, 320], "question_prompt_stream": [165, 166, 203, 206, 207, 208, 218, 219, 220, 222, 331], "suppli": [165, 317], "enter_ag": 165, "ask_quest": [166, 203, 206, 207, 208, 218, 219, 220, 222, 223, 331], "attributes_protocol": [167, 168, 309], "attr_": [167, 168], "set_in_thi": [167, 168], "set_in_self": [167, 168], "_knowledgebase_": [167, 168], "bag": 169, "arg1": [171, 172, 176], "eo": [171, 184, 203, 330], "arg2": [172, 176], "catcher": [173, 235], "recoveri": 173, "uninstantiation_error": [173, 177, 185, 187, 188, 190, 203, 204, 213, 226, 227, 234, 235, 238, 240, 292, 306, 330], "consistency_error": [173, 185, 187, 188, 190, 203, 204, 213, 226, 227, 234, 235, 238, 240, 241], "evaluation_error": [173, 177, 185, 187, 190, 203, 204, 213, 226, 235, 238, 240, 241, 330], "representation_error": [173, 177, 178, 185, 187, 188, 190, 203, 204, 213, 227, 234, 235, 238, 240, 241, 330], "resource_error": [173, 177, 185, 187, 188, 190, 203, 204, 213, 226, 234, 235, 238, 240, 241, 330], "syntax_error": [173, 177, 185, 187, 188, 190, 203, 204, 213, 226, 227, 235, 238, 240, 241, 330], "system_error": [173, 177, 185, 187, 188, 190, 203, 204, 213, 226, 227, 234, 238, 240, 241, 330], "reach": [176, 191, 201, 315, 320], "argument1": [177, 317], "argument2": [177, 317], "same_ar": 177, "same_number_of_paramet": 177, "same_number_of_argu": 177, "same_closure_specif": 177, "executioncontext": [178, 318], "execution_context": [178, 315, 318], "offend": [178, 318], "acyclic_term": [178, 226], "ahead": [178, 330], "operator_prior": [180, 185], "operator_specifi": [180, 185], "current_pred": [180, 203, 217, 224, 323, 330], "not_less_than_zero": [181, 185], "pred": [181, 217], "outsid": [185, 311, 324, 326, 327], "character_code_list": 185, "close_opt": 185, "flag_opt": [185, 252], "prolog_flag": 185, "io_mod": [185, 330], "read_opt": 185, "source_sink": [185, 190, 213, 330], "stream_opt": 185, "stream_or_alia": [185, 207, 219, 220, 223], "stream_posit": 185, "stream_properti": 185, "write_opt": 185, "text_encod": 185, "protocol_rel": [185, 254], "meta_argument_specifi": 185, "meta_directive_templ": 185, "message_sending_go": 185, "float_overflow": 188, "int_overflow": 188, "underflow": 188, "zero_divisor": 188, "divisor": 188, "goal_thread": 190, "payrol": 190, "expandedgo": [191, 201], "expand_term": [191, 193, 201, 203, 236, 320, 330], "expand_go": [192, 193, 201, 203, 236, 320, 330], "object1": [198, 314], "object2": [198, 314], "real": [199, 335], "write_term": [201, 315, 331], "user_output": 207, "redefining_ent": [208, 218, 331], "Not": [210, 327], "provabl": 210, "backtrac": [211, 317], "greater": [212, 315], "out_of_rang": 212, "_color": [212, 330], "_weight": 212, "heavi": [212, 318, 330, 332], "_color_": [212, 328, 330], "_weight_": 212, "reposit": 213, "dynamic_pred": 213, "static_object": [213, 244], "static_protocol": [213, 245], "static_categori": [213, 242], "entity_rel": [213, 251, 253, 254, 282], "binary_stream": 213, "text_stream": 213, "past_end_of_stream": 213, "writabl": 213, "grammarrulebodi": [214, 215, 216], "elimin": [215, 216, 326], "nontermin": [215, 216, 314, 328, 330, 333], "rest": [216, 321], "pred_prop": 217, "prop": 217, "banner": [218, 331, 332], "flush": [219, 331], "_stream": 219, "_prefix": 219, "upper_limit": 222, "user_input": [223, 331], "exceed": 226, "exce": 226, "character_cod": 226, "in_character_cod": 226, "max_ar": 226, "max_integ": 226, "min_integ": 226, "entity_prefix": [226, 282], "disk": [227, 276, 277, 280, 281, 332], "space": [227, 274, 314, 328, 331, 332], "soft_cut_support": 227, "text_encoding_support": 227, "tank": 227, "ga": 227, "gplv3": 236, "millimet": 236, "meter": 236, "1000": [236, 330], "incorrect": [240, 319], "uninstanti": [241, 317], "my_stream": 241, "current_categori": [242, 247, 249, 250, 251, 264, 267, 271, 272, 273, 314, 333], "current_protocol": [245, 250, 254, 264, 269, 271, 273, 288, 333], "conforms_to_protocol": [245, 254, 260, 263, 269, 271, 273, 288, 314, 328], "abolish_categori": [246, 247, 251, 256, 273, 314, 333], "abolish_object": [246, 253, 259, 273, 287, 327, 328], "abolish_protocol": [246, 254, 260, 273, 288, 333], "transit": [250, 271], "serial": [250, 271], "opt": [251, 253, 254, 309], "recycl": [251, 253, 254], "1e": 251, "ab": 251, "create_prolog_flag": 252, "read_writ": 252, "read_onli": 252, "kept": [252, 324, 332], "pretty_print_blob": 252, "int": 253, "mickei": 253, "mous": 253, "mortim": 253, "p1": 253, "hovercraft": 253, "vehicl": [253, 328, 332], "propel": 253, "fan": 253, "runner": 253, "60": 253, "log_fil": 254, "log_on": 254, "log_off": 254, "create_logtalk_flag": [258, 270, 273, 289, 332], "threaded_engine_cr": [262, 273, 294, 296, 298, 299, 301, 302, 335], "threaded_engine_destroi": [262, 273, 294, 295, 301, 335], "threaded_engin": [262, 273, 295, 296, 301], "threaded_engine_self": [262, 273, 294, 295, 296], "threaded_engine_next": [262, 273, 295, 299, 302, 335], "threaded_engine_next_reifi": [262, 273, 295, 298, 302, 335], "threaded_engine_yield": [262, 273, 298, 299, 335], "threaded_engine_post": [262, 273, 297, 335], "threaded_engine_fetch": [262, 273, 300, 335], "parentcategori": [267, 282], "derailleur": 267, "state_spac": [268, 274, 290], "parentprotocol": [269, 282], "threaded_cal": [273, 286, 291, 293, 303, 304, 306, 307, 335], "threaded_onc": [273, 286, 291, 292, 293, 303, 304, 307, 335], "threaded_ignor": [273, 286, 291, 292, 293, 303, 306, 307, 335], "threaded_exit": [273, 286, 292, 293, 304, 306, 307, 335], "threaded_peek": [273, 286, 292, 303, 304, 306, 335], "threaded_cancel": [273, 286, 292, 303, 306, 307, 335], "threaded_wait": [273, 286, 305, 335], "threaded_notifi": [273, 286, 308, 335], "water_jug": 274, "instant": 274, "relative_to": [277, 281, 332], "file_system": [277, 281], "handi": [278, 331], "inadvert": 278, "endless": [278, 313, 319, 323, 331], "unpredict": 278, "my_application_root": 278, "viewpoint": [278, 332], "logtalk_hom": 278, "logtalk_us": 278, "l1": [279, 311], "l2": [279, 311], "entity_typ": 282, "term_posit": 282, "startlin": 282, "variable1": 282, "variable_nam": 282, "name1": [282, 330], "position1": 282, "objectorcategori": [282, 333], "expandedterm": 282, "variablenam": 282, "trio": 284, "prepar": 284, "mutual": 284, "triangular": 284, "worker_1": [294, 295, 296, 298, 299, 300, 301], "answertempl": 295, "destroi": [296, 321], "consum": [302, 330, 335], "suspend": [305, 308, 315, 335], "data_avail": [305, 308], "set_attribut": [309, 314], "get_attribut": 309, "del_attribut": [309, 314], "attribute_": [309, 314, 330], "unrel": [309, 314, 321], "furthermor": [309, 319, 321], "rememb": [309, 317], "put": [309, 311], "gender": 309, "male": 309, "tail2": 311, "acc2": 311, "saw": 311, "said": [311, 330, 332], "difflist": 311, "needless": 311, "refin": [312, 319, 327], "react": 312, "cpu_tim": 312, "stop_watch": 312, "87415": 312, "87419": 312, "danger": 313, "similarli": [313, 330], "dual": [314, 318, 321, 330], "particip": [314, 316, 321], "ins": [314, 324, 330], "_lgt": [314, 328, 333], "documenting_lgt": 314, "textual": [314, 328, 333], "protocol1": [314, 328, 333], "protocol2": [314, 328, 333], "category1": [314, 328], "category2": [314, 328], "ti": 314, "bird": [314, 323], "chirp": 314, "unfortun": 314, "ppp": [314, 333], "lot": [314, 328, 333], "hit": [314, 328, 333], "worker": [314, 335], "priori": 314, "speech": 314, "season": 314, "dress": 314, "decor": [315, 318], "paus": 315, "recompil": [315, 321, 326, 332], "leash": 315, "unleash": 315, "tight": 315, "debuggerp": 315, "nodebug": 315, "deselect": 315, "uncondit": 315, "nospi": 315, "invoc": 315, "planet": 315, "m1": 315, "modulo": 315, "41": [315, 331], "mar": 315, "stope": 315, "recognit": 315, "establish": [315, 319, 321, 335], "nospyal": 315, "halt": 315, "placehold": 315, "clause_numb": 315, "unification_count": 315, "invocation_numb": 315, "metacall_context": 315, "coinduction_stack": 315, "secret": 315, "headquart": 315, "nolog": 315, "nologal": 315, "_1082": 315, "_1104": 315, "morticia": 315, "correl": 315, "pend": 315, "_1078": 315, "_1100": 315, "notrac": 315, "amount": 315, "concentr": 315, "creep": 315, "spacebar": 315, "leap": 315, "quasi": 315, "retri": 315, "undon": 315, "zap": 315, "dollar": 315, "condens": 315, "commmand": 315, "max_depth": 315, "deepli": 315, "portrai": 315, "x1": 315, "x7": 315, "stress": 315, "defeat": 315, "seven": 315, "newlin": 315, "phase": [315, 321, 332], "arthur": 315, "ford": 315, "marvin": 315, "trace_ev": [315, 329], "debug_handl": [315, 329], "handil": 315, "thar": 315, "my_debug_handl": 315, "exctx": 315, "top_goal": 315, "tgoal": 315, "activate_debug_handl": 315, "deactivate_debug_handl": 315, "worri": [315, 330, 332, 335], "reinterpret": [316, 335], "destruct": [316, 327], "disciplin": [316, 327], "seen": 316, "contrast": [316, 326, 327, 332, 335], "forgo": [316, 328], "moot": 316, "enrich": 317, "key1": 317, "value1": 317, "key2": 317, "value2": 317, "overli": 317, "fails_if": 317, "ent": 317, "minor": [317, 332], "deem": 317, "unnecessari": [317, 323], "topic": [317, 332], "312": 317, "call_super_first": 317, "call_super_last": 317, "circumst": 317, "doubt": 317, "filenam": [317, 324], "trace_0": 317, "sort_1": [317, 328, 332], "sheet": 317, "logtalk_ent": 317, "xsd": 317, "jscript": 317, "customiz": 317, "ital": 317, "asterisk": 317, "bold": 317, "monospac": 317, "backquot": 317, "markup": 317, "temperatur": 318, "celsiu": 318, "fahrenheit": 318, "kelvin": 318, "scale": 318, "_unit": 318, "check_temperatur": 318, "273": 318, "459": 318, "defer": 318, "read_term": [318, 332], "complianc": [318, 332], "quirk": 318, "oder": 318, "probabl": [318, 323, 326, 328, 330, 332], "discontinu": 318, "intent": 318, "capac": 319, "intrins": 319, "reflex": [319, 328], "subscrib": 319, "misunderstand": 319, "indivis": 319, "enjoi": 319, "choos": [319, 326, 331, 335], "watch": 319, "moment": [319, 321], "notion": [319, 327], "largest": 319, "speak": 319, "unlimit": 319, "verif": 319, "wish": [319, 325, 330], "lead": [319, 326, 332, 335], "unrecover": 319, "impos": [319, 323], "higher": 319, "inflict": 320, "an_object": [320, 330], "ping": 320, "pong": 320, "fixed_point": 320, "h1": 320, "h2": 320, "s1": 320, "s2": 320, "_protocol_": 320, "decompose_file_nam": [320, 332], "my_car": 320, "lease_car": 320, "car_protocol": 320, "feed": 320, "my_expans": 320, "safer": 320, "expansions_debug": 320, "gemini": 320, "1200": 320, "castor": 320, "pollux": 320, "emit": 320, "unique_expand": 320, "ago": 321, "favorit": [321, 324], "motiv": 321, "frustrat": 321, "shortcom": [321, 327], "led": 321, "rudimentari": 321, "focus": 321, "bring": [321, 328], "distanc": 321, "easier": [321, 330], "perspect": [321, 330], "reactiv": 321, "pointcut": 321, "mixin": 321, "vein": 321, "predomin": 321, "belong": [321, 326], "tend": 321, "difficult": [321, 326], "modern": [321, 324, 329, 330, 332, 335], "spread": [321, 326], "treat": [321, 335], "bother": 321, "superset": [321, 327], "teach": 321, "research": 321, "background": [321, 327], "plenti": 321, "classroom": 321, "blackboard": 321, "highli": [321, 335], "reject": 323, "flightless": 323, "walk": 323, "fli": 323, "penguin": 323, "swim": 323, "debat": 323, "characterist": [323, 329], "attract": 323, "varieti": 323, "satisfactori": 323, "simplic": 323, "clo": 323, "adequ": 323, "carri": [323, 327], "substanti": 323, "rather": [323, 330], "configur": [324, 332], "broad": [324, 328], "vari": [324, 329, 330], "cope": 324, "favor": [324, 326], "bzip2": 324, "lgt3xxx": 324, "decompress": 324, "jxvf": 324, "sponsor": 324, "bibtex": 324, "cff": 324, "cite": 324, "code_of_conduct": 324, "conduct": 324, "forum": 324, "quick_start": 324, "release_not": 324, "brick": 324, "glue": 324, "academ": 324, "carefulli": 324, "borrow": 324, "unsur": 324, "subdirectori": 324, "fundament": [325, 327, 329, 330], "600": 325, "xfy": 325, "readabl": [325, 330, 332], "message1": 325, "message2": 325, "behind": 325, "mandat": 326, "clear": [326, 327, 330, 332], "opportun": 326, "easiest": 326, "unknown_pred": [326, 332], "district": 326, "neighbor": 326, "_name": 326, "_district": 326, "_popul": 326, "_neighbor": 326, "wider": 326, "overcom": 326, "reexport": [326, 327], "denot": [326, 328], "dealt": 326, "rightfulli": 326, "vendor": 326, "claim": 326, "missing_direct": [326, 332], "gain": 326, "prolog_load_context": 326, "suport": 326, "pristin": 326, "lgt_prolog_term_expans": 326, "brief": 326, "load_foreign_fil": 326, "initroutin": 326, "scatter": 326, "hint": 326, "cautiou": 327, "interoper": 327, "Being": 327, "mention": [327, 332], "counterpart": [327, 330], "statement": 327, "selector": 327, "pool": 327, "internet": 327, "destructor": 327, "friend": 327, "predat": 327, "redeclar": 327, "inner": 327, "heritag": 327, "closest": 327, "sole": [327, 330, 332], "mathemat": 327, "accordingli": 328, "think": 328, "whom": 328, "contrari": [328, 333], "vehicle_lgt": 328, "inevit": 328, "blown": 328, "recogniz": 328, "anonym": [328, 330, 332], "_bar_": 328, "_baz_": 328, "reorder": 328, "_bar": 328, "_baz": 328, "drawback": 328, "_id_": 328, "_radius_": 328, "39": [328, 332], "75291": 328, "43": 328, "2412": 328, "477836": 328, "508": 328, "217": 328, "468": 328, "assembl": [328, 331], "six": [328, 330], "instrument": [329, 332], "bookkeep": 329, "proport": 329, "footprint": 329, "slower": 329, "2x": 329, "7x": 329, "vm": 329, "bench": 329, "valid_init_opt": 330, "800": 330, "fx": 330, "idiom": 330, "flush_output": [330, 331], "sink": 330, "quantifi": 330, "subvert": 330, "harder": 330, "400": 330, "arity1": 330, "name2": 330, "arity2": 330, "pretty_print": 330, "result0": 330, "numberlist": 330, "predicate1": 330, "alias1": 330, "predicate2": 330, "alias2": 330, "connector": 330, "renam": 330, "my_data_structur": 330, "eiffel": 330, "preclud": 330, "mandatori": 330, "write_log_entri": [330, 335], "t2": 330, "classic": 330, "arg": 330, "exactli": 330, "call_al": 330, "definiton": 330, "map_": 330, "fresh": 330, "curri": 330, "268435455": 330, "268435454": 330, "268435453": 330, "110": 330, "268435452": 330, "matter": 330, "marku": 330, "triska": 330, "clp": 330, "fd": 330, "clpfd": [330, 332], "_g1369": 330, "_g1378": 330, "_g1579": 330, "_g1582": 330, "_g1591": 330, "_g1594": 330, "_g1789": 330, "_g1792": 330, "_g1795": 330, "_g1804": 330, "_g1807": 330, "_g1810": 330, "tricki": [330, 332, 335], "ocaml": 330, "Such": 330, "bad": 330, "lambda_vari": [330, 332], "filer": 330, "atom_length": 330, "length_atom": 330, "redefined_built_in": [330, 332], "msort": 330, "crate": 330, "wg17": 330, "expr": 330, "shown": 330, "noun_phras": 330, "verb_phras": 330, "unrestrict": 330, "restrit": 330, "untouch": 330, "clase": 330, "inspect": 330, "five": 330, "some_pred": 330, "eras": 330, "listofpair": 330, "current_non_termin": 330, "robust": 330, "divers": 330, "unavoid": 330, "narrow": 330, "atom_str": 330, "silenc": 330, "det_cal": 330, "lgt_prolog_meta_pred": 330, "control_construct": 330, "isn": 330, "puzzl": 330, "all_differ": 330, "ic": 330, "ambigu": 330, "sensit": 330, "augment": 330, "whichev": 330, "unambigu": 330, "downsid": 330, "run_propag": 330, "anticip": 331, "human": 331, "consol": 331, "pdt": 331, "uncontrol": 331, "disturb": 331, "spam": 331, "irrelev": [331, 332], "decoupl": 331, "dialog": 331, "dave": 331, "bowen": 331, "histor": 331, "variat": 331, "at_same_lin": 331, "ansi": 331, "noth": 331, "my_terse_logtalk_startup_set": 331, "default_flag": 331, "my_verbose_logtalk_message_set": 331, "tandem": 331, "hitchhikers_guide_to_the_galaxi": 331, "ultimate_quest": 331, "hitchhik": 331, "ultim": 331, "life": 331, "fourth": 331, "icecream": 331, "tea": 331, "someon": 331, "hitchhikers_fixed_answ": 331, "followup": 331, "principl": 332, "methodologi": 332, "menu": 332, "gplgt": 332, "eclipselgt": 332, "temporary_nam": 332, "lgtxxxxxx": 332, "file_exist": 332, "make_directori": 332, "interleav": 332, "source_file1": 332, "source_file2": 332, "fatal": 332, "unmatched_direct": 332, "ordinari": 332, "source1": 332, "source2": 332, "source3": 332, "underscore_vari": 332, "dont_car": 332, "source4": 332, "source5": 332, "mistak": 332, "lgtuser": 332, "logtalk_startup_directori": 332, "userprofil": 332, "appdata": 332, "config": 332, "xdg_config_hom": 332, "settings_fil": 332, "troubl": 332, "snippet": 332, "prolog_vers": 332, "prolog_compatible_vers": 332, "unsupport": 332, "plane": 332, "bmp": 332, "multilingu": 332, "version_data": 332, "bn": 332, "rcn": 332, "undefined_pred": 332, "duplicated_direct": 332, "trivial_goal_fail": 332, "always_true_or_false_go": 332, "arithmetic_express": 332, "redefined_oper": 332, "singleton_vari": 332, "addition": 332, "duplicated_claus": 332, "catchall_catch": 332, "left_recurs": 332, "tail_recurs": 332, "vale": 332, "prolog_compil": 332, "prolog_load": 332, "lgt_tmp": 332, "pictur": 332, "perhap": 332, "misspel": 332, "lai": 332, "listp_lgt": 333, "qqq": 333, "insight": 334, "prime": 335, "prime_numb": 335, "compet": 335, "converg": 335, "diverg": 335, "find_root": 335, "bisect": 335, "newton": 335, "muller": 335, "outweigh": 335, "_g189": 335, "mind": 335, "poll": 335, "hurt": 335, "misinterpret": 335, "birthdai": 335, "happy_birthdai": 335, "ever": 335, "job": 335, "corrupt": 335, "obj": 335, "odd_numb": 335, "even_numb": 335, "realist": 335, "sync_write_log_entri": 335, "lock": 335, "peer": 335, "deadlock": 335, "collect_al": 335, "collect_all_reifi": 335, "consumpt": 335, "pthread": 335, "exhibit": 335, "poor": 335, "collis": 335, "acquir": 335}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"bibliographi": 0, "flag": [1, 22, 161, 270, 332], "api": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 23, 24, 26, 27, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105], "document": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 26, 27, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 314, 317, 328, 330, 333], "load": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 25, 26, 27, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 248, 314, 320, 326, 328, 332, 333], "test": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 18, 19, 23, 24, 25, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105], "contribut": 2, "iso8601": 3, "pddl_parser": 4, "verdi_neruda": 5, "xml_parser": 6, "known": [6, 12, 15, 17, 19, 23, 24, 44, 73, 74, 79, 84, 89, 90, 94, 98], "issu": [6, 12, 15, 17, 19, 23, 24, 44, 73, 74, 79, 84, 89, 90, 94, 98], "asdf": 7, "assert": [8, 330], "ad": 8, "your": [8, 332], "sourc": [8, 18, 24, 25, 38, 39, 154, 161, 248, 315, 320, 324, 326, 329, 332], "code": [8, 9, 10, 18, 19, 24, 25, 34, 326, 329, 332], "automat": [8, 19, 329], "file": [8, 10, 13, 19, 20, 24, 38, 39, 68, 98, 154, 161, 248, 314, 315, 317, 320, 324, 326, 328, 332, 333], "line": 8, "context": [8, 110, 178, 179, 315, 320, 330], "inform": 8, "suppress": [8, 19, 68], "call": [8, 38, 68, 106, 110, 113, 119, 171, 172, 209, 314, 315, 318, 325, 326, 329, 330, 335], "from": [8, 9, 10, 325], "redirect": 8, "failur": 8, "messag": [8, 19, 34, 115, 116, 200, 221, 312, 315, 318, 325, 329, 331], "convert": [8, 326], "error": [8, 32, 38, 107, 108, 109, 111, 112, 117, 118, 153, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 267, 268, 269, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 318, 330, 332], "code_metr": 9, "avail": 9, "metric": 9, "coupl": 9, "halstead": 9, "upn": 9, "cyclomat": 9, "complex": 9, "usag": [9, 10, 11, 12, 15, 17, 19, 23, 26, 44, 50, 51, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 91, 95, 98, 99], "exclud": [9, 10], "analysi": [9, 10], "defin": [9, 19, 36, 44, 68, 96, 309, 311, 313, 314, 315, 319, 320, 328, 330, 332, 333], "new": [9, 44, 96, 255, 314, 319, 328, 333], "third": 9, "parti": 9, "tool": [9, 10, 12, 14, 16, 22], "appli": [9, 68], "prolog": [9, 10, 13, 20, 23, 24, 25, 28, 30, 33, 34, 35, 39, 68, 318, 320, 321, 324, 326, 327, 330, 332], "modul": [9, 10, 13, 20, 24, 28, 30, 34, 68, 161, 325, 326, 329, 330], "plain": [9, 10, 13, 20, 24, 34, 68, 326, 330], "dead_code_scann": 10, "integr": [10, 14, 32, 321, 326], "make": [10, 14, 21, 39, 335], "caveat": 10, "scan": 10, "debug_messag": 11, "debugg": [12, 315], "altern": 12, "diagram": [13, 317], "requir": [13, 15, 17, 18, 22, 23, 28, 98, 324], "maco": [13, 22], "macport": [13, 22], "homebrew": [13, 22], "ubuntu": [13, 22], "window": [13, 22], "chocolatei": [13, 22], "instal": [13, 22, 23, 32, 324], "support": [13, 15, 25, 36, 37, 321, 326, 335], "graph": 13, "element": [13, 69, 318], "languag": 13, "custom": [13, 27, 69, 315], "link": 13, "creat": [13, 19, 29, 255, 314, 328, 333], "applic": [13, 29, 33, 35, 36, 326, 332], "other": [13, 68, 85, 318, 329, 332], "note": [13, 85], "doclet": 14, "autom": [14, 19], "run": [14, 19, 28, 332], "help": [15, 19, 20, 21, 23], "oper": [15, 22, 35, 324, 325, 330], "system": [15, 22, 35, 313, 321, 324], "experiment": 15, "featur": [15, 321, 332], "develop": [16, 22, 23], "issue_cr": 17, "lgtdoc": 18, "gener": [18, 19, 24, 30, 34, 44, 69, 97, 100, 319, 325, 329], "linter": [18, 20, 275, 332], "check": [18, 19, 20, 96, 97, 318], "lgtunit": 19, "main": [19, 20, 321], "write": [19, 315, 332], "parametr": [19, 314, 321, 328], "object": [19, 28, 34, 68, 146, 161, 246, 255, 263, 264, 265, 309, 311, 314, 316, 320, 321, 325, 326, 328, 330, 335], "dialect": 19, "user": [19, 68, 320, 322, 328, 330, 332], "quickcheck": 19, "skip": 19, "select": [19, 315, 323], "goal": [19, 68, 161, 193, 318, 320, 335], "result": [19, 38, 68], "local": [19, 318, 323, 329], "predic": [19, 38, 56, 68, 106, 113, 119, 148, 161, 165, 169, 172, 196, 197, 198, 202, 210, 211, 215, 216, 222, 232, 273, 291, 292, 295, 304, 306, 311, 314, 315, 317, 318, 321, 323, 325, 326, 329, 330, 335], "non": [19, 38, 171, 214, 330], "determinist": 19, "input": 19, "output": [19, 68], "timeout": [19, 94], "limit": [19, 27], "setup": 19, "cleanup": 19, "annot": 19, "execut": [19, 179, 315, 330], "time": [19, 28], "memori": 19, "work": [19, 32, 38, 69], "data": [19, 24], "flaki": 19, "mock": 19, "debug": [19, 315, 320, 329], "fail": [19, 194, 318], "coverag": 19, "util": 19, "export": 19, "xunit": 19, "xml": [19, 38], "format": [19, 60, 317], "tap": 19, "allur": 19, "report": [19, 24, 38], "bug": 19, "tracker": 19, "minim": 19, "warn": [19, 20, 21, 23, 38, 318, 332], "extend": [20, 161], "lint": [20, 332], "overview": [22, 85, 324], "common": [22, 332], "depend": [22, 23, 34, 53], "full": 22, "function": [22, 39], "python": [22, 327], "all": [22, 30, 233, 315, 330], "redhat": 22, "powershel": 22, "add": 22, "ons": 22, "pack": 23, "registri": 23, "storag": 23, "virtual": [23, 320], "environ": 23, "specif": 23, "handl": [23, 187, 189, 266, 318, 319, 330], "encrypt": 23, "sign": 23, "url": 23, "singl": 23, "On": 23, "multipl": [23, 321, 323], "version": [23, 30, 32, 100, 332], "portabl": [23, 35, 60, 318, 332], "pin": 23, "secur": 23, "consider": [23, 329], "best": 23, "practic": 23, "ports_profil": 24, "compil": [24, 25, 28, 30, 33, 34, 35, 38, 39, 68, 124, 161, 248, 315, 318, 320, 324, 326, 329, 332], "port": [24, 103, 315], "profil": [24, 25, 312, 315], "print": [24, 68, 221, 315, 331], "interpret": [24, 34], "backend": [25, 28, 68, 332], "tutor": 26, "wrapper": 27, "workflow": [27, 68, 320], "current": 27, "compat": [28, 321], "what": [28, 33, 34, 36], "ar": [28, 30, 32, 34, 35, 37, 39, 318], "logtalk": [28, 29, 30, 32, 33, 34, 35, 36, 38, 42, 43, 318, 321, 324, 326, 328, 332], "can": [28, 29, 33, 36], "i": [28, 29, 30, 32, 34, 36, 39], "us": [28, 30, 33, 34, 36, 38, 68, 159, 160, 315, 318, 320, 325, 326, 330, 335], "constraint": 28, "base": [28, 30, 38, 313, 321], "packag": 28, "same": [28, 36], "deploy": 29, "standalon": 29, "why": 30, "number": [30, 107, 108, 109, 111, 112, 117, 118, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 267, 268, 269, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "2": [30, 109, 117, 120, 140, 144, 151, 153, 158, 160, 174, 176, 185, 190, 191, 192, 198, 201, 208, 212, 215, 217, 236, 240, 247, 249, 250, 258, 267, 268, 269, 271, 272, 274, 277, 278, 281, 282, 287, 288, 289, 290, 292, 298, 299, 300, 303, 306, 307, 318], "x": 30, "3": [30, 147, 164, 169, 170, 173, 177, 180, 196, 213, 216, 218, 220, 232, 250, 252, 254, 267, 268, 269, 271, 272, 274, 290, 295], "do": [30, 38], "need": 30, "implement": [30, 34, 161, 321, 323, 333], "doe": [30, 34], "term": [30, 44, 68, 81, 161, 193, 315, 318, 320, 326], "expans": [30, 68, 193, 315, 320, 326, 329], "faq": 31, "The": [32, 42, 43, 314, 328, 333], "script": 32, "shortcut": [32, 39], "get": 32, "when": [32, 34, 38], "start": [32, 332], "up": 32, "after": [32, 68, 164], "upgrad": 32, "latest": 32, "licens": [33, 98], "": 33, "distribut": [33, 324], "commerci": 33, "final": 33, "combin": 33, "perform": [34, 319, 321, 325, 329, 332, 335], "meta": [34, 78, 165, 169, 171, 172, 196, 197, 198, 202, 209, 210, 211, 214, 215, 216, 222, 232, 291, 292, 295, 304, 306, 315, 329, 330, 331], "kind": 34, "dynam": [34, 126, 127, 309, 314, 328, 330, 333], "static": 34, "how": 34, "about": 34, "send": [34, 116, 318, 325], "bind": 34, "which": 34, "factor": 34, "most": [34, 321], "crucial": 34, "good": 34, "compar": 34, "my": [35, 36], "across": 35, "program": [36, 312, 315, 316, 319, 321, 335], "should": 36, "prototyp": [36, 321, 323, 328], "class": [36, 313, 321, 323, 328], "both": [36, 321, 326], "mix": 36, "hierarchi": [36, 66, 321, 323], "protocol": [36, 151, 161, 246, 255, 263, 264, 265, 311, 323, 333], "categori": [36, 122, 161, 246, 255, 263, 264, 265, 309, 314, 330], "provid": 36, "compon": [36, 321], "reflect": [36, 224, 313, 330, 334], "profession": 37, "consult": 37, "train": 37, "servic": 37, "troubleshoot": 38, "option": [38, 82, 83, 332], "gecko": 38, "browser": 38, "e": 38, "g": 38, "firefox": 38, "show": 38, "render": 38, "html": [38, 69], "entiti": [38, 68, 135, 161, 317, 318], "brows": 38, "success": 38, "zero": 38, "usabl": 39, "an": [39, 68, 314, 325, 328, 333], "equival": 39, "direct": [39, 124, 135, 138, 148, 154, 161, 314, 317, 318, 326, 328, 330, 333], "ensure_load": 39, "1": [39, 100, 107, 108, 111, 112, 118, 122, 123, 125, 127, 128, 130, 136, 137, 139, 141, 142, 143, 145, 146, 149, 150, 151, 152, 155, 157, 159, 163, 167, 168, 171, 172, 176, 178, 181, 188, 199, 202, 210, 211, 214, 226, 227, 228, 229, 230, 231, 234, 237, 238, 241, 242, 244, 245, 256, 259, 260, 276, 280, 284, 285, 291, 292, 293, 294, 296, 297, 301, 302, 303, 304, 305, 306, 307, 308], "index": 40, "glossari": 41, "handbook": [42, 43], "content": [42, 43, 68, 69], "arbitrari": 44, "pre": 44, "type": [44, 96, 97, 318], "shrinker": 44, "scope": [44, 161, 321, 330], "reproduc": 44, "sequenc": 44, "default": [44, 68, 320], "size": [44, 329], "assignvar": 45, "base64": 46, "encod": [46, 48, 74, 130, 332], "decod": [46, 48, 74], "basic_typ": 47, "cbor": 48, "represent": [48, 74, 81], "core": 49, "coroutin": 50, "csv": 51, "date": 52, "dictionari": 54, "credit": [54, 65, 85, 90, 91], "dif": 55, "edcg": 56, "introduct": 56, "syntax": 56, "declar": [56, 314, 316, 318, 328, 330], "accumul": 56, "pass": [56, 332], "argument": 56, "addit": 56, "event": [57, 189, 266, 312, 315, 319, 321, 325], "expand_library_alias_path": 58, "expect": [59, 318], "see": [59, 82], "also": [59, 82], "genint": 61, "gensym": 62, "git": 63, "grammar": [64, 68, 161, 184, 320, 330], "heap": 65, "hook_flow": 67, "hook_object": 68, "adapt": [68, 324], "rule": [68, 184, 320, 330], "restor": 68, "prevent": 68, "ani": 68, "expand": [68, 320, 333], "claus": [68, 161, 174, 184, 315, 318, 330], "independ": 68, "wrap": 68, "stream": 68, "befor": [68, 170], "them": 68, "fragment": 69, "callback": 69, "id": 70, "librari": [71, 85, 324, 332], "interv": 72, "java": [73, 327], "json": 74, "list": [75, 311], "log": [76, 315], "loop": 77, "meta_compil": 79, "mutat": 80, "nested_dictionari": 81, "curli": 81, "o": 84, "queue": 86, "random": 87, "reader": 88, "recorded_databas": 89, "redi": 90, "set": [91, 332], "statist": 92, "term_io": 93, "tsv": 95, "exampl": [96, 107, 108, 109, 111, 112, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 267, 268, 269, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 324], "ulid": 97, "unicode_data": 98, "author": 98, "websit": 98, "descript": [98, 107, 108, 109, 111, 112, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 267, 268, 269, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "acknowledg": 98, "summari": [98, 309, 311, 312, 313], "unicode_arabic_shap": 98, "pl": 98, "unicode_bidi_mirror": 98, "unicode_block": 98, "unicode_case_fold": 98, "unicode_categori": 98, "unicode_cjk_rad": 98, "unicode_composition_exclus": 98, "unicode_core_properti": 98, "unicode_decomposition_typ": 98, "unicode_derived_ag": 98, "unicode_derived_bidi_class": 98, "unicode_derived_combining_class": 98, "unicode_derived_core_properti": 98, "unicode_derived_decomposition_typ": 98, "unicode_derived_east_asian_width": 98, "unicode_derived_joining_group": 98, "unicode_derived_joining_typ": 98, "unicode_derived_line_break": 98, "unicode_derived_normalization_prop": 98, "unicode_derived_numeric_typ": 98, "unicode_derived_numeric_valu": 98, "unicode_hangul_syllable_typ": 98, "unicode_indic_matra_categori": 98, "unicode_indic_syllabic_categori": 98, "unicode_jamo": 98, "unicode_name_alias": 98, "unicode_nam": 98, "unicode_prop_list": 98, "unicode_range_script": 98, "unicode_script_extens": 98, "unicode_script": 98, "unicode_special_cas": 98, "unicode_unihan_vari": 98, "unicode_vers": 98, "union_find": 99, "uuid": 100, "4": [100, 122, 197, 206, 207, 219, 223, 251, 253], "null": 100, "zipper": 101, "fcube": 102, "metagol": 104, "toychr": 105, "thi": [106, 237], "mode": [107, 108, 109, 111, 112, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 267, 268, 269, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 315, 329, 330], "proof": [107, 108, 109, 111, 112, 117, 118, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 267, 268, 269, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "switch": [110, 315], "extern": 113, "control": [114, 205, 330], "construct": 114, "deleg": [115, 325], "import": [119, 161, 309, 314, 325, 329], "inherit": [119, 321, 323, 325, 329], "alia": [120, 330], "templat": [120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 165, 169, 171, 172, 196, 197, 198, 202, 210, 211, 214, 215, 216, 222, 232, 291, 292, 295, 304, 306], "built_in": 121, "0": [121, 126, 129, 131, 132, 133, 134, 156, 182, 186, 194, 195, 204, 225, 235, 239, 283], "coinduct": [123, 175, 330], "condit": [124, 161, 315, 332], "discontigu": [125, 330], "elif": 128, "els": 129, "end_categori": 131, "end_object": 132, "end_protocol": 133, "endif": 134, "includ": 137, "info": [139, 140], "initi": [141, 328], "meta_non_termin": 142, "meta_pred": 143, "multifil": [145, 326, 330], "5": [146, 165, 243, 257, 261], "op": 147, "privat": [149, 321, 323], "protect": [150, 321, 323], "public": [152, 321, 323], "set_logtalk_flag": [153, 289], "synchron": [155, 330, 335], "thread": [156, 262, 286, 291, 321, 335], "use_modul": [157, 158, 318], "definit": [161, 184, 319, 323, 330], "relat": [161, 263], "instanti": 161, "special": [161, 323], "complement": 161, "identifi": 161, "name": [161, 330, 332], "lambda": [161, 318, 330], "express": [161, 330], "properti": [161, 265, 314, 328, 330, 333], "refer": 162, "manual": [162, 322], "abolish": [163, 246, 314, 319, 328, 333], "ask_quest": 165, "question": [166, 331], "ask": [166, 331], "asserta": 167, "assertz": 168, "bagof": 169, "n": [171, 172], "termin": [171, 214, 330], "catch": 173, "hook": [175, 320], "coinductive_success_hook": 176, "consistency_error": 177, "current_op": 180, "current_pred": 181, "databas": [183, 330], "domain_error": 185, "eo": 186, "evaluation_error": 188, "existence_error": 190, "expand_go": 191, "expand_term": 192, "fals": [195, 318], "findal": [196, 197], "foral": 198, "forward": [199, 200, 333], "goal_expans": 201, "ignor": 202, "built": [203, 273, 314, 318, 328, 329, 330, 333, 335], "method": [203, 318, 330], "instantiation_error": 204, "logic": [205, 321, 330], "message_hook": 206, "message_prefix_stream": 207, "message_token": 208, "onc": 211, "paramet": [212, 328], "permission_error": 213, "phrase": [214, 215, 216], "predicate_properti": 217, "print_messag": 218, "print_message_token": [219, 220], "question_hook": 222, "6": 222, "question_prompt_stream": 223, "repeat": 225, "representation_error": 226, "resource_error": 227, "retract": [228, 330], "retractal": 229, "self": [230, 325], "sender": 231, "setof": 232, "solut": [233, 330], "syntax_error": 234, "system_error": 235, "term_expans": 236, "throw": [238, 330], "true": [239, 318], "type_error": 240, "uninstantiation_error": 241, "abolish_categori": 242, "abolish_ev": 243, "abolish_object": 244, "abolish_protocol": 245, "category_properti": 247, "complements_object": 249, "conforms_to_protocol": 250, "create_categori": 251, "create_logtalk_flag": 252, "create_object": 253, "create_protocol": 254, "current_categori": 256, "current_ev": 257, "current_logtalk_flag": 258, "current_object": 259, "current_protocol": 260, "define_ev": 261, "multi": [262, 286, 321, 332, 335], "engin": [262, 335], "enumer": [264, 265], "extends_categori": 267, "extends_object": 268, "extends_protocol": 269, "implements_protocol": 271, "imports_categori": 272, "instantiates_class": 274, "logtalk_compil": [276, 277], "logtalk_library_path": 278, "logtalk_linter_hook": 279, "7": 279, "logtalk_load": [280, 281], "logtalk_load_context": 282, "logtalk_mak": [283, 284], "logtalk_make_target_act": 285, "object_properti": 287, "protocol_properti": 288, "specializes_class": 290, "threaded_cal": 292, "threaded_cancel": 293, "threaded_engin": 294, "threaded_engine_cr": 295, "threaded_engine_destroi": 296, "threaded_engine_fetch": 297, "threaded_engine_next": 298, "threaded_engine_next_reifi": 299, "threaded_engine_post": 300, "threaded_engine_self": 301, "threaded_engine_yield": 302, "threaded_exit": 303, "threaded_ignor": 304, "threaded_notifi": 305, "threaded_onc": 306, "threaded_peek": 307, "threaded_wait": 308, "attribut": 309, "tutori": 310, "monitor": [312, 319, 333], "A": 313, "hot": 314, "patch": 314, "find": [314, 319, 328, 330, 333], "runtim": [314, 318, 324, 328, 333], "exist": [314, 328, 333], "alias": [314, 328], "relationship": [314, 328, 333], "core_messag": 314, "procedur": 315, "box": [315, 334], "model": 315, "activ": [315, 319], "breakpoint": 315, "hit": 315, "count": 315, "trigger": 315, "remov": 315, "point": 315, "trace": 315, "command": 315, "depth": 315, "mechan": [315, 326], "orient": [316, 321], "describ": 317, "except": [317, 318], "process": [317, 332], "view": [317, 334], "inlin": [317, 329], "comment": [317, 332], "text": [317, 332], "rais": 318, "unknown": 318, "singleton": 318, "variabl": 318, "redefinit": 318, "misspel": 318, "deprec": 318, "miss": 318, "duplic": 318, "alwai": 318, "trivial": 318, "suspici": 318, "driven": [319, 321], "commun": 319, "concern": 319, "semant": 319, "order": [319, 323], "handler": 319, "bypass": 320, "separ": 321, "between": 321, "interfac": 321, "high": 321, "level": 321, "smooth": 321, "learn": 321, "curv": 321, "iso": 321, "standard": [321, 330], "lookup": 323, "redefin": [323, 330], "union": 323, "composit": 323, "versu": 323, "hardwar": 324, "softwar": 324, "comput": 324, "broadcast": 325, "migrat": 326, "encapsul": 326, "unsupport": 326, "search": 326, "path": 326, "deal": 326, "proprietari": 326, "nomenclatur": 327, "smalltalk": 327, "c": 327, "instanc": 328, "access": 328, "proxi": 328, "pseudo": 328, "simplif": 329, "optim": [329, 332], "overhead": 329, "reserv": 330, "pars": 330, "foreign": 330, "token": 331, "intercept": 331, "parallel": 332, "convent": 332, "loader": 332, "read": 332, "onli": 332, "reload": 332, "batch": 332, "avoid": 332, "style": 332, "guidelin": 332, "structur": 334, "transpar": 334, "black": 334, "behavior": 334, "enabl": 335, "prove": 335, "concurr": 335, "asynchron": 335, "One": 335, "wai": 335, "through": 335, "notif": 335}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Bibliography": [[0, "bibliography"]], "flags": [[1, "flags"]], "API documentation": [[1, "api-documentation"], [3, "api-documentation"], [4, "api-documentation"], [6, "api-documentation"], [8, "api-documentation"], [9, "api-documentation"], [10, "api-documentation"], [11, "api-documentation"], [12, "api-documentation"], [13, "api-documentation"], [14, "api-documentation"], [15, "api-documentation"], [18, "api-documentation"], [19, "api-documentation"], [21, "api-documentation"], [23, "api-documentation"], [24, "api-documentation"], [26, "api-documentation"], [27, "api-documentation"], [44, "api-documentation"], [45, "api-documentation"], [46, "api-documentation"], [47, "api-documentation"], [48, "api-documentation"], [49, "api-documentation"], [50, "api-documentation"], [51, "api-documentation"], [52, "api-documentation"], [53, "api-documentation"], [54, "api-documentation"], [55, "api-documentation"], [56, "api-documentation"], [57, "api-documentation"], [58, "api-documentation"], [59, "api-documentation"], [60, "api-documentation"], [61, "api-documentation"], [62, "api-documentation"], [63, "api-documentation"], [64, "api-documentation"], [65, "api-documentation"], [66, "api-documentation"], [67, "api-documentation"], [68, "api-documentation"], [69, "api-documentation"], [70, "api-documentation"], [72, "api-documentation"], [73, "api-documentation"], [74, "api-documentation"], [75, "api-documentation"], [76, "api-documentation"], [77, "api-documentation"], [78, "api-documentation"], [79, "api-documentation"], [80, "api-documentation"], [81, "api-documentation"], [82, "api-documentation"], [83, "api-documentation"], [84, "api-documentation"], [86, "api-documentation"], [87, "api-documentation"], [88, "api-documentation"], [89, "api-documentation"], [90, "api-documentation"], [91, "api-documentation"], [92, "api-documentation"], [93, "api-documentation"], [94, "api-documentation"], [95, "api-documentation"], [96, "api-documentation"], [97, "api-documentation"], [99, "api-documentation"], [100, "api-documentation"], [101, "api-documentation"], [102, "api-documentation"], [104, "api-documentation"], [105, "api-documentation"]], "Loading": [[1, "loading"], [3, "loading"], [4, "loading"], [6, "loading"], [8, "loading"], [9, "loading"], [10, "loading"], [11, "loading"], [12, "loading"], [13, "loading"], [14, "loading"], [15, "loading"], [17, "loading"], [18, "loading"], [19, "loading"], [23, "loading"], [24, "loading"], [25, "loading"], [26, "loading"], [27, "loading"], [44, "loading"], [45, "loading"], [46, "loading"], [47, "loading"], [48, "loading"], [49, "loading"], [50, "loading"], [51, "loading"], [52, "loading"], [53, "loading"], [54, "loading"], [55, "loading"], [56, "loading"], [57, "loading"], [58, "loading"], [59, "loading"], [60, "loading"], [61, "loading"], [62, "loading"], [63, "loading"], [64, "loading"], [65, "loading"], [66, "loading"], [67, "loading"], [68, "loading"], [69, "loading"], [70, "loading"], [72, "loading"], [73, "loading"], [74, "loading"], [75, "loading"], [76, "loading"], [77, "loading"], [78, "loading"], [79, "loading"], [80, "loading"], [81, "loading"], [82, "loading"], [83, "loading"], [84, "loading"], [86, "loading"], [87, "loading"], [88, "loading"], [89, "loading"], [90, "loading"], [91, "loading"], [92, "loading"], [93, "loading"], [94, "loading"], [95, "loading"], [96, "loading"], [97, "loading"], [99, "loading"], [100, "loading"], [101, "loading"], [102, "loading"], [104, "loading"], [105, "loading"]], "Testing": [[1, "testing"], [3, "testing"], [4, "testing"], [6, "testing"], [8, "testing"], [9, "testing"], [10, "testing"], [11, "testing"], [12, "testing"], [13, "testing"], [15, "testing"], [18, "testing"], [19, "testing"], [23, "testing"], [24, "testing"], [25, "testing"], [44, "testing"], [45, "testing"], [46, "testing"], [47, "testing"], [48, "testing"], [49, "testing"], [50, "testing"], [51, "testing"], [54, "testing"], [55, "testing"], [56, "testing"], [59, "testing"], [60, "testing"], [61, "testing"], [62, "testing"], [63, "testing"], [64, "testing"], [65, "testing"], [66, "testing"], [67, "testing"], [68, "testing"], [69, "testing"], [70, "testing"], [72, "testing"], [73, "testing"], [74, "testing"], [75, "testing"], [77, "testing"], [78, "testing"], [79, "testing"], [80, "testing"], [81, "testing"], [82, "testing"], [83, "testing"], [84, "testing"], [86, "testing"], [87, "testing"], [88, "testing"], [89, "testing"], [90, "testing"], [91, "testing"], [92, "testing"], [93, "testing"], [94, "testing"], [95, "testing"], [96, "testing"], [97, "testing"], [99, "testing"], [100, "testing"], [101, "testing"], [102, "testing"], [104, "testing"], [105, "testing"]], "Contributions": [[2, "contributions"]], "iso8601": [[3, "iso8601"]], "pddl_parser": [[4, "pddl-parser"]], "verdi_neruda": [[5, "verdi-neruda"]], "xml_parser": [[6, "xml-parser"]], "Known issues": [[6, "known-issues"], [12, "known-issues"], [15, "known-issues"], [17, "known-issues"], [19, "known-issues"], [23, "known-issues"], [24, "known-issues"], [44, "known-issues"], [73, "known-issues"], [74, "known-issues"], [79, "known-issues"], [84, "known-issues"], [89, "known-issues"], [90, "known-issues"], [94, "known-issues"], [98, "known-issues"]], "asdf": [[7, "asdf"]], "assertions": [[8, "assertions"]], "Adding assertions to your source code": [[8, "adding-assertions-to-your-source-code"]], "Automatically adding file and line context information to assertions": [[8, "automatically-adding-file-and-line-context-information-to-assertions"]], "Suppressing assertion calls from source code": [[8, "suppressing-assertion-calls-from-source-code"]], "Redirecting assertion failure messages": [[8, "redirecting-assertion-failure-messages"]], "Converting assertion failures into errors": [[8, "converting-assertion-failures-into-errors"]], "code_metrics": [[9, "code-metrics"]], "Available metrics": [[9, "available-metrics"]], "Coupling metrics": [[9, "coupling-metrics"]], "Halstead metric": [[9, "halstead-metric"]], "UPN metric": [[9, "upn-metric"]], "Cyclomatic complexity metric": [[9, "cyclomatic-complexity-metric"]], "Usage": [[9, "usage"], [10, "usage"], [11, "usage"], [12, "usage"], [15, "usage"], [17, "usage"], [23, "usage"], [26, "usage"], [44, "usage"], [50, "usage"], [51, "usage"], [54, "usage"], [55, "usage"], [56, "usage"], [58, "usage"], [59, "usage"], [60, "usage"], [61, "usage"], [62, "usage"], [63, "usage"], [64, "usage"], [67, "usage"], [68, "usage"], [70, "usage"], [73, "usage"], [75, "usage"], [77, "usage"], [78, "usage"], [79, "usage"], [80, "usage"], [81, "usage"], [82, "usage"], [83, "usage"], [86, "usage"], [87, "usage"], [89, "usage"], [91, "usage"], [95, "usage"], [98, "usage"], [99, "usage"]], "Excluding code from analysis": [[9, "excluding-code-from-analysis"], [10, "excluding-code-from-analysis"]], "Defining new metrics": [[9, "defining-new-metrics"]], "Third-party tools": [[9, "third-party-tools"]], "Applying metrics to Prolog modules": [[9, "applying-metrics-to-prolog-modules"]], "Applying metrics to plain Prolog code": [[9, "applying-metrics-to-plain-prolog-code"]], "dead_code_scanner": [[10, "dead-code-scanner"]], "Integration with the make tool": [[10, "integration-with-the-make-tool"], [14, "integration-with-the-make-tool"]], "Caveats": [[10, "caveats"]], "Scanning Prolog modules": [[10, "scanning-prolog-modules"]], "Scanning plain Prolog files": [[10, "scanning-plain-prolog-files"]], "debug_messages": [[11, "debug-messages"]], "debugger": [[12, "debugger"]], "Alternative debugger tools": [[12, "alternative-debugger-tools"]], "diagrams": [[13, "diagrams"]], "Requirements": [[13, "requirements"], [15, "requirements"], [17, "requirements"], [18, "requirements"], [23, "requirements"], [98, "requirements"]], "macOS - MacPorts": [[13, "macos-macports"], [22, "macos-macports"]], "macOS - Homebrew": [[13, "macos-homebrew"], [22, "macos-homebrew"]], "Ubuntu": [[13, "ubuntu"], [22, "ubuntu"]], "Windows - Chocolatey": [[13, "windows-chocolatey"], [22, "windows-chocolatey"]], "Installers": [[13, "installers"]], "Supported diagrams": [[13, "supported-diagrams"]], "Graph elements": [[13, "graph-elements"]], "Supported graph languages": [[13, "supported-graph-languages"]], "Customization": [[13, "customization"], [27, "customization"]], "Linking diagrams": [[13, "linking-diagrams"]], "Creating diagrams for Prolog module applications": [[13, "creating-diagrams-for-prolog-module-applications"]], "Creating diagrams for plain Prolog files": [[13, "creating-diagrams-for-plain-prolog-files"]], "Other notes": [[13, "other-notes"], [85, "other-notes"]], "doclet": [[14, "doclet"]], "Automating running doclets": [[14, "automating-running-doclets"]], "help": [[15, "help"]], "Supported operating-systems": [[15, "supported-operating-systems"]], "Experimental features": [[15, "experimental-features"]], "Developer Tools": [[16, "developer-tools"]], "issue_creator": [[17, "issue-creator"]], "lgtdoc": [[18, "lgtdoc"]], "Documenting source code": [[18, "documenting-source-code"]], "Generating documentation": [[18, "generating-documentation"]], "Documentation linter checks": [[18, "documentation-linter-checks"]], "lgtunit": [[19, "lgtunit"]], "Main files": [[19, "main-files"]], "Writing and running tests": [[19, "writing-and-running-tests"]], "Automating running tests": [[19, "automating-running-tests"]], "Parametric test objects": [[19, "parametric-test-objects"]], "Test dialects": [[19, "test-dialects"]], "User-defined test dialects": [[19, "user-defined-test-dialects"]], "QuickCheck": [[19, "quickcheck"]], "Skipping tests": [[19, "skipping-tests"]], "Selecting tests": [[19, "selecting-tests"]], "Checking test goal results": [[19, "checking-test-goal-results"]], "Testing local predicates": [[19, "testing-local-predicates"]], "Testing non-deterministic predicates": [[19, "testing-non-deterministic-predicates"]], "Testing generators": [[19, "testing-generators"]], "Testing input/output predicates": [[19, "testing-input-output-predicates"]], "Suppressing tested predicates output": [[19, "suppressing-tested-predicates-output"]], "Tests with timeout limits": [[19, "tests-with-timeout-limits"]], "Setup and cleanup goals": [[19, "setup-and-cleanup-goals"]], "Test annotations": [[19, "test-annotations"]], "Test execution times and memory usage": [[19, "test-execution-times-and-memory-usage"]], "Working with test data files": [[19, "working-with-test-data-files"]], "Flaky tests": [[19, "flaky-tests"]], "Mocking": [[19, "mocking"]], "Debugging messages in tests": [[19, "debugging-messages-in-tests"]], "Debugging failed tests": [[19, "debugging-failed-tests"]], "Code coverage": [[19, "code-coverage"]], "Utility predicates": [[19, "utility-predicates"]], "Exporting test results in xUnit XML format": [[19, "exporting-test-results-in-xunit-xml-format"]], "Exporting test results in the TAP output format": [[19, "exporting-test-results-in-the-tap-output-format"]], "Generating Allure reports": [[19, "generating-allure-reports"]], "Exporting code coverage results in XML format": [[19, "exporting-code-coverage-results-in-xml-format"]], "Automatically creating bug reports at issue trackers": [[19, "automatically-creating-bug-reports-at-issue-trackers"]], "Minimizing test results output": [[19, "minimizing-test-results-output"]], "Help with warnings": [[19, "help-with-warnings"], [21, "help-with-warnings"], [23, "help-with-warnings"]], "linter": [[20, "linter"]], "Main linter checks": [[20, "main-linter-checks"]], "Help on linter warnings": [[20, "help-on-linter-warnings"]], "Extending the linter": [[20, "extending-the-linter"]], "Linting Prolog modules": [[20, "linting-prolog-modules"]], "Linting plain Prolog files": [[20, "linting-plain-prolog-files"]], "make": [[21, "make"]], "Overview": [[22, "overview"], [85, "overview"]], "Loading the developer tools": [[22, "loading-the-developer-tools"]], "Tools documentation": [[22, "tools-documentation"]], "Tools common flags": [[22, "tools-common-flags"]], "Tools requirements": [[22, "tools-requirements"]], "Tool dependencies for full functionality": [[22, "tool-dependencies-for-full-functionality"]], "Python dependencies (all operating-systems)": [[22, "python-dependencies-all-operating-systems"]], "RedHat": [[22, "redhat"]], "Windows - installers": [[22, "windows-installers"]], "Windows - PowerShell add-ons": [[22, "windows-powershell-add-ons"]], "packs": [[23, "packs"]], "Registries and packs storage": [[23, "registries-and-packs-storage"]], "Virtual environments": [[23, "virtual-environments"]], "Registry specification": [[23, "registry-specification"]], "Registry handling": [[23, "registry-handling"]], "Registry development": [[23, "registry-development"]], "Pack specification": [[23, "pack-specification"]], "Encrypted packs": [[23, "encrypted-packs"]], "Signed packs": [[23, "signed-packs"]], "Pack URLs and Single Sign-On": [[23, "pack-urls-and-single-sign-on"]], "Multiple pack versions": [[23, "multiple-pack-versions"]], "Pack dependencies": [[23, "pack-dependencies"]], "Pack portability": [[23, "pack-portability"]], "Pack development": [[23, "pack-development"]], "Pack handling": [[23, "pack-handling"]], "Pack documentation": [[23, "pack-documentation"]], "Pinning registries and packs": [[23, "pinning-registries-and-packs"]], "Testing packs": [[23, "testing-packs"]], "Security considerations": [[23, "security-considerations"]], "Best practices": [[23, "best-practices"]], "Installing Prolog packs": [[23, "installing-prolog-packs"]], "ports_profiler": [[24, "ports-profiler"]], "Compiling source files for port profiling": [[24, "compiling-source-files-for-port-profiling"]], "Generating profiling data": [[24, "generating-profiling-data"]], "Printing profiling data reports": [[24, "printing-profiling-data-reports"]], "Interpreting profiling data": [[24, "interpreting-profiling-data"]], "Profiling Prolog modules": [[24, "profiling-prolog-modules"]], "Profiling plain Prolog code": [[24, "profiling-plain-prolog-code"]], "profiler": [[25, "profiler"]], "Supported backend Prolog compilers": [[25, "supported-backend-prolog-compilers"]], "Compiling source code for profiling": [[25, "compiling-source-code-for-profiling"]], "tutor": [[26, "tutor"]], "wrapper": [[27, "wrapper"]], "Workflows": [[27, "workflows"]], "Current limitations": [[27, "current-limitations"]], "Compatibility": [[28, "compatibility"]], "What are the backend Prolog compiler requirements to run Logtalk?": [[28, "what-are-the-backend-prolog-compiler-requirements-to-run-logtalk"]], "Can I use constraint-based packages with Logtalk?": [[28, "can-i-use-constraint-based-packages-with-logtalk"]], "Can I use Logtalk objects and Prolog modules at the same time?": [[28, "can-i-use-logtalk-objects-and-prolog-modules-at-the-same-time"]], "Deployment": [[29, "deployment"]], "Can I create standalone applications with Logtalk?": [[29, "can-i-create-standalone-applications-with-logtalk"]], "General": [[30, "general"]], "Why are all versions of Logtalk numbered 2.x or 3.x?": [[30, "why-are-all-versions-of-logtalk-numbered-2-x-or-3-x"]], "Why do I need a Prolog compiler to use Logtalk?": [[30, "why-do-i-need-a-prolog-compiler-to-use-logtalk"]], "Is the Logtalk implementation based on Prolog modules?": [[30, "is-the-logtalk-implementation-based-on-prolog-modules"]], "Does the Logtalk implementation use term-expansion?": [[30, "does-the-logtalk-implementation-use-term-expansion"]], "FAQ": [[31, "faq"]], "Installation": [[32, "installation"]], "The integration scripts/shortcuts are not working!": [[32, "the-integration-scripts-shortcuts-are-not-working"]], "I get errors when starting up Logtalk after upgrading to the latest version!": [[32, "i-get-errors-when-starting-up-logtalk-after-upgrading-to-the-latest-version"]], "Licensing": [[33, "licensing"]], "What\u2019s the Logtalk distribution license?": [[33, "what-s-the-logtalk-distribution-license"]], "Can Logtalk be used in commercial applications?": [[33, "can-logtalk-be-used-in-commercial-applications"]], "What\u2019s the final license for a combination of Logtalk with a Prolog compiler?": [[33, "what-s-the-final-license-for-a-combination-of-logtalk-with-a-prolog-compiler"]], "Performance": [[34, "performance"], [321, "performance"], [329, "performance"]], "Is Logtalk implemented as a meta-interpreter?": [[34, "is-logtalk-implemented-as-a-meta-interpreter"]], "What kind of code Logtalk generates when compiling objects? Dynamic code? Static code?": [[34, "what-kind-of-code-logtalk-generates-when-compiling-objects-dynamic-code-static-code"]], "How about message-sending performance? Does Logtalk use static binding or dynamic binding?": [[34, "how-about-message-sending-performance-does-logtalk-use-static-binding-or-dynamic-binding"]], "Which Prolog-dependent factors are most crucial for good Logtalk performance?": [[34, "which-prolog-dependent-factors-are-most-crucial-for-good-logtalk-performance"]], "How does Logtalk performance compare with plain Prolog and with Prolog modules?": [[34, "how-does-logtalk-performance-compare-with-plain-prolog-and-with-prolog-modules"]], "Portability": [[35, "portability"], [60, "portability"]], "Are my Logtalk applications portable across Prolog compilers?": [[35, "are-my-logtalk-applications-portable-across-prolog-compilers"]], "Are my Logtalk applications portable across operating systems?": [[35, "are-my-logtalk-applications-portable-across-operating-systems"]], "Programming": [[36, "programming"]], "Should I use prototypes or classes in my application?": [[36, "should-i-use-prototypes-or-classes-in-my-application"]], "Can I use both classes and prototypes in the same application?": [[36, "can-i-use-both-classes-and-prototypes-in-the-same-application"]], "Can I mix classes and prototypes in the same hierarchy?": [[36, "can-i-mix-classes-and-prototypes-in-the-same-hierarchy"]], "Can I use a protocol or a category with both prototypes and classes?": [[36, "can-i-use-a-protocol-or-a-category-with-both-prototypes-and-classes"]], "What support is provided in Logtalk for defining and using components?": [[36, "what-support-is-provided-in-logtalk-for-defining-and-using-components"]], "What support is provided in Logtalk for reflective programming?": [[36, "what-support-is-provided-in-logtalk-for-reflective-programming"]], "Support": [[37, "support"]], "Are there professional consulting, training and supporting services?": [[37, "are-there-professional-consulting-training-and-supporting-services"]], "Troubleshooting": [[38, "troubleshooting"]], "Using compiler options on calls to the Logtalk compiling and loading predicates do not work!": [[38, "using-compiler-options-on-calls-to-the-logtalk-compiling-and-loading-predicates-do-not-work"]], "Gecko-based browsers (e.g. Firefox) show non-rendered HTML entities when browsing XML documenting files!": [[38, "gecko-based-browsers-e-g-firefox-show-non-rendered-html-entities-when-browsing-xml-documenting-files"]], "Compiling a source file results in errors or warnings but the Logtalk compiler reports a successful compilation with zero errors and zero warnings!": [[38, "compiling-a-source-file-results-in-errors-or-warnings-but-the-logtalk-compiler-reports-a-successful-compilation-with-zero-errors-and-zero-warnings"]], "Usability": [[39, "usability"]], "Is there a shortcut for compiling and loading source files?": [[39, "is-there-a-shortcut-for-compiling-and-loading-source-files"]], "Is there an equivalent directive to the ensure_loaded/1 Prolog directive?": [[39, "is-there-an-equivalent-directive-to-the-ensure-loaded-1-prolog-directive"]], "Are there shortcuts for the make functionality?": [[39, "are-there-shortcuts-for-the-make-functionality"]], "Index": [[40, "index"]], "Glossary": [[41, "glossary"]], "The Logtalk Handbook": [[42, "the-logtalk-handbook"], [43, "the-logtalk-handbook"]], "Contents": [[42, null], [43, null]], "arbitrary": [[44, "arbitrary"]], "Pre-defined types": [[44, "pre-defined-types"]], "Defining new generators and shrinkers": [[44, "defining-new-generators-and-shrinkers"]], "Scoped generators and shrinkers": [[44, "scoped-generators-and-shrinkers"]], "Reproducing sequences of arbitrary terms": [[44, "reproducing-sequences-of-arbitrary-terms"]], "Default size of generated terms": [[44, "default-size-of-generated-terms"]], "assignvars": [[45, "assignvars"]], "base64": [[46, "base64"]], "Encoding": [[46, "encoding"], [48, "encoding"], [74, "encoding"]], "Decoding": [[46, "decoding"], [48, "decoding"], [74, "decoding"]], "basic_types": [[47, "basic-types"]], "cbor": [[48, "cbor"]], "Representation": [[48, "representation"], [74, "representation"]], "core": [[49, "core"]], "coroutining": [[50, "coroutining"]], "csv": [[51, "csv"]], "dates": [[52, "dates"]], "dependents": [[53, "dependents"]], "dictionaries": [[54, "dictionaries"]], "Credits": [[54, "credits"], [65, "credits"], [85, "credits"], [90, "credits"], [91, "credits"]], "dif": [[55, "dif"]], "edcg": [[56, "edcg"]], "Introduction": [[56, "introduction"]], "Syntax": [[56, "syntax"]], "Declaration of Predicates": [[56, "declaration-of-predicates"]], "Declaration of Accumulators": [[56, "declaration-of-accumulators"]], "Declaration of Passed Arguments": [[56, "declaration-of-passed-arguments"]], "Additional documentation": [[56, "additional-documentation"]], "events": [[57, "events"]], "expand_library_alias_paths": [[58, "expand-library-alias-paths"]], "expecteds": [[59, "expecteds"]], "See also": [[59, "see-also"], [82, "see-also"]], "format": [[60, "format"]], "genint": [[61, "genint"]], "gensym": [[62, "gensym"]], "git": [[63, "git"]], "grammars": [[64, "grammars"]], "heaps": [[65, "heaps"]], "hierarchies": [[66, "hierarchies"]], "hook_flows": [[67, "hook-flows"]], "hook_objects": [[68, "hook-objects"]], "Using the Prolog backend adapter file expansion rules": [[68, "using-the-prolog-backend-adapter-file-expansion-rules"]], "Restoring the default compiler expansion workflow": [[68, "restoring-the-default-compiler-expansion-workflow"]], "Preventing applying any (other) user-defined expansion rules": [[68, "preventing-applying-any-other-user-defined-expansion-rules"]], "Expanding grammar rules into clauses independently of the compiler": [[68, "expanding-grammar-rules-into-clauses-independently-of-the-compiler"]], "Using the expansion rules defined in a Prolog module": [[68, "using-the-expansion-rules-defined-in-a-prolog-module"]], "Wrap the contents of a plain Prolog file as an object": [[68, "wrap-the-contents-of-a-plain-prolog-file-as-an-object"]], "Outputting term-expansion results to a stream or a file": [[68, "outputting-term-expansion-results-to-a-stream-or-a-file"]], "Printing entity predicate goals before or after calling them": [[68, "printing-entity-predicate-goals-before-or-after-calling-them"]], "Suppressing goals": [[68, "suppressing-goals"]], "html": [[69, "html"]], "Generating a HTML document": [[69, "generating-a-html-document"]], "Generating a HTML fragment": [[69, "generating-a-html-fragment"]], "Working with callbacks to generate content": [[69, "working-with-callbacks-to-generate-content"]], "Working with custom elements": [[69, "working-with-custom-elements"]], "ids": [[70, "library-ids"]], "Libraries": [[71, "libraries"]], "intervals": [[72, "intervals"]], "java": [[73, "java"]], "json": [[74, "json"]], "listing": [[75, "listing"]], "logging": [[76, "logging"]], "loops": [[77, "loops"]], "meta": [[78, "meta"]], "meta_compiler": [[79, "meta-compiler"]], "mutations": [[80, "mutations"]], "nested_dictionaries": [[81, "nested-dictionaries"]], "Curly term representation": [[81, "curly-term-representation"]], "optionals": [[82, "optionals"]], "options": [[83, "options"]], "os": [[84, "os"]], "Library documentation": [[85, "library-documentation"]], "Loading libraries": [[85, "loading-libraries"]], "Testing libraries": [[85, "testing-libraries"]], "queues": [[86, "queues"]], "random": [[87, "random"]], "reader": [[88, "reader"]], "recorded_database": [[89, "recorded-database"]], "redis": [[90, "redis"]], "sets": [[91, "sets"]], "statistics": [[92, "statistics"]], "term_io": [[93, "term-io"]], "timeout": [[94, "timeout"]], "tsv": [[95, "tsv"]], "types": [[96, "types"]], "Type-checking": [[96, "type-checking"], [318, "type-checking"]], "Defining new types": [[96, "defining-new-types"]], "Examples": [[96, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [111, "examples"], [112, "examples"], [117, "examples"], [118, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [136, "examples"], [137, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [185, "examples"], [186, "examples"], [188, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [201, "examples"], [202, "examples"], [204, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [220, "examples"], [222, "examples"], [223, "examples"], [225, "examples"], [226, "examples"], [227, "examples"], [228, "examples"], [229, "examples"], [230, "examples"], [231, "examples"], [232, "examples"], [234, "examples"], [235, "examples"], [236, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [241, "examples"], [242, "examples"], [243, "examples"], [244, "examples"], [245, "examples"], [247, "examples"], [249, "examples"], [250, "examples"], [251, "examples"], [252, "examples"], [253, "examples"], [254, "examples"], [256, "examples"], [257, "examples"], [258, "examples"], [259, "examples"], [260, "examples"], [261, "examples"], [267, "examples"], [268, "examples"], [269, "examples"], [271, "examples"], [272, "examples"], [274, "examples"], [276, "examples"], [277, "examples"], [278, "examples"], [279, "examples"], [280, "examples"], [281, "examples"], [282, "examples"], [283, "examples"], [284, "examples"], [285, "examples"], [287, "examples"], [288, "examples"], [289, "examples"], [290, "examples"], [291, "examples"], [292, "examples"], [293, "examples"], [294, "examples"], [295, "examples"], [296, "examples"], [297, "examples"], [298, "examples"], [299, "examples"], [300, "examples"], [301, "examples"], [302, "examples"], [303, "examples"], [304, "examples"], [305, "examples"], [306, "examples"], [307, "examples"], [308, "examples"], [324, "examples"]], "ulid": [[97, "ulid"]], "Generating ULIDs": [[97, "generating-ulids"]], "Type-checking ULIDs": [[97, "type-checking-ulids"]], "unicode_data": [[98, "unicode-data"]], "Authors": [[98, "authors"]], "License": [[98, "license"]], "Website": [[98, "website"]], "Description": [[98, "description"], [107, "description"], [108, "description"], [109, "description"], [111, "description"], [112, "description"], [117, "description"], [118, "description"], [120, "description"], [121, "description"], [122, "description"], [123, "description"], [125, "description"], [126, "description"], [127, "description"], [128, "description"], [129, "description"], [130, "description"], [131, "description"], [132, "description"], [133, "description"], [134, "description"], [136, "description"], [137, "description"], [139, "description"], [140, "description"], [141, "description"], [142, "description"], [143, "description"], [144, "description"], [145, "description"], [146, "description"], [147, "description"], [149, "description"], [150, "description"], [151, "description"], [152, "description"], [153, "description"], [155, "description"], [156, "description"], [157, "description"], [158, "description"], [159, "description"], [160, "description"], [163, "description"], [164, "description"], [165, "description"], [167, "description"], [168, "description"], [169, "description"], [170, "description"], [171, "description"], [172, "description"], [173, "description"], [174, "description"], [176, "description"], [177, "description"], [178, "description"], [180, "description"], [181, "description"], [182, "description"], [185, "description"], [186, "description"], [188, "description"], [190, "description"], [191, "description"], [192, "description"], [194, "description"], [195, "description"], [196, "description"], [197, "description"], [198, "description"], [199, "description"], [201, "description"], [202, "description"], [204, "description"], [206, "description"], [207, "description"], [208, "description"], [210, "description"], [211, "description"], [212, "description"], [213, "description"], [214, "description"], [215, "description"], [216, "description"], [217, "description"], [218, "description"], [219, "description"], [220, "description"], [222, "description"], [223, "description"], [225, "description"], [226, "description"], [227, "description"], [228, "description"], [229, "description"], [230, "description"], [231, "description"], [232, "description"], [234, "description"], [235, "description"], [236, "description"], [237, "description"], [238, "description"], [239, "description"], [240, "description"], [241, "description"], [242, "description"], [243, "description"], [244, "description"], [245, "description"], [247, "description"], [249, "description"], [250, "description"], [251, "description"], [252, "description"], [253, "description"], [254, "description"], [256, "description"], [257, "description"], [258, "description"], [259, "description"], [260, "description"], [261, "description"], [267, "description"], [268, "description"], [269, "description"], [271, "description"], [272, "description"], [274, "description"], [276, "description"], [277, "description"], [278, "description"], [279, "description"], [280, "description"], [281, "description"], [282, "description"], [283, "description"], [284, "description"], [285, "description"], [287, "description"], [288, "description"], [289, "description"], [290, "description"], [291, "description"], [292, "description"], [293, "description"], [294, "description"], [295, "description"], [296, "description"], [297, "description"], [298, "description"], [299, "description"], [300, "description"], [301, "description"], [302, "description"], [303, "description"], [304, "description"], [305, "description"], [306, "description"], [307, "description"], [308, "description"]], "Acknowledgements": [[98, "acknowledgements"]], "Files and API Summary": [[98, "files-and-api-summary"]], "unicode_arabic_shaping.pl": [[98, "unicode-arabic-shaping-pl"]], "unicode_bidi_mirroring.pl": [[98, "unicode-bidi-mirroring-pl"]], "unicode_blocks.pl": [[98, "unicode-blocks-pl"]], "unicode_case_folding.pl": [[98, "unicode-case-folding-pl"]], "unicode_categories.pl": [[98, "unicode-categories-pl"]], "unicode_cjk_radicals.pl": [[98, "unicode-cjk-radicals-pl"]], "unicode_composition_exclusions.pl": [[98, "unicode-composition-exclusions-pl"]], "unicode_core_properties.pl": [[98, "unicode-core-properties-pl"]], "unicode_decomposition_type.pl": [[98, "unicode-decomposition-type-pl"]], "unicode_derived_age.pl": [[98, "unicode-derived-age-pl"]], "unicode_derived_bidi_class.pl": [[98, "unicode-derived-bidi-class-pl"]], "unicode_derived_combining_class.pl": [[98, "unicode-derived-combining-class-pl"]], "unicode_derived_core_properties.pl": [[98, "unicode-derived-core-properties-pl"]], "unicode_derived_decomposition_type.pl": [[98, "unicode-derived-decomposition-type-pl"]], "unicode_derived_east_asian_width.pl": [[98, "unicode-derived-east-asian-width-pl"]], "unicode_derived_joining_group.pl": [[98, "unicode-derived-joining-group-pl"]], "unicode_derived_joining_type.pl": [[98, "unicode-derived-joining-type-pl"]], "unicode_derived_line_break.pl": [[98, "unicode-derived-line-break-pl"]], "unicode_derived_normalization_props.pl": [[98, "unicode-derived-normalization-props-pl"]], "unicode_derived_numeric_type.pl": [[98, "unicode-derived-numeric-type-pl"]], "unicode_derived_numeric_values.pl": [[98, "unicode-derived-numeric-values-pl"]], "unicode_hangul_syllable_type.pl": [[98, "unicode-hangul-syllable-type-pl"]], "unicode_indic_matra_category.pl": [[98, "unicode-indic-matra-category-pl"]], "unicode_indic_syllabic_category.pl": [[98, "unicode-indic-syllabic-category-pl"]], "unicode_jamo.pl": [[98, "unicode-jamo-pl"]], "unicode_name_aliases.pl": [[98, "unicode-name-aliases-pl"]], "unicode_names.pl": [[98, "unicode-names-pl"]], "unicode_prop_list.pl": [[98, "unicode-prop-list-pl"]], "unicode_range_scripts.pl": [[98, "unicode-range-scripts-pl"]], "unicode_script_extensions.pl": [[98, "unicode-script-extensions-pl"]], "unicode_scripts.pl": [[98, "unicode-scripts-pl"]], "unicode_special_casing.pl": [[98, "unicode-special-casing-pl"]], "unicode_unihan_variants.pl": [[98, "unicode-unihan-variants-pl"]], "unicode_version.pl": [[98, "unicode-version-pl"]], "union_find": [[99, "union-find"]], "uuid": [[100, "uuid"]], "Generating version 1 UUIDs": [[100, "generating-version-1-uuids"]], "Generating version 4 UUIDs": [[100, "generating-version-4-uuids"]], "Generating the null UUID": [[100, "generating-the-null-uuid"]], "zippers": [[101, "zippers"]], "fcube": [[102, "fcube"]], "Ports": [[103, "ports"]], "metagol": [[104, "metagol"]], "toychr": [[105, "toychr"]], "Calling predicates in this": [[106, "calling-predicates-in-this"]], "(@)/1": [[107, "call-in-this-1"]], "Modes and number of proofs": [[107, "modes-and-number-of-proofs"], [108, "modes-and-number-of-proofs"], [109, "modes-and-number-of-proofs"], [111, "modes-and-number-of-proofs"], [112, "modes-and-number-of-proofs"], [117, "modes-and-number-of-proofs"], [118, "modes-and-number-of-proofs"], [163, "modes-and-number-of-proofs"], [164, "modes-and-number-of-proofs"], [165, "modes-and-number-of-proofs"], [167, "modes-and-number-of-proofs"], [168, "modes-and-number-of-proofs"], [169, "modes-and-number-of-proofs"], [170, "modes-and-number-of-proofs"], [171, "modes-and-number-of-proofs"], [172, "modes-and-number-of-proofs"], [173, "modes-and-number-of-proofs"], [174, "modes-and-number-of-proofs"], [176, "modes-and-number-of-proofs"], [177, "modes-and-number-of-proofs"], [178, "modes-and-number-of-proofs"], [180, "modes-and-number-of-proofs"], [181, "modes-and-number-of-proofs"], [182, "modes-and-number-of-proofs"], [185, "modes-and-number-of-proofs"], [186, "modes-and-number-of-proofs"], [188, "modes-and-number-of-proofs"], [190, "modes-and-number-of-proofs"], [191, "modes-and-number-of-proofs"], [192, "modes-and-number-of-proofs"], [194, "modes-and-number-of-proofs"], [195, "modes-and-number-of-proofs"], [196, "modes-and-number-of-proofs"], [197, "modes-and-number-of-proofs"], [198, "modes-and-number-of-proofs"], [199, "modes-and-number-of-proofs"], [201, "modes-and-number-of-proofs"], [202, "modes-and-number-of-proofs"], [204, "modes-and-number-of-proofs"], [206, "modes-and-number-of-proofs"], [207, "modes-and-number-of-proofs"], [208, "modes-and-number-of-proofs"], [210, "modes-and-number-of-proofs"], [211, "modes-and-number-of-proofs"], [212, "modes-and-number-of-proofs"], [213, "modes-and-number-of-proofs"], [214, "modes-and-number-of-proofs"], [215, "modes-and-number-of-proofs"], [216, "modes-and-number-of-proofs"], [217, "modes-and-number-of-proofs"], [218, "modes-and-number-of-proofs"], [219, "modes-and-number-of-proofs"], [220, "modes-and-number-of-proofs"], [222, "modes-and-number-of-proofs"], [223, "modes-and-number-of-proofs"], [225, "modes-and-number-of-proofs"], [226, "modes-and-number-of-proofs"], [227, "modes-and-number-of-proofs"], [228, "modes-and-number-of-proofs"], [229, "modes-and-number-of-proofs"], [230, "modes-and-number-of-proofs"], [231, "modes-and-number-of-proofs"], [232, "modes-and-number-of-proofs"], [234, "modes-and-number-of-proofs"], [235, "modes-and-number-of-proofs"], [236, "modes-and-number-of-proofs"], [237, "modes-and-number-of-proofs"], [238, "modes-and-number-of-proofs"], [239, "modes-and-number-of-proofs"], [240, "modes-and-number-of-proofs"], [241, "modes-and-number-of-proofs"], [242, "modes-and-number-of-proofs"], [243, "modes-and-number-of-proofs"], [244, "modes-and-number-of-proofs"], [245, "modes-and-number-of-proofs"], [247, "modes-and-number-of-proofs"], [249, "modes-and-number-of-proofs"], [250, "modes-and-number-of-proofs"], [251, "modes-and-number-of-proofs"], [252, "modes-and-number-of-proofs"], [253, "modes-and-number-of-proofs"], [254, "modes-and-number-of-proofs"], [256, "modes-and-number-of-proofs"], [257, "modes-and-number-of-proofs"], [258, "modes-and-number-of-proofs"], [259, "modes-and-number-of-proofs"], [260, "modes-and-number-of-proofs"], [261, "modes-and-number-of-proofs"], [267, "modes-and-number-of-proofs"], [268, "modes-and-number-of-proofs"], [269, "modes-and-number-of-proofs"], [271, "modes-and-number-of-proofs"], [272, "modes-and-number-of-proofs"], [274, "modes-and-number-of-proofs"], [276, "modes-and-number-of-proofs"], [277, "modes-and-number-of-proofs"], [278, "modes-and-number-of-proofs"], [279, "modes-and-number-of-proofs"], [280, "modes-and-number-of-proofs"], [281, "modes-and-number-of-proofs"], [282, "modes-and-number-of-proofs"], [283, "modes-and-number-of-proofs"], [284, "modes-and-number-of-proofs"], [285, "modes-and-number-of-proofs"], [287, "modes-and-number-of-proofs"], [288, "modes-and-number-of-proofs"], [289, "modes-and-number-of-proofs"], [290, "modes-and-number-of-proofs"], [291, "modes-and-number-of-proofs"], [292, "modes-and-number-of-proofs"], [293, "modes-and-number-of-proofs"], [294, "modes-and-number-of-proofs"], [295, "modes-and-number-of-proofs"], [296, "modes-and-number-of-proofs"], [297, "modes-and-number-of-proofs"], [298, "modes-and-number-of-proofs"], [299, "modes-and-number-of-proofs"], [300, "modes-and-number-of-proofs"], [301, "modes-and-number-of-proofs"], [302, "modes-and-number-of-proofs"], [303, "modes-and-number-of-proofs"], [304, "modes-and-number-of-proofs"], [305, "modes-and-number-of-proofs"], [306, "modes-and-number-of-proofs"], [307, "modes-and-number-of-proofs"], [308, "modes-and-number-of-proofs"]], "Errors": [[107, "errors"], [108, "errors"], [109, "errors"], [111, "errors"], [112, "errors"], [117, "errors"], [118, "errors"], [153, "errors"], [163, "errors"], [164, "errors"], [165, "errors"], [167, "errors"], [168, "errors"], [169, "errors"], [170, "errors"], [171, "errors"], [172, "errors"], [173, "errors"], [174, "errors"], [176, "errors"], [177, "errors"], [178, "errors"], [180, "errors"], [181, "errors"], [182, "errors"], [185, "errors"], [186, "errors"], [188, "errors"], [190, "errors"], [191, "errors"], [192, "errors"], [194, "errors"], [195, "errors"], [196, "errors"], [197, "errors"], [198, "errors"], [199, "errors"], [201, "errors"], [202, "errors"], [204, "errors"], [206, "errors"], [207, "errors"], [208, "errors"], [210, "errors"], [211, "errors"], [212, "errors"], [213, "errors"], [214, "errors"], [215, "errors"], [216, "errors"], [217, "errors"], [218, "errors"], [219, "errors"], [220, "errors"], [222, "errors"], [223, "errors"], [225, "errors"], [226, "errors"], [227, "errors"], [228, "errors"], [229, "errors"], [230, "errors"], [231, "errors"], [232, "errors"], [234, "errors"], [235, "errors"], [236, "errors"], [237, "errors"], [238, "errors"], [239, "errors"], [240, "errors"], [241, "errors"], [242, "errors"], [243, "errors"], [244, "errors"], [245, "errors"], [247, "errors"], [249, "errors"], [250, "errors"], [251, "errors"], [252, "errors"], [253, "errors"], [254, "errors"], [256, "errors"], [257, "errors"], [258, "errors"], [259, "errors"], [260, "errors"], [261, "errors"], [267, "errors"], [268, "errors"], [269, "errors"], [271, "errors"], [272, "errors"], [274, "errors"], [276, "errors"], [277, "errors"], [278, "errors"], [279, "errors"], [280, "errors"], [281, "errors"], [282, "errors"], [283, "errors"], [284, "errors"], [285, "errors"], [287, "errors"], [288, "errors"], [289, "errors"], [290, "errors"], [291, "errors"], [292, "errors"], [293, "errors"], [294, "errors"], [295, "errors"], [296, "errors"], [297, "errors"], [298, "errors"], [299, "errors"], [300, "errors"], [301, "errors"], [302, "errors"], [303, "errors"], [304, "errors"], [305, "errors"], [306, "errors"], [307, "errors"], [308, "errors"]], "(^^)/1": [[108, "control-call-super-1"]], "(<<)/2": [[109, "control-context-switch-2"]], "Context switching calls": [[110, "context-switching-calls"]], "[]/1": [[111, "control-delegate-message-1"]], "{}/1": [[112, "control-external-call-1"]], "Calling external predicates": [[113, "calling-external-predicates"]], "Control constructs": [[114, "control-constructs"]], "Message delegation": [[115, "message-delegation"]], "Message sending": [[116, "message-sending"], [318, "message-sending"]], "(::)/2": [[117, "control-send-to-object-2"]], "(::)/1": [[118, "control-send-to-self-1"]], "Calling imported and inherited predicates": [[119, "calling-imported-and-inherited-predicates"], [325, "calling-imported-and-inherited-predicates"]], "alias/2": [[120, "alias-2"]], "Template and modes": [[120, "template-and-modes"], [121, "template-and-modes"], [122, "template-and-modes"], [123, "template-and-modes"], [125, "template-and-modes"], [126, "template-and-modes"], [127, "template-and-modes"], [128, "template-and-modes"], [129, "template-and-modes"], [130, "template-and-modes"], [131, "template-and-modes"], [132, "template-and-modes"], [133, "template-and-modes"], [134, "template-and-modes"], [136, "template-and-modes"], [137, "template-and-modes"], [139, "template-and-modes"], [140, "template-and-modes"], [141, "template-and-modes"], [142, "template-and-modes"], [143, "template-and-modes"], [144, "template-and-modes"], [145, "template-and-modes"], [146, "template-and-modes"], [147, "template-and-modes"], [149, "template-and-modes"], [150, "template-and-modes"], [151, "template-and-modes"], [152, "template-and-modes"], [153, "template-and-modes"], [155, "template-and-modes"], [156, "template-and-modes"], [157, "template-and-modes"], [158, "template-and-modes"], [159, "template-and-modes"], [160, "template-and-modes"]], "built_in/0": [[121, "built-in-0"]], "category/1-4": [[122, "category-1-4"]], "coinductive/1": [[123, "coinductive-1"]], "Conditional compilation directives": [[124, "conditional-compilation-directives"], [161, "conditional-compilation-directives"]], "discontiguous/1": [[125, "discontiguous-1"]], "dynamic/0": [[126, "dynamic-0"]], "dynamic/1": [[127, "dynamic-1"]], "elif/1": [[128, "elif-1"]], "else/0": [[129, "else-0"]], "encoding/1": [[130, "encoding-1"]], "end_category/0": [[131, "end-category-0"]], "end_object/0": [[132, "end-object-0"]], "end_protocol/0": [[133, "end-protocol-0"]], "endif/0": [[134, "endif-0"]], "Entity directives": [[135, "entity-directives"]], "if/1": [[136, "if-1"]], "include/1": [[137, "include-1"]], "Directives": [[138, "directives"], [161, "directives"]], "info/1": [[139, "info-1"]], "info/2": [[140, "info-2"]], "initialization/1": [[141, "initialization-1"]], "meta_non_terminal/1": [[142, "meta-non-terminal-1"]], "meta_predicate/1": [[143, "meta-predicate-1"]], "mode/2": [[144, "mode-2"]], "multifile/1": [[145, "multifile-1"]], "object/1-5": [[146, "object-1-5"]], "op/3": [[147, "op-3"]], "Predicate directives": [[148, "predicate-directives"], [161, "predicate-directives"]], "private/1": [[149, "private-1"]], "protected/1": [[150, "protected-1"]], "protocol/1-2": [[151, "protocol-1-2"]], "public/1": [[152, "public-1"]], "set_logtalk_flag/2": [[153, "set-logtalk-flag-2"], [289, "set-logtalk-flag-2"]], "Source file directives": [[154, "source-file-directives"], [161, "source-file-directives"]], "synchronized/1": [[155, "synchronized-1"]], "threaded/0": [[156, "threaded-0"]], "use_module/1": [[157, "use-module-1"]], "use_module/2": [[158, "use-module-2"]], "uses/1": [[159, "uses-1"]], "uses/2": [[160, "uses-2"]], "Grammar": [[161, "grammar"]], "Entities": [[161, "entities"]], "Object definition": [[161, "object-definition"]], "Category definition": [[161, "category-definition"]], "Protocol definition": [[161, "protocol-definition"]], "Entity relations": [[161, "entity-relations"]], "Implemented protocols": [[161, "implemented-protocols"]], "Extended protocols": [[161, "extended-protocols"]], "Imported categories": [[161, "imported-categories"]], "Extended objects": [[161, "extended-objects"]], "Extended categories": [[161, "extended-categories"]], "Instantiated objects": [[161, "instantiated-objects"]], "Specialized objects": [[161, "specialized-objects"]], "Complemented objects": [[161, "complemented-objects"]], "Entity and predicate scope": [[161, "entity-and-predicate-scope"]], "Entity identifiers": [[161, "entity-identifiers"]], "Object identifiers": [[161, "object-identifiers"]], "Category identifiers": [[161, "category-identifiers"]], "Protocol identifiers": [[161, "protocol-identifiers"]], "Module identifiers": [[161, "module-identifiers"]], "Source files": [[161, "source-files"], [332, "source-files"]], "Source file names": [[161, "source-file-names"]], "Terms": [[161, "terms"]], "Object terms": [[161, "object-terms"]], "Category terms": [[161, "category-terms"]], "Object directives": [[161, "object-directives"], [328, "object-directives"]], "Category directives": [[161, "category-directives"], [314, "category-directives"]], "Protocol directives": [[161, "protocol-directives"], [333, "protocol-directives"]], "Clauses and goals": [[161, "clauses-and-goals"]], "Lambda expressions": [[161, "lambda-expressions"], [330, "lambda-expressions"]], "Entity properties": [[161, "entity-properties"]], "Predicate properties": [[161, "predicate-properties"], [330, "predicate-properties"]], "Compiler flags": [[161, "compiler-flags"], [332, "compiler-flags"]], "Reference Manual": [[162, "reference-manual"]], "abolish/1": [[163, "abolish-1"]], "after/3": [[164, "after-3"]], "ask_question/5": [[165, "ask-question-5"]], "Meta-predicate template": [[165, "meta-predicate-template"], [169, "meta-predicate-template"], [172, "meta-predicate-template"], [196, "meta-predicate-template"], [197, "meta-predicate-template"], [198, "meta-predicate-template"], [202, "meta-predicate-template"], [210, "meta-predicate-template"], [211, "meta-predicate-template"], [215, "meta-predicate-template"], [216, "meta-predicate-template"], [222, "meta-predicate-template"], [232, "meta-predicate-template"], [291, "meta-predicate-template"], [292, "meta-predicate-template"], [295, "meta-predicate-template"], [304, "meta-predicate-template"], [306, "meta-predicate-template"]], "Question asking": [[166, "question-asking"]], "asserta/1": [[167, "asserta-1"]], "assertz/1": [[168, "assertz-1"]], "bagof/3": [[169, "bagof-3"]], "before/3": [[170, "before-3"]], "call//1-N": [[171, "call-1-n"]], "Meta-non-terminal template": [[171, "meta-non-terminal-template"], [214, "meta-non-terminal-template"]], "call/1-N": [[172, "call-1-n"]], "catch/3": [[173, "catch-3"]], "clause/2": [[174, "clause-2"]], "Coinduction hooks": [[175, "coinduction-hooks"]], "coinductive_success_hook/1-2": [[176, "coinductive-success-hook-1-2"]], "consistency_error/3": [[177, "consistency-error-3"]], "context/1": [[178, "context-1"]], "Execution context": [[179, "execution-context"]], "current_op/3": [[180, "current-op-3"]], "current_predicate/1": [[181, "current-predicate-1"]], "!/0": [[182, "methods-cut-0"]], "Database": [[183, "database"]], "Definite clause grammar rules": [[184, "definite-clause-grammar-rules"], [330, "definite-clause-grammar-rules"]], "domain_error/2": [[185, "domain-error-2"]], "eos//0": [[186, "eos-0"]], "Error handling": [[187, "error-handling"], [318, "error-handling"]], "evaluation_error/1": [[188, "evaluation-error-1"]], "Event handling": [[189, "event-handling"], [266, "event-handling"], [319, "event-handling"]], "existence_error/2": [[190, "existence-error-2"]], "expand_goal/2": [[191, "expand-goal-2"]], "expand_term/2": [[192, "expand-term-2"]], "Term and goal expansion": [[193, "term-and-goal-expansion"], [320, "term-and-goal-expansion"]], "fail/0": [[194, "fail-0"]], "false/0": [[195, "false-0"]], "findall/3": [[196, "findall-3"]], "findall/4": [[197, "findall-4"]], "forall/2": [[198, "forall-2"]], "forward/1": [[199, "forward-1"]], "Message forwarding": [[200, "message-forwarding"]], "goal_expansion/2": [[201, "goal-expansion-2"]], "ignore/1": [[202, "ignore-1"]], "Built-in methods": [[203, "built-in-methods"], [330, "built-in-methods"]], "instantiation_error/0": [[204, "instantiation-error-0"]], "Logic and control": [[205, "logic-and-control"]], "message_hook/4": [[206, "message-hook-4"]], "message_prefix_stream/4": [[207, "message-prefix-stream-4"]], "message_tokens//2": [[208, "message-tokens-2"]], "Meta-calls": [[209, "meta-calls"]], "(\\+)/1": [[210, "methods-not-1"]], "once/1": [[211, "once-1"]], "parameter/2": [[212, "parameter-2"]], "permission_error/3": [[213, "permission-error-3"]], "phrase//1": [[214, "phrase-1"]], "phrase/2": [[215, "phrase-2"]], "phrase/3": [[216, "phrase-3"]], "predicate_property/2": [[217, "predicate-property-2"]], "print_message/3": [[218, "print-message-3"]], "print_message_token/4": [[219, "print-message-token-4"]], "print_message_tokens/3": [[220, "print-message-tokens-3"]], "Message printing": [[221, "message-printing"]], "question_hook/6": [[222, "question-hook-6"]], "question_prompt_stream/4": [[223, "question-prompt-stream-4"]], "Reflection": [[224, "reflection"], [334, "reflection"]], "repeat/0": [[225, "repeat-0"]], "representation_error/1": [[226, "representation-error-1"]], "resource_error/1": [[227, "resource-error-1"]], "retract/1": [[228, "retract-1"]], "retractall/1": [[229, "retractall-1"]], "self/1": [[230, "self-1"]], "sender/1": [[231, "sender-1"]], "setof/3": [[232, "setof-3"]], "All solutions": [[233, "all-solutions"]], "syntax_error/1": [[234, "syntax-error-1"]], "system_error/0": [[235, "system-error-0"]], "term_expansion/2": [[236, "term-expansion-2"]], "this/1": [[237, "this-1"]], "throw/1": [[238, "throw-1"]], "true/0": [[239, "true-0"]], "type_error/2": [[240, "type-error-2"]], "uninstantiation_error/1": [[241, "uninstantiation-error-1"]], "abolish_category/1": [[242, "abolish-category-1"]], "abolish_events/5": [[243, "abolish-events-5"]], "abolish_object/1": [[244, "abolish-object-1"]], "abolish_protocol/1": [[245, "abolish-protocol-1"]], "Abolishing objects, categories and protocols": [[246, "abolishing-objects-categories-and-protocols"]], "category_property/2": [[247, "category-property-2"]], "Compiling and loading source files": [[248, "compiling-and-loading-source-files"]], "complements_object/2": [[249, "complements-object-2"]], "conforms_to_protocol/2-3": [[250, "conforms-to-protocol-2-3"]], "create_category/4": [[251, "create-category-4"]], "create_logtalk_flag/3": [[252, "create-logtalk-flag-3"]], "create_object/4": [[253, "create-object-4"]], "create_protocol/3": [[254, "create-protocol-3"]], "Creating new objects, categories and protocols": [[255, "creating-new-objects-categories-and-protocols"]], "current_category/1": [[256, "current-category-1"]], "current_event/5": [[257, "current-event-5"]], "current_logtalk_flag/2": [[258, "current-logtalk-flag-2"]], "current_object/1": [[259, "current-object-1"]], "current_protocol/1": [[260, "current-protocol-1"]], "define_events/5": [[261, "define-events-5"]], "Multi-threading engines": [[262, "multi-threading-engines"]], "Objects, categories, and protocols relations": [[263, "objects-categories-and-protocols-relations"]], "Enumerating objects, categories and protocols": [[264, "enumerating-objects-categories-and-protocols"]], "Enumerating objects, categories and protocols properties": [[265, "enumerating-objects-categories-and-protocols-properties"]], "extends_category/2-3": [[267, "extends-category-2-3"]], "extends_object/2-3": [[268, "extends-object-2-3"]], "extends_protocol/2-3": [[269, "extends-protocol-2-3"]], "Flags": [[270, "flags"]], "implements_protocol/2-3": [[271, "implements-protocol-2-3"]], "imports_category/2-3": [[272, "imports-category-2-3"]], "Built-in predicates": [[273, "built-in-predicates"]], "instantiates_class/2-3": [[274, "instantiates-class-2-3"]], "Linter": [[275, "linter"]], "logtalk_compile/1": [[276, "logtalk-compile-1"]], "logtalk_compile/2": [[277, "logtalk-compile-2"]], "logtalk_library_path/2": [[278, "logtalk-library-path-2"]], "logtalk_linter_hook/7": [[279, "logtalk-linter-hook-7"]], "logtalk_load/1": [[280, "logtalk-load-1"]], "logtalk_load/2": [[281, "logtalk-load-2"]], "logtalk_load_context/2": [[282, "logtalk-load-context-2"]], "logtalk_make/0": [[283, "logtalk-make-0"]], "logtalk_make/1": [[284, "logtalk-make-1"]], "logtalk_make_target_action/1": [[285, "logtalk-make-target-action-1"]], "Multi-threading": [[286, "multi-threading"]], "object_property/2": [[287, "object-property-2"]], "protocol_property/2": [[288, "protocol-property-2"]], "specializes_class/2-3": [[290, "specializes-class-2-3"]], "threaded/1": [[291, "threaded-1"]], "threaded_call/1-2": [[292, "threaded-call-1-2"]], "threaded_cancel/1": [[293, "threaded-cancel-1"]], "threaded_engine/1": [[294, "threaded-engine-1"]], "threaded_engine_create/3": [[295, "threaded-engine-create-3"]], "threaded_engine_destroy/1": [[296, "threaded-engine-destroy-1"]], "threaded_engine_fetch/1": [[297, "threaded-engine-fetch-1"]], "threaded_engine_next/2": [[298, "threaded-engine-next-2"]], "threaded_engine_next_reified/2": [[299, "threaded-engine-next-reified-2"]], "threaded_engine_post/2": [[300, "threaded-engine-post-2"]], "threaded_engine_self/1": [[301, "threaded-engine-self-1"]], "threaded_engine_yield/1": [[302, "threaded-engine-yield-1"]], "threaded_exit/1-2": [[303, "threaded-exit-1-2"]], "threaded_ignore/1": [[304, "threaded-ignore-1"]], "threaded_notify/1": [[305, "threaded-notify-1"]], "threaded_once/1-2": [[306, "threaded-once-1-2"]], "threaded_peek/1-2": [[307, "threaded-peek-1-2"]], "threaded_wait/1": [[308, "threaded-wait-1"]], "Dynamic object attributes": [[309, "dynamic-object-attributes"]], "Defining a category": [[309, "defining-a-category"]], "Importing the category": [[309, "importing-the-category"]], "Summary": [[309, "summary"], [311, "summary"], [312, "summary"], [313, "summary"]], "Tutorial": [[310, "tutorial"]], "List predicates": [[311, "list-predicates"]], "Defining a list object": [[311, "defining-a-list-object"]], "Defining a list protocol": [[311, "defining-a-list-protocol"]], "Profiling programs": [[312, "profiling-programs"]], "Messages as events": [[312, "messages-as-events"]], "Profilers as monitors": [[312, "profilers-as-monitors"]], "A reflective class-based system": [[313, "a-reflective-class-based-system"]], "Defining the base classes": [[313, "defining-the-base-classes"]], "Categories": [[314, "categories"]], "Defining a new category": [[314, "defining-a-new-category"]], "Hot patching": [[314, "hot-patching"]], "Finding defined categories": [[314, "finding-defined-categories"]], "Creating a new category in runtime": [[314, "creating-a-new-category-in-runtime"]], "Abolishing an existing category": [[314, "abolishing-an-existing-category"]], "Dynamic categories": [[314, "dynamic-categories"]], "Category documentation": [[314, "category-documentation"]], "Loading files into a category": [[314, "loading-files-into-a-category"]], "Declaring object aliases": [[314, "declaring-object-aliases"], [328, "declaring-object-aliases"]], "Category relationships": [[314, "category-relationships"]], "Category properties": [[314, "category-properties"]], "Importing categories": [[314, "importing-categories"]], "Calling category predicates": [[314, "calling-category-predicates"]], "Parametric categories": [[314, "parametric-categories"]], "Built-in categories": [[314, "built-in-categories"]], "The built-in category core_messages": [[314, "the-built-in-category-core-messages"]], "Debugging": [[315, "debugging"]], "Compiling source files in debug mode": [[315, "compiling-source-files-in-debug-mode"]], "Procedure box model": [[315, "procedure-box-model"]], "Activating the debugger": [[315, "activating-the-debugger"]], "Defining breakpoints": [[315, "defining-breakpoints"]], "Defining predicate and clause breakpoints": [[315, "defining-predicate-and-clause-breakpoints"]], "Defining conditional breakpoints": [[315, "defining-conditional-breakpoints"]], "Defining hit count breakpoints": [[315, "defining-hit-count-breakpoints"]], "Defining triggered breakpoints": [[315, "defining-triggered-breakpoints"]], "Defining context breakpoints": [[315, "defining-context-breakpoints"]], "Removing all breakpoints": [[315, "removing-all-breakpoints"]], "Defining log points": [[315, "defining-log-points"]], "Tracing program execution": [[315, "tracing-program-execution"]], "Debugging using breakpoints": [[315, "debugging-using-breakpoints"]], "Debugging commands": [[315, "debugging-commands"]], "Customizing term writing": [[315, "customizing-term-writing"]], "Term write depth": [[315, "term-write-depth"]], "Custom term writing": [[315, "custom-term-writing"]], "Context-switching calls": [[315, "context-switching-calls"]], "Debugging messages": [[315, "debugging-messages"]], "Meta-messages": [[315, "meta-messages"], [331, "meta-messages"]], "Selective printing of debug messages": [[315, "selective-printing-of-debug-messages"]], "Using the term-expansion mechanism for debugging": [[315, "using-the-term-expansion-mechanism-for-debugging"]], "Ports profiling": [[315, "ports-profiling"]], "Debug and trace events": [[315, "debug-and-trace-events"]], "Declarative object-oriented programming": [[316, "declarative-object-oriented-programming"]], "Documenting": [[317, "documenting"]], "Entity documenting directives": [[317, "entity-documenting-directives"]], "Predicate documenting directives": [[317, "predicate-documenting-directives"]], "Describing predicates": [[317, "describing-predicates"]], "Documenting predicate exceptions": [[317, "documenting-predicate-exceptions"]], "Processing and viewing documenting files": [[317, "processing-and-viewing-documenting-files"]], "Inline formatting in comments text": [[317, "inline-formatting-in-comments-text"]], "Diagrams": [[317, "diagrams"]], "Raising Exceptions": [[318, "raising-exceptions"]], "Expected terms": [[318, "expected-terms"]], "Compiler warnings and errors": [[318, "compiler-warnings-and-errors"]], "Unknown entities": [[318, "unknown-entities"]], "Singleton variables": [[318, "singleton-variables"]], "Redefinition of Prolog built-in predicates": [[318, "redefinition-of-prolog-built-in-predicates"]], "Redefinition of Logtalk built-in predicates": [[318, "redefinition-of-logtalk-built-in-predicates"]], "Redefinition of Logtalk built-in methods": [[318, "redefinition-of-logtalk-built-in-methods"]], "Misspell calls of local predicates": [[318, "misspell-calls-of-local-predicates"]], "Portability warnings": [[318, "portability-warnings"]], "Deprecated elements": [[318, "deprecated-elements"]], "Missing directives": [[318, "missing-directives"]], "Duplicated directives": [[318, "duplicated-directives"]], "Duplicated clauses": [[318, "duplicated-clauses"]], "Goals that are always true or false": [[318, "goals-that-are-always-true-or-false"]], "Trivial fails": [[318, "trivial-fails"]], "Suspicious calls": [[318, "suspicious-calls"]], "Lambda variables": [[318, "lambda-variables"]], "Redefinition of predicates declared in uses/2 or use_module/2 directives": [[318, "redefinition-of-predicates-declared-in-uses-2-or-use-module-2-directives"]], "Other warnings and errors": [[318, "other-warnings-and-errors"]], "Runtime errors": [[318, "runtime-errors"]], "Logtalk built-in predicates": [[318, "logtalk-built-in-predicates"]], "Logtalk built-in methods": [[318, "logtalk-built-in-methods"]], "Event-driven programming": [[319, "event-driven-programming"]], "Definitions": [[319, "definitions"]], "Event": [[319, "event"]], "Monitor": [[319, "monitor"]], "Event generation": [[319, "event-generation"]], "Communicating events to monitors": [[319, "communicating-events-to-monitors"]], "Performance concerns": [[319, "performance-concerns"]], "Monitor semantics": [[319, "monitor-semantics"]], "Activation order of monitors": [[319, "activation-order-of-monitors"]], "Defining new events": [[319, "defining-new-events"]], "Abolishing defined events": [[319, "abolishing-defined-events"]], "Finding defined events": [[319, "finding-defined-events"]], "Defining event handlers": [[319, "defining-event-handlers"]], "Defining expansions": [[320, "defining-expansions"]], "Expanding grammar rules": [[320, "expanding-grammar-rules"]], "Bypassing expansions": [[320, "bypassing-expansions"]], "Hook objects": [[320, "hook-objects"]], "Virtual source file terms and loading context": [[320, "virtual-source-file-terms-and-loading-context"]], "Default compiler expansion workflow": [[320, "default-compiler-expansion-workflow"]], "User defined expansion workflows": [[320, "user-defined-expansion-workflows"]], "Using Prolog defined expansions": [[320, "using-prolog-defined-expansions"]], "Debugging expansions": [[320, "debugging-expansions"]], "Main features": [[321, "main-features"]], "Integration of logic and object-oriented programming": [[321, "integration-of-logic-and-object-oriented-programming"]], "Integration of event-driven and object-oriented programming": [[321, "integration-of-event-driven-and-object-oriented-programming"]], "Support for component-based programming": [[321, "support-for-component-based-programming"]], "Support for both prototype and class-based systems": [[321, "support-for-both-prototype-and-class-based-systems"]], "Support for multiple object hierarchies": [[321, "support-for-multiple-object-hierarchies"]], "Separation between interface and implementation": [[321, "separation-between-interface-and-implementation"]], "Private, protected and public inheritance": [[321, "private-protected-and-public-inheritance"]], "Private, protected and public object predicates": [[321, "private-protected-and-public-object-predicates"]], "Parametric objects": [[321, "parametric-objects"], [328, "parametric-objects"]], "High level multi-threading programming support": [[321, "high-level-multi-threading-programming-support"]], "Smooth learning curve": [[321, "smooth-learning-curve"]], "Compatibility with most Prolog systems and the ISO standard": [[321, "compatibility-with-most-prolog-systems-and-the-iso-standard"]], "Logtalk scope": [[321, "logtalk-scope"]], "User Manual": [[322, "user-manual"]], "Inheritance": [[323, "inheritance"]], "Protocol inheritance": [[323, "protocol-inheritance"]], "Lookup order for prototype hierarchies": [[323, "lookup-order-for-prototype-hierarchies"], [323, "inheritance-implementation-prototype"]], "Lookup order for class hierarchies": [[323, "lookup-order-for-class-hierarchies"], [323, "inheritance-implementation-class"]], "Implementation inheritance": [[323, "implementation-inheritance"]], "Redefining inherited predicate definitions": [[323, "redefining-inherited-predicate-definitions"]], "Specializing inherited predicate definitions": [[323, "specializing-inherited-predicate-definitions"]], "Union of inherited and local predicate definitions": [[323, "union-of-inherited-and-local-predicate-definitions"]], "Selective inheritance of predicate definitions": [[323, "selective-inheritance-of-predicate-definitions"]], "Public, protected, and private inheritance": [[323, "public-protected-and-private-inheritance"]], "Multiple inheritance": [[323, "multiple-inheritance"]], "Composition versus multiple inheritance": [[323, "composition-versus-multiple-inheritance"]], "Installing Logtalk": [[324, "installing-logtalk"]], "Hardware and software requirements": [[324, "hardware-and-software-requirements"]], "Computer and operating system": [[324, "computer-and-operating-system"]], "Prolog compiler": [[324, "prolog-compiler"]], "Logtalk installers": [[324, "logtalk-installers"]], "Source distribution": [[324, "source-distribution"]], "Distribution overview": [[324, "distribution-overview"]], "Adapter files": [[324, "adapter-files"]], "Compiler and runtime": [[324, "compiler-and-runtime"]], "Library": [[324, "library"]], "Logtalk source files": [[324, "logtalk-source-files"]], "Messages": [[325, "messages"], [329, "messages"]], "Operators used in message sending": [[325, "operators-used-in-message-sending"]], "Sending a message to an object": [[325, "sending-a-message-to-an-object"]], "Delegating a message to an object": [[325, "delegating-a-message-to-an-object"]], "Sending a message to self": [[325, "sending-a-message-to-self"]], "Broadcasting": [[325, "broadcasting"]], "Message sending and event generation": [[325, "message-sending-and-event-generation"]], "Sending a message from a module": [[325, "sending-a-message-from-a-module"]], "Message sending performance": [[325, "message-sending-performance"]], "Prolog integration and migration": [[326, "prolog-integration-and-migration"]], "Source files with both Prolog code and Logtalk code": [[326, "source-files-with-both-prolog-code-and-logtalk-code"]], "Encapsulating plain Prolog code in objects": [[326, "encapsulating-plain-prolog-code-in-objects"]], "Prolog multifile predicates": [[326, "prolog-multifile-predicates"]], "Converting Prolog modules into objects": [[326, "converting-prolog-modules-into-objects"]], "Compiling Prolog modules as objects": [[326, "compiling-prolog-modules-as-objects"]], "Supported module directives": [[326, "supported-module-directives"]], "Unsupported module directives": [[326, "unsupported-module-directives"]], "Modules using a term-expansion mechanism": [[326, "modules-using-a-term-expansion-mechanism"]], "File search paths": [[326, "file-search-paths"]], "Dealing with proprietary Prolog directives and predicates": [[326, "dealing-with-proprietary-prolog-directives-and-predicates"]], "Calling Prolog module predicates": [[326, "calling-prolog-module-predicates"], [330, "calling-prolog-module-predicates"]], "Loading converted Prolog applications": [[326, "loading-converted-prolog-applications"]], "Nomenclature": [[327, "nomenclature"]], "Prolog nomenclature": [[327, "prolog-nomenclature"]], "Smalltalk nomenclature": [[327, "smalltalk-nomenclature"]], "C++ nomenclature": [[327, "c-nomenclature"]], "Java nomenclature": [[327, "java-nomenclature"]], "Python nomenclature": [[327, "python-nomenclature"]], "Objects": [[328, "objects"]], "Objects, prototypes, classes, and instances": [[328, "objects-prototypes-classes-and-instances"]], "Prototypes": [[328, "prototypes"]], "Classes": [[328, "classes"]], "Defining a new object": [[328, "defining-a-new-object"]], "Accessing object parameters": [[328, "accessing-object-parameters"]], "Parametric object proxies": [[328, "parametric-object-proxies"]], "Finding defined objects": [[328, "finding-defined-objects"]], "Creating a new object in runtime": [[328, "creating-a-new-object-in-runtime"]], "Abolishing an existing object": [[328, "abolishing-an-existing-object"]], "Object initialization": [[328, "object-initialization"]], "Dynamic objects": [[328, "dynamic-objects"]], "Object documentation": [[328, "object-documentation"]], "Loading files into an object": [[328, "loading-files-into-an-object"]], "Object relationships": [[328, "object-relationships"]], "Object properties": [[328, "object-properties"]], "Built-in objects": [[328, "built-in-objects"]], "The built-in pseudo-object user": [[328, "the-built-in-pseudo-object-user"]], "The built-in object logtalk": [[328, "the-built-in-object-logtalk"]], "Source code compilation modes": [[329, "source-code-compilation-modes"]], "Local predicate calls": [[329, "local-predicate-calls"]], "Calls to imported or inherited predicates": [[329, "calls-to-imported-or-inherited-predicates"]], "Calls to module predicates": [[329, "calls-to-module-predicates"]], "Automatic expansion of built-in meta-predicates": [[329, "automatic-expansion-of-built-in-meta-predicates"]], "Inlining": [[329, "inlining"]], "Generated code simplification and optimizations": [[329, "generated-code-simplification-and-optimizations"]], "Size of the generated code": [[329, "size-of-the-generated-code"]], "Debug mode overhead": [[329, "debug-mode-overhead"]], "Other considerations": [[329, "other-considerations"]], "Predicates": [[330, "predicates"]], "Reserved predicate names": [[330, "reserved-predicate-names"]], "Declaring predicates": [[330, "declaring-predicates"]], "Scope directives": [[330, "scope-directives"]], "Mode directive": [[330, "mode-directive"]], "Meta-predicate directive": [[330, "meta-predicate-directive"]], "Discontiguous directive": [[330, "discontiguous-directive"]], "Dynamic directive": [[330, "dynamic-directive"]], "Operator directive": [[330, "operator-directive"]], "Uses directive": [[330, "uses-directive"]], "Alias directive": [[330, "alias-directive"]], "Documenting directive": [[330, "documenting-directive"]], "Multifile directive": [[330, "multifile-directive"]], "Coinductive directive": [[330, "coinductive-directive"]], "Synchronized directive": [[330, "synchronized-directive"]], "Defining predicates": [[330, "defining-predicates"]], "Object predicates": [[330, "object-predicates"]], "Category predicates": [[330, "category-predicates"]], "Meta-predicates": [[330, "meta-predicates"]], "Redefining built-in predicates": [[330, "redefining-built-in-predicates"]], "Logic and control methods": [[330, "logic-and-control-methods"]], "Execution context methods": [[330, "execution-context-methods"]], "Error handling and throwing methods": [[330, "error-handling-and-throwing-methods"]], "Database methods": [[330, "database-methods"]], "Meta-call methods": [[330, "meta-call-methods"]], "All solutions methods": [[330, "all-solutions-methods"]], "Reflection methods": [[330, "reflection-methods"]], "Definite clause grammar parsing methods and non-terminals": [[330, "definite-clause-grammar-parsing-methods-and-non-terminals"]], "Finding declared predicates": [[330, "finding-declared-predicates"]], "Calling Prolog predicates": [[330, "calling-prolog-predicates"]], "Calling Prolog built-in predicates": [[330, "calling-prolog-built-in-predicates"]], "Calling Prolog non-standard built-in meta-predicates": [[330, "calling-prolog-non-standard-built-in-meta-predicates"]], "Calling Prolog foreign predicates": [[330, "calling-prolog-foreign-predicates"]], "Calling Prolog user-defined plain predicates": [[330, "calling-prolog-user-defined-plain-predicates"]], "Calling Prolog module meta-predicates": [[330, "calling-prolog-module-meta-predicates"]], "Defining Prolog multifile predicates": [[330, "defining-prolog-multifile-predicates"]], "Asserting and retracting Prolog predicates": [[330, "asserting-and-retracting-prolog-predicates"]], "Printing messages and asking questions": [[331, "printing-messages-and-asking-questions"]], "Printing messages": [[331, "printing-messages"]], "Message tokenization": [[331, "message-tokenization"]], "Intercepting messages": [[331, "intercepting-messages"]], "Asking questions": [[331, "asking-questions"]], "Intercepting questions": [[331, "intercepting-questions"]], "Writing and running applications": [[332, "writing-and-running-applications"]], "Starting Logtalk": [[332, "starting-logtalk"]], "Running parallel Logtalk processes": [[332, "running-parallel-logtalk-processes"]], "Naming conventions": [[332, "naming-conventions"]], "Source file text encoding": [[332, "source-file-text-encoding"]], "Multi-pass compiler": [[332, "multi-pass-compiler"]], "Compiling and loading your applications": [[332, "compiling-and-loading-your-applications"]], "Compiler errors, warnings, and comments": [[332, "compiler-errors-warnings-and-comments"]], "Loader files": [[332, "loader-files"]], "Libraries of source files": [[332, "libraries-of-source-files"]], "Settings files": [[332, "settings-files"]], "Compiler linter": [[332, "compiler-linter"]], "Read-only flags": [[332, "read-only-flags"]], "Version flags": [[332, "version-flags"]], "Lint flags": [[332, "lint-flags"]], "Optional features compilation flags": [[332, "optional-features-compilation-flags"]], "Backend Prolog compiler and loader flags": [[332, "backend-prolog-compiler-and-loader-flags"]], "Other flags": [[332, "other-flags"]], "User-defined flags": [[332, "user-defined-flags"]], "Reloading source files": [[332, "reloading-source-files"]], "Batch processing": [[332, "batch-processing"]], "Optimizing performance": [[332, "optimizing-performance"]], "Portable applications": [[332, "portable-applications"]], "Conditional compilation": [[332, "conditional-compilation"]], "Avoiding common errors": [[332, "avoiding-common-errors"]], "Coding style guidelines": [[332, "coding-style-guidelines"]], "Protocols": [[333, "protocols"]], "Defining a new protocol": [[333, "defining-a-new-protocol"]], "Finding defined protocols": [[333, "finding-defined-protocols"]], "Creating a new protocol in runtime": [[333, "creating-a-new-protocol-in-runtime"]], "Abolishing an existing protocol": [[333, "abolishing-an-existing-protocol"]], "Dynamic protocols": [[333, "dynamic-protocols"]], "Protocol documentation": [[333, "protocol-documentation"]], "Loading files into a protocol": [[333, "loading-files-into-a-protocol"]], "Protocol relationships": [[333, "protocol-relationships"]], "Protocol properties": [[333, "protocol-properties"]], "Implementing protocols": [[333, "implementing-protocols"]], "Built-in protocols": [[333, "built-in-protocols"]], "The built-in protocol expanding": [[333, "the-built-in-protocol-expanding"]], "The built-in protocol monitoring": [[333, "the-built-in-protocol-monitoring"]], "The built-in protocol forwarding": [[333, "the-built-in-protocol-forwarding"]], "Structural reflection": [[334, "structural-reflection"]], "Transparent-box view": [[334, "transparent-box-view"]], "Black-box view": [[334, "black-box-view"]], "Behavioral reflection": [[334, "behavioral-reflection"]], "Multi-threading programming": [[335, "multi-threading-programming"]], "Enabling multi-threading support": [[335, "enabling-multi-threading-support"]], "Enabling objects to make multi-threading calls": [[335, "enabling-objects-to-make-multi-threading-calls"]], "Multi-threading built-in predicates": [[335, "multi-threading-built-in-predicates"]], "Proving goals concurrently using threads": [[335, "proving-goals-concurrently-using-threads"]], "Proving goals asynchronously using threads": [[335, "proving-goals-asynchronously-using-threads"]], "One-way asynchronous calls": [[335, "one-way-asynchronous-calls"]], "Asynchronous calls and synchronized predicates": [[335, "asynchronous-calls-and-synchronized-predicates"]], "Synchronizing threads through notifications": [[335, "synchronizing-threads-through-notifications"]], "Threaded engines": [[335, "threaded-engines"]], "Multi-threading performance": [[335, "multi-threading-performance"]]}, "indexentries": {"abstract class": [[41, "term-abstract-class"]], "abstract method": [[41, "term-abstract-method"]], "adapter file": [[41, "term-adapter-file"]], "ancestor": [[41, "term-ancestor"]], "backend prolog compiler": [[41, "term-backend-Prolog-compiler"]], "built-in method": [[41, "term-built-in-method"], [163, "index-0"], [164, "index-0"], [165, "index-0"], [167, "index-0"], [168, "index-0"], [169, "index-0"], [170, "index-0"], [171, "index-0"], [172, "index-0"], [173, "index-0"], [174, "index-0"], [176, "index-0"], [177, "index-0"], [178, "index-0"], [180, "index-0"], [181, "index-0"], [182, "index-0"], [185, "index-0"], [186, "index-0"], [188, "index-0"], [190, "index-0"], [191, "index-0"], [192, "index-0"], [194, "index-0"], [195, "index-0"], [196, "index-0"], [197, "index-0"], [198, "index-0"], [199, "index-0"], [201, "index-0"], [202, "index-0"], [204, "index-0"], [206, "index-0"], [207, "index-0"], [208, "index-0"], [210, "index-0"], [211, "index-0"], [212, "index-0"], [213, "index-0"], [214, "index-0"], [215, "index-0"], [216, "index-0"], [217, "index-0"], [218, "index-0"], [219, "index-0"], [220, "index-0"], [222, "index-0"], [223, "index-0"], [225, "index-0"], [226, "index-0"], [227, "index-0"], [228, "index-0"], [229, "index-0"], [230, "index-0"], [231, "index-0"], [232, "index-0"], [234, "index-0"], [235, "index-0"], [236, "index-0"], [237, "index-0"], [238, "index-0"], [239, "index-0"], [240, "index-0"], [241, "index-0"]], "built-in predicate": [[41, "term-built-in-predicate"], [242, "index-0"], [243, "index-0"], [244, "index-0"], [245, "index-0"], [247, "index-0"], [249, "index-0"], [250, "index-0"], [251, "index-0"], [252, "index-0"], [253, "index-0"], [254, "index-0"], [256, "index-0"], [257, "index-0"], [258, "index-0"], [259, "index-0"], [260, "index-0"], [261, "index-0"], [267, "index-0"], [268, "index-0"], [269, "index-0"], [271, "index-0"], [272, "index-0"], [274, "index-0"], [276, "index-0"], [277, "index-0"], [278, "index-0"], [279, "index-0"], [280, "index-0"], [281, "index-0"], [282, "index-0"], [283, "index-0"], [284, "index-0"], [285, "index-0"], [287, "index-0"], [288, "index-0"], [289, "index-0"], [290, "index-0"], [291, "index-0"], [292, "index-0"], [293, "index-0"], [294, "index-0"], [295, "index-0"], [296, "index-0"], [297, "index-0"], [298, "index-0"], [299, "index-0"], [300, "index-0"], [301, "index-0"], [302, "index-0"], [303, "index-0"], [304, "index-0"], [305, "index-0"], [306, "index-0"], [307, "index-0"], [308, "index-0"]], "category": [[41, "term-category"]], "class": [[41, "term-class"]], "clause reference": [[41, "term-clause-reference"]], "closed-world assumption": [[41, "term-closed-world-assumption"]], "closure": [[41, "term-closure"]], "coinductive predicate": [[41, "term-coinductive-predicate"]], "complementing category": [[41, "term-complementing-category"]], "component": [[41, "term-component"]], "directive": [[41, "term-directive"], [120, "index-0"], [121, "index-0"], [122, "index-0"], [123, "index-0"], [125, "index-0"], [126, "index-0"], [127, "index-0"], [128, "index-0"], [129, "index-0"], [130, "index-0"], [131, "index-0"], [132, "index-0"], [133, "index-0"], [134, "index-0"], [136, "index-0"], [137, "index-0"], [139, "index-0"], [140, "index-0"], [141, "index-0"], [142, "index-0"], [143, "index-0"], [144, "index-0"], [145, "index-0"], [146, "index-0"], [147, "index-0"], [149, "index-0"], [150, "index-0"], [151, "index-0"], [152, "index-0"], [153, "index-0"], [155, "index-0"], [156, "index-0"], [157, "index-0"], [158, "index-0"], [159, "index-0"], [160, "index-0"]], "discontiguous predicate": [[41, "term-discontiguous-predicate"]], "doclet file": [[41, "term-doclet-file"]], "doclet object": [[41, "term-doclet-object"]], "dynamic binding": [[41, "term-dynamic-binding"]], "dynamic entity": [[41, "term-dynamic-entity"]], "dynamic predicate": [[41, "term-dynamic-predicate"]], "early binding": [[41, "term-early-binding"]], "encapsulation": [[41, "term-encapsulation"]], "entity": [[41, "term-entity"]], "entity alias": [[41, "term-entity-alias"]], "entity directive": [[41, "term-entity-directive"]], "event": [[41, "term-event"]], "expansion workflow": [[41, "term-expansion-workflow"]], "grammar rule": [[41, "term-grammar-rule"]], "grammar rule non-terminal": [[41, "term-grammar-rule-non-terminal"]], "grammar rule terminal": [[41, "term-grammar-rule-terminal"]], "homoiconic": [[41, "term-homoiconic"]], "hook object": [[41, "term-hook-object"]], "hook predicate": [[41, "term-hook-predicate"]], "hot patching": [[41, "term-hot-patching"]], "identity": [[41, "term-identity"]], "inheritance": [[41, "term-inheritance"]], "instance": [[41, "term-instance"]], "instantiation": [[41, "term-instantiation"]], "interface": [[41, "term-interface"]], "lambda expression": [[41, "term-lambda-expression"]], "lambda free variable": [[41, "term-lambda-free-variable"]], "lambda parameter": [[41, "term-lambda-parameter"]], "late binding": [[41, "term-late-binding"]], "library": [[41, "term-library"]], "library alias": [[41, "term-library-alias"]], "library notation": [[41, "term-library-notation"]], "loader file": [[41, "term-loader-file"]], "local predicate": [[41, "term-local-predicate"]], "message": [[41, "term-message"]], "message lookup": [[41, "term-message-lookup"]], "message to self": [[41, "term-message-to-self"]], "meta-argument": [[41, "term-meta-argument"]], "meta-interpreter": [[41, "term-meta-interpreter"]], "meta-predicate": [[41, "term-meta-predicate"]], "meta-variable": [[41, "term-meta-variable"]], "metaclass": [[41, "term-metaclass"]], "method": [[41, "term-method"]], "module": [[41, "term-module"]], "monitor": [[41, "term-monitor"]], "multifile predicate": [[41, "term-multifile-predicate"]], "naked meta-variable": [[41, "term-naked-meta-variable"]], "object": [[41, "term-object"]], "object database": [[41, "term-object-database"]], "parameter": [[41, "term-parameter"]], "parameter variable": [[41, "term-parameter-variable"]], "parametric category": [[41, "term-parametric-category"]], "parametric entity": [[41, "term-parametric-entity"]], "parametric object": [[41, "term-parametric-object"]], "parametric object proxy": [[41, "term-parametric-object-proxy"]], "parent": [[41, "term-parent"]], "polymorphism": [[41, "term-polymorphism"]], "predicate": [[41, "term-predicate"]], "predicate alias": [[41, "term-predicate-alias"]], "predicate calling context": [[41, "term-predicate-calling-context"]], "predicate declaration": [[41, "term-predicate-declaration"]], "predicate definition": [[41, "term-predicate-definition"]], "predicate definition context": [[41, "term-predicate-definition-context"]], "predicate directive": [[41, "term-predicate-directive"]], "predicate execution context": [[41, "term-predicate-execution-context"]], "predicate scope container": [[41, "term-predicate-scope-container"]], "predicate scope directive": [[41, "term-predicate-scope-directive"]], "predicate shorthand": [[41, "term-predicate-shorthand"]], "primary predicate declaration": [[41, "term-primary-predicate-declaration"]], "private inheritance": [[41, "term-private-inheritance"]], "private predicate": [[41, "term-private-predicate"]], "profiler": [[41, "term-profiler"]], "protected inheritance": [[41, "term-protected-inheritance"]], "protected predicate": [[41, "term-protected-predicate"]], "protocol": [[41, "term-protocol"]], "prototype": [[41, "term-prototype"]], "public inheritance": [[41, "term-public-inheritance"]], "public predicate": [[41, "term-public-predicate"]], "scratch directory": [[41, "term-scratch-directory"]], "self": [[41, "term-self"]], "sender": [[41, "term-sender"]], "settings file": [[41, "term-settings-file"]], "singleton method": [[41, "term-singleton-method"]], "source file": [[41, "term-source-file"]], "source file directive": [[41, "term-source-file-directive"]], "specialization": [[41, "term-specialization"]], "static binding": [[41, "term-static-binding"]], "static entity": [[41, "term-static-entity"]], "steadfastness": [[41, "term-steadfastness"], [332, "index-15"]], "subclass": [[41, "term-subclass"]], "super call": [[41, "term-super-call"]], "superclass": [[41, "term-superclass"]], "synchronized predicate": [[41, "term-synchronized-predicate"]], "template method": [[41, "term-template-method"]], "tester file": [[41, "term-tester-file"]], "this": [[41, "term-this"]], "threaded engine": [[41, "term-threaded-engine"]], "top-level interpreter shorthand": [[41, "term-top-level-interpreter-shorthand"]], "visible predicate": [[41, "term-visible-predicate"]], "(@)/1": [[107, "index-0"]], "control construct": [[107, "index-0"], [108, "index-0"], [109, "index-0"], [111, "index-0"], [112, "index-0"], [117, "index-0"], [118, "index-0"]], "(^^)/1": [[108, "index-0"]], "(<<)/2": [[109, "index-0"]], "[]/1": [[111, "index-0"]], "{}/1": [[112, "index-0"]], "(::)/2": [[117, "index-0"]], "(::)/1": [[118, "index-0"]], "alias/2": [[120, "index-0"]], "built_in/0": [[121, "index-0"]], "category/1-4": [[122, "index-0"]], "coinductive/1": [[123, "index-0"]], "discontiguous/1": [[125, "index-0"]], "dynamic/0": [[126, "index-0"]], "dynamic/1": [[127, "index-0"]], "elif/1": [[128, "index-0"]], "else/0": [[129, "index-0"]], "encoding/1": [[130, "index-0"]], "end_category/0": [[131, "index-0"]], "end_object/0": [[132, "index-0"]], "end_protocol/0": [[133, "index-0"]], "endif/0": [[134, "index-0"]], "if/1": [[136, "index-0"]], "include/1": [[137, "index-0"]], "info/1": [[139, "index-0"]], "info/2": [[140, "index-0"]], "initialization/1": [[141, "index-0"]], "meta_non_terminal/1": [[142, "index-0"]], "meta_predicate/1": [[143, "index-0"]], "mode/2": [[144, "index-0"]], "multifile/1": [[145, "index-0"]], "object/1-5": [[146, "index-0"]], "op/3": [[147, "index-0"]], "private/1": [[149, "index-0"]], "protected/1": [[150, "index-0"]], "protocol/1-2": [[151, "index-0"]], "public/1": [[152, "index-0"]], "set_logtalk_flag/2": [[153, "index-0"], [289, "index-0"]], "synchronized/1": [[155, "index-0"]], "threaded/0": [[156, "index-0"]], "use_module/1": [[157, "index-0"]], "use_module/2": [[158, "index-0"]], "uses/1": [[159, "index-0"]], "uses/2": [[160, "index-0"]], "abolish/1": [[163, "index-0"]], "after/3": [[164, "index-0"]], "ask_question/5": [[165, "index-0"]], "asserta/1": [[167, "index-0"]], "assertz/1": [[168, "index-0"]], "bagof/3": [[169, "index-0"]], "before/3": [[170, "index-0"]], "call//1-n": [[171, "index-0"]], "call/1-n": [[172, "index-0"]], "catch/3": [[173, "index-0"]], "clause/2": [[174, "index-0"]], "coinductive_success_hook/1-2": [[176, "index-0"]], "consistency_error/3": [[177, "index-0"]], "context/1": [[178, "index-0"]], "current_op/3": [[180, "index-0"]], "current_predicate/1": [[181, "index-0"]], "!/0": [[182, "index-0"]], "domain_error/2": [[185, "index-0"]], "eos//0": [[186, "index-0"]], "evaluation_error/1": [[188, "index-0"]], "existence_error/2": [[190, "index-0"]], "expand_goal/2": [[191, "index-0"]], "expand_term/2": [[192, "index-0"]], "fail/0": [[194, "index-0"]], "false/0": [[195, "index-0"]], "findall/3": [[196, "index-0"]], "findall/4": [[197, "index-0"]], "forall/2": [[198, "index-0"]], "forward/1": [[199, "index-0"]], "goal_expansion/2": [[201, "index-0"]], "ignore/1": [[202, "index-0"]], "instantiation_error/0": [[204, "index-0"]], "message_hook/4": [[206, "index-0"]], "message_prefix_stream/4": [[207, "index-0"]], "message_tokens//2": [[208, "index-0"]], "(\\+)/1": [[210, "index-0"]], "once/1": [[211, "index-0"]], "parameter/2": [[212, "index-0"]], "permission_error/3": [[213, "index-0"]], "phrase//1": [[214, "index-0"]], "phrase/2": [[215, "index-0"]], "phrase/3": [[216, "index-0"]], "predicate_property/2": [[217, "index-0"]], "print_message/3": [[218, "index-0"]], "print_message_token/4": [[219, "index-0"]], "print_message_tokens/3": [[220, "index-0"]], "question_hook/6": [[222, "index-0"]], "question_prompt_stream/4": [[223, "index-0"]], "repeat/0": [[225, "index-0"]], "representation_error/1": [[226, "index-0"]], "resource_error/1": [[227, "index-0"]], "retract/1": [[228, "index-0"]], "retractall/1": [[229, "index-0"]], "self/1": [[230, "index-0"]], "sender/1": [[231, "index-0"]], "setof/3": [[232, "index-0"]], "syntax_error/1": [[234, "index-0"]], "system_error/0": [[235, "index-0"]], "term_expansion/2": [[236, "index-0"]], "this/1": [[237, "index-0"]], "throw/1": [[238, "index-0"]], "true/0": [[239, "index-0"]], "type_error/2": [[240, "index-0"]], "ununinstantiation_error/1": [[241, "index-0"]], "abolish_category/1": [[242, "index-0"]], "abolish_events/5": [[243, "index-0"]], "abolish_object/1": [[244, "index-0"]], "abolish_protocol/1": [[245, "index-0"]], "category_property/2": [[247, "index-0"]], "complements_object/2": [[249, "index-0"]], "conforms_to_protocol/2-3": [[250, "index-0"]], "create_category/4": [[251, "index-0"]], "create_logtalk_flag/3": [[252, "index-0"]], "create_object/4": [[253, "index-0"]], "create_protocol/3": [[254, "index-0"]], "current_category/1": [[256, "index-0"]], "current_event/5": [[257, "index-0"]], "current_logtalk_flag/2": [[258, "index-0"]], "current_object/1": [[259, "index-0"]], "current_protocol/1": [[260, "index-0"]], "define_events/5": [[261, "index-0"]], "extends_category/2-3": [[267, "index-0"]], "extends_object/2-3": [[268, "index-0"]], "extends_protocol/2-3": [[269, "index-0"]], "implements_protocol/2-3": [[271, "index-0"]], "imports_category/2-3": [[272, "index-0"]], "instantiates_class/2-3": [[274, "index-0"]], "logtalk_compile/1": [[276, "index-0"]], "logtalk_compile/2": [[277, "index-0"]], "logtalk_library_path/2": [[278, "index-0"]], "logtalk_linter_hook/7": [[279, "index-0"]], "logtalk_load/1": [[280, "index-0"]], "logtalk_load/2": [[281, "index-0"]], "logtalk_load_context/2": [[282, "index-0"]], "logtalk_make/0": [[283, "index-0"]], "logtalk_make/1": [[284, "index-0"]], "logtalk_make_target_action/1": [[285, "index-0"]], "object_property/2": [[287, "index-0"]], "protocol_property/2": [[288, "index-0"]], "specializes_class/2-3": [[290, "index-0"]], "threaded/1": [[291, "index-0"]], "threaded_call/1-2": [[292, "index-0"]], "threaded_cancel/1": [[293, "index-0"]], "threaded_engine/1": [[294, "index-0"]], "threaded_engine_create/3": [[295, "index-0"]], "threaded_engine_destroy/1": [[296, "index-0"]], "threaded_engine_fetch/1": [[297, "index-0"]], "threaded_engine_next/2": [[298, "index-0"]], "threaded_engine_next_reified/2": [[299, "index-0"]], "threaded_engine_post/2": [[300, "index-0"]], "threaded_engine_self/1": [[301, "index-0"]], "threaded_engine_yield/1": [[302, "index-0"]], "threaded_exit/1-2": [[303, "index-0"]], "threaded_ignore/1": [[304, "index-0"]], "threaded_notify/1": [[305, "index-0"]], "threaded_once/1-2": [[306, "index-0"]], "threaded_peek/1-2": [[307, "index-0"]], "threaded_wait/1": [[308, "index-0"]], "begin_of_file": [[320, "index-0"]], "end_of_file": [[320, "index-1"]], "flag": [[332, "index-0"], [332, "index-1"], [332, "index-10"], [332, "index-11"], [332, "index-12"], [332, "index-13"], [332, "index-14"], [332, "index-15"], [332, "index-16"], [332, "index-17"], [332, "index-18"], [332, "index-19"], [332, "index-2"], [332, "index-20"], [332, "index-21"], [332, "index-22"], [332, "index-23"], [332, "index-24"], [332, "index-25"], [332, "index-26"], [332, "index-27"], [332, "index-28"], [332, "index-29"], [332, "index-3"], [332, "index-30"], [332, "index-31"], [332, "index-32"], [332, "index-33"], [332, "index-34"], [332, "index-35"], [332, "index-36"], [332, "index-37"], [332, "index-38"], [332, "index-39"], [332, "index-4"], [332, "index-40"], [332, "index-41"], [332, "index-42"], [332, "index-43"], [332, "index-44"], [332, "index-45"], [332, "index-46"], [332, "index-47"], [332, "index-48"], [332, "index-49"], [332, "index-5"], [332, "index-50"], [332, "index-51"], [332, "index-52"], [332, "index-6"], [332, "index-7"], [332, "index-8"], [332, "index-9"]], "always_true_or_false_goals": [[332, "index-21"]], "arithmetic_expressions": [[332, "index-23"]], "catchall_catch": [[332, "index-34"]], "clean": [[332, "index-52"]], "code_prefix": [[332, "index-45"]], "coinduction": [[332, "index-10"]], "complements": [[332, "index-37"]], "conditionals": [[332, "index-33"]], "context_switching_calls": [[332, "index-40"]], "debug": [[332, "index-48"]], "deprecated": [[332, "index-17"]], "disjunctions": [[332, "index-32"]], "duplicated_clauses": [[332, "index-31"]], "duplicated_directives": [[332, "index-19"]], "dynamic_declarations": [[332, "index-38"]], "encoding_directive": [[332, "index-5"]], "engines": [[332, "index-7"]], "events": [[332, "index-39"]], "grammar_rules": [[332, "index-22"]], "hook": [[332, "index-51"]], "lambda_variables": [[332, "index-24"]], "left_recursion": [[332, "index-35"]], "missing_directives": [[332, "index-18"]], "modules": [[332, "index-9"]], "naming": [[332, "index-30"]], "optimize": [[332, "index-46"]], "portability": [[332, "index-16"]], "prolog_compatible_version": [[332, "index-3"]], "prolog_compiler": [[332, "index-41"]], "prolog_dialect": [[332, "index-1"]], "prolog_loader": [[332, "index-42"]], "prolog_version": [[332, "index-2"]], "redefined_built_ins": [[332, "index-26"]], "redefined_operators": [[332, "index-27"]], "relative_to": [[332, "index-50"]], "reload": [[332, "index-49"]], "report": [[332, "index-44"]], "scratch_directory": [[332, "index-43"]], "settings_file": [[332, "index-0"]], "singleton_variables": [[332, "index-28"]], "source_data": [[332, "index-47"]], "suspicious_calls": [[332, "index-25"]], "tabling": [[332, "index-6"]], "tail_recursive": [[332, "index-36"]], "threads": [[332, "index-8"]], "trivial_goal_fails": [[332, "index-20"]], "undefined_predicates": [[332, "index-14"]], "underscore_variables": [[332, "index-29"]], "unicode": [[332, "index-4"]], "unknown_entities": [[332, "index-12"]], "unknown_predicates": [[332, "index-13"]], "version_data": [[332, "index-11"]], "behavioral reflection": [[334, "index-4"]], "black-box view": [[334, "index-3"]], "reflection": [[334, "index-0"]], "structural reflection": [[334, "index-1"]], "transparent-box view": [[334, "index-2"]]}})